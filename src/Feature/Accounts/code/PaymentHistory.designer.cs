#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sitecore.Feature.Accounts
{
    using System.Data.Linq;
    using System.Data.Linq.Mapping;
    using System.Data;
    using System.Collections.Generic;
    using System.Reflection;
    using System.Linq;
    using System.Linq.Expressions;
    using System.ComponentModel;
    using System;


    [global::System.Data.Linq.Mapping.DatabaseAttribute(Name = "ElectricityTender")]
    public partial class PaymentHistoryDataContext : System.Data.Linq.DataContext
    {

        private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();

        #region Extensibility Method Definitions
        partial void OnCreated();
        partial void InsertPayment_Penalty(Payment_Penalty instance);
        partial void UpdatePayment_Penalty(Payment_Penalty instance);
        partial void DeletePayment_Penalty(Payment_Penalty instance);
        partial void Insertuser_otp(user_otp instance);
        partial void Updateuser_otp(user_otp instance);
        partial void Deleteuser_otp(user_otp instance);
        partial void InsertENachRegistration(ENachRegistration instance);
        partial void UpdateENachRegistration(ENachRegistration instance);
        partial void DeleteENachRegistration(ENachRegistration instance);
        partial void InsertCONAreaCityPinMaster(CONAreaCityPinMaster instance);
        partial void UpdateCONAreaCityPinMaster(CONAreaCityPinMaster instance);
        partial void DeleteCONAreaCityPinMaster(CONAreaCityPinMaster instance);
        partial void InsertCONDocumentSubTypeMaster(CONDocumentSubTypeMaster instance);
        partial void UpdateCONDocumentSubTypeMaster(CONDocumentSubTypeMaster instance);
        partial void DeleteCONDocumentSubTypeMaster(CONDocumentSubTypeMaster instance);
        partial void InsertCONDocumentMaster(CONDocumentMaster instance);
        partial void UpdateCONDocumentMaster(CONDocumentMaster instance);
        partial void DeleteCONDocumentMaster(CONDocumentMaster instance);
        partial void InsertCONPremiseTypeMaster(CONPremiseTypeMaster instance);
        partial void UpdateCONPremiseTypeMaster(CONPremiseTypeMaster instance);
        partial void DeleteCONPremiseTypeMaster(CONPremiseTypeMaster instance);
        partial void InsertOTPValidationAEML(OTPValidationAEML instance);
        partial void UpdateOTPValidationAEML(OTPValidationAEML instance);
        partial void DeleteOTPValidationAEML(OTPValidationAEML instance);
        partial void InsertCONApplicationDocumentDetail(CONApplicationDocumentDetail instance);
        partial void UpdateCONApplicationDocumentDetail(CONApplicationDocumentDetail instance);
        partial void DeleteCONApplicationDocumentDetail(CONApplicationDocumentDetail instance);
        partial void InsertUserProfile(UserProfile instance);
        partial void UpdateUserProfile(UserProfile instance);
        partial void DeleteUserProfile(UserProfile instance);
        partial void InsertPaymentHistory(PaymentHistory instance);
        partial void UpdatePaymentHistory(PaymentHistory instance);
        partial void DeletePaymentHistory(PaymentHistory instance);
        partial void InsertSolarApplicationDocumentMaster(SolarApplicationDocumentMaster instance);
        partial void UpdateSolarApplicationDocumentMaster(SolarApplicationDocumentMaster instance);
        partial void DeleteSolarApplicationDocumentMaster(SolarApplicationDocumentMaster instance);
        partial void InsertSolarApplicationVendorList(SolarApplicationVendorList instance);
        partial void UpdateSolarApplicationVendorList(SolarApplicationVendorList instance);
        partial void DeleteSolarApplicationVendorList(SolarApplicationVendorList instance);
        partial void InsertSolarApplicationVoltageMaster(SolarApplicationVoltageMaster instance);
        partial void UpdateSolarApplicationVoltageMaster(SolarApplicationVoltageMaster instance);
        partial void DeleteSolarApplicationVoltageMaster(SolarApplicationVoltageMaster instance);
        partial void InsertSolarApplicationDocumentDetail(SolarApplicationDocumentDetail instance);
        partial void UpdateSolarApplicationDocumentDetail(SolarApplicationDocumentDetail instance);
        partial void DeleteSolarApplicationDocumentDetail(SolarApplicationDocumentDetail instance);
        partial void InsertSolarApplicationDetail(SolarApplicationDetail instance);
        partial void UpdateSolarApplicationDetail(SolarApplicationDetail instance);
        partial void DeleteSolarApplicationDetail(SolarApplicationDetail instance);
        partial void InsertCONApplicationDetail(CONApplicationDetail instance);
        partial void UpdateCONApplicationDetail(CONApplicationDetail instance);
        partial void DeleteCONApplicationDetail(CONApplicationDetail instance);
        partial void InsertCONLECRegistrationDetail(CONLECRegistrationDetail instance);
        partial void UpdateCONLECRegistrationDetail(CONLECRegistrationDetail instance);
        partial void DeleteCONLECRegistrationDetail(CONLECRegistrationDetail instance);
        partial void InsertCONLECUpdateLog(CONLECUpdateLog instance);
        partial void UpdateCONLECUpdateLog(CONLECUpdateLog instance);
        partial void DeleteCONLECUpdateLog(CONLECUpdateLog instance);
        partial void InsertPANUpdateLog(PANUpdateLog instance);
        partial void UpdatePANUpdateLog(PANUpdateLog instance);
        partial void DeletePANUpdateLog(PANUpdateLog instance);
        partial void InsertComplaintPortalLogginLog(ComplaintPortalLogginLog instance);
        partial void UpdateComplaintPortalLogginLog(ComplaintPortalLogginLog instance);
        partial void DeleteComplaintPortalLogginLog(ComplaintPortalLogginLog instance);
        partial void InsertComplaintPortalCGRFZoneDivisionMaster(ComplaintPortalCGRFZoneDivisionMaster instance);
        partial void UpdateComplaintPortalCGRFZoneDivisionMaster(ComplaintPortalCGRFZoneDivisionMaster instance);
        partial void DeleteComplaintPortalCGRFZoneDivisionMaster(ComplaintPortalCGRFZoneDivisionMaster instance);
        partial void InsertComplaintPortalCGRFDocumentTypeMaster(ComplaintPortalCGRFDocumentTypeMaster instance);
        partial void UpdateComplaintPortalCGRFDocumentTypeMaster(ComplaintPortalCGRFDocumentTypeMaster instance);
        partial void DeleteComplaintPortalCGRFDocumentTypeMaster(ComplaintPortalCGRFDocumentTypeMaster instance);
        partial void InsertComplaintPortalCGRFComplaintHistory(ComplaintPortalCGRFComplaintHistory instance);
        partial void UpdateComplaintPortalCGRFComplaintHistory(ComplaintPortalCGRFComplaintHistory instance);
        partial void DeleteComplaintPortalCGRFComplaintHistory(ComplaintPortalCGRFComplaintHistory instance);
        partial void InsertComplaintPortalCGRFComplaintStatusMaster(ComplaintPortalCGRFComplaintStatusMaster instance);
        partial void UpdateComplaintPortalCGRFComplaintStatusMaster(ComplaintPortalCGRFComplaintStatusMaster instance);
        partial void DeleteComplaintPortalCGRFComplaintStatusMaster(ComplaintPortalCGRFComplaintStatusMaster instance);
        partial void InsertComplaintPortalCGRFAdminLogin(ComplaintPortalCGRFAdminLogin instance);
        partial void UpdateComplaintPortalCGRFAdminLogin(ComplaintPortalCGRFAdminLogin instance);
        partial void DeleteComplaintPortalCGRFAdminLogin(ComplaintPortalCGRFAdminLogin instance);
        partial void InsertComplaintPortalCGRFForwardDetail(ComplaintPortalCGRFForwardDetail instance);
        partial void UpdateComplaintPortalCGRFForwardDetail(ComplaintPortalCGRFForwardDetail instance);
        partial void DeleteComplaintPortalCGRFForwardDetail(ComplaintPortalCGRFForwardDetail instance);
        partial void InsertComplaintPortalCGRFForwardDetail1(ComplaintPortalCGRFForwardDetail1 instance);
        partial void UpdateComplaintPortalCGRFForwardDetail1(ComplaintPortalCGRFForwardDetail1 instance);
        partial void DeleteComplaintPortalCGRFForwardDetail1(ComplaintPortalCGRFForwardDetail1 instance);
        partial void InsertCGRFForwardMail(CGRFForwardMail instance);
        partial void UpdateCGRFForwardMail(CGRFForwardMail instance);
        partial void DeleteCGRFForwardMail(CGRFForwardMail instance);
        partial void InsertComplaintPortalRegisteredComplaintsOrderReviewRequest(ComplaintPortalRegisteredComplaintsOrderReviewRequest instance);
        partial void UpdateComplaintPortalRegisteredComplaintsOrderReviewRequest(ComplaintPortalRegisteredComplaintsOrderReviewRequest instance);
        partial void DeleteComplaintPortalRegisteredComplaintsOrderReviewRequest(ComplaintPortalRegisteredComplaintsOrderReviewRequest instance);
        partial void InsertComplaintPortalCGRFComplaintHearingSchedule(ComplaintPortalCGRFComplaintHearingSchedule instance);
        partial void UpdateComplaintPortalCGRFComplaintHearingSchedule(ComplaintPortalCGRFComplaintHearingSchedule instance);
        partial void DeleteComplaintPortalCGRFComplaintHearingSchedule(ComplaintPortalCGRFComplaintHearingSchedule instance);
        partial void InsertComplaintPortalCGRFComplaintDocument(ComplaintPortalCGRFComplaintDocument instance);
        partial void UpdateComplaintPortalCGRFComplaintDocument(ComplaintPortalCGRFComplaintDocument instance);
        partial void DeleteComplaintPortalCGRFComplaintDocument(ComplaintPortalCGRFComplaintDocument instance);
        partial void InsertComplaintPortalComplaintSubCategoryMaster(ComplaintPortalComplaintSubCategoryMaster instance);
        partial void UpdateComplaintPortalComplaintSubCategoryMaster(ComplaintPortalComplaintSubCategoryMaster instance);
        partial void DeleteComplaintPortalComplaintSubCategoryMaster(ComplaintPortalComplaintSubCategoryMaster instance);
        partial void InsertComplaintPortalComplaintSubTypeMaster(ComplaintPortalComplaintSubTypeMaster instance);
        partial void UpdateComplaintPortalComplaintSubTypeMaster(ComplaintPortalComplaintSubTypeMaster instance);
        partial void DeleteComplaintPortalComplaintSubTypeMaster(ComplaintPortalComplaintSubTypeMaster instance);
        partial void InsertComplaintPortalCGRFApprovedComplaint(ComplaintPortalCGRFApprovedComplaint instance);
        partial void UpdateComplaintPortalCGRFApprovedComplaint(ComplaintPortalCGRFApprovedComplaint instance);
        partial void DeleteComplaintPortalCGRFApprovedComplaint(ComplaintPortalCGRFApprovedComplaint instance);
        partial void InsertSecurityDepositInstallmentOptIn(SecurityDepositInstallmentOptIn instance);
        partial void UpdateSecurityDepositInstallmentOptIn(SecurityDepositInstallmentOptIn instance);
        partial void DeleteSecurityDepositInstallmentOptIn(SecurityDepositInstallmentOptIn instance);
        partial void InsertGreenPowerOptIn(GreenPowerOptIn instance);
        partial void UpdateGreenPowerOptIn(GreenPowerOptIn instance);
        partial void DeleteGreenPowerOptIn(GreenPowerOptIn instance);
        partial void InsertCGRFComplaintsCounter(CGRFComplaintsCounter instance);
        partial void UpdateCGRFComplaintsCounter(CGRFComplaintsCounter instance);
        partial void DeleteCGRFComplaintsCounter(CGRFComplaintsCounter instance);
        partial void InsertCityPayment(CityPayment instance);
        partial void UpdateCityPayment(CityPayment instance);
        partial void DeleteCityPayment(CityPayment instance);
        partial void InsertNEW_CON_APPLICATION_DOCUMENT_DETAIL(NEW_CON_APPLICATION_DOCUMENT_DETAIL instance);
        partial void UpdateNEW_CON_APPLICATION_DOCUMENT_DETAIL(NEW_CON_APPLICATION_DOCUMENT_DETAIL instance);
        partial void DeleteNEW_CON_APPLICATION_DOCUMENT_DETAIL(NEW_CON_APPLICATION_DOCUMENT_DETAIL instance);
        partial void InsertComplaintPortalFeedback(ComplaintPortalFeedback instance);
        partial void UpdateComplaintPortalFeedback(ComplaintPortalFeedback instance);
        partial void DeleteComplaintPortalFeedback(ComplaintPortalFeedback instance);
        partial void InsertNEWCON_LOAD_DETAIL(NEWCON_LOAD_DETAIL instance);
        partial void UpdateNEWCON_LOAD_DETAIL(NEWCON_LOAD_DETAIL instance);
        partial void DeleteNEWCON_LOAD_DETAIL(NEWCON_LOAD_DETAIL instance);
        partial void InsertNEW_CON_CITY_PINCODE_MST(NEW_CON_CITY_PINCODE_MST instance);
        partial void UpdateNEW_CON_CITY_PINCODE_MST(NEW_CON_CITY_PINCODE_MST instance);
        partial void DeleteNEW_CON_CITY_PINCODE_MST(NEW_CON_CITY_PINCODE_MST instance);
        partial void InsertNEWCON_OTHER_DETAIL(NEWCON_OTHER_DETAIL instance);
        partial void UpdateNEWCON_OTHER_DETAIL(NEWCON_OTHER_DETAIL instance);
        partial void DeleteNEWCON_OTHER_DETAIL(NEWCON_OTHER_DETAIL instance);
        partial void InsertUserLoginSession(UserLoginSession instance);
        partial void UpdateUserLoginSession(UserLoginSession instance);
        partial void DeleteUserLoginSession(UserLoginSession instance);
        partial void InsertComplaintPortalComplaintCategoryMaster(ComplaintPortalComplaintCategoryMaster instance);
        partial void UpdateComplaintPortalComplaintCategoryMaster(ComplaintPortalComplaintCategoryMaster instance);
        partial void DeleteComplaintPortalComplaintCategoryMaster(ComplaintPortalComplaintCategoryMaster instance);
        partial void InsertComplaintPortalRegisteredComplaint(ComplaintPortalRegisteredComplaint instance);
        partial void UpdateComplaintPortalRegisteredComplaint(ComplaintPortalRegisteredComplaint instance);
        partial void DeleteComplaintPortalRegisteredComplaint(ComplaintPortalRegisteredComplaint instance);
        partial void InsertNEW_CON_APPLICATION_FORM(NEW_CON_APPLICATION_FORM instance);
        partial void UpdateNEW_CON_APPLICATION_FORM(NEW_CON_APPLICATION_FORM instance);
        partial void DeleteNEW_CON_APPLICATION_FORM(NEW_CON_APPLICATION_FORM instance);
        partial void InsertRatusRevamp(RatusRevamp instance);
        partial void UpdateRatusRevamp(RatusRevamp instance);
        partial void DeleteRatusRevamp(RatusRevamp instance);
        partial void InsertCashFreePayment(CashFreeOrderDetail instance);
        partial void UpdateCashFreePayment(CashFreeOrderDetail instance);
        partial void DeleteCashFreePayment(CashFreeOrderDetail instance);
        partial void InsertSubmityourQuery(SubmityourQuery instance);
        partial void UpdateSubmityourQuery(SubmityourQuery instance);
        partial void DeleteSubmityourQuery(SubmityourQuery instance);
        #endregion

        public PaymentHistoryDataContext() :
base(global::System.Configuration.ConfigurationManager.ConnectionStrings["ElectricityTenderConnectionString"].ConnectionString, mappingSource)



        {
            OnCreated();
        }
        public PaymentHistoryDataContext(string connection) :
                base(connection, mappingSource)
        {
            OnCreated();
        }

        public PaymentHistoryDataContext(System.Data.IDbConnection connection) :
                base(connection, mappingSource)
        {
            OnCreated();
        }

        public PaymentHistoryDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) :
                base(connection, mappingSource)
        {
            OnCreated();
        }

        public PaymentHistoryDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) :
                base(connection, mappingSource)
        {
            OnCreated();
        }

        public System.Data.Linq.Table<Payment_Penalty> Payment_Penalties
        {
            get
            {
                return this.GetTable<Payment_Penalty>();
            }
        }

        public System.Data.Linq.Table<user_otp> user_otps
        {
            get
            {
                return this.GetTable<user_otp>();
            }
        }

        public System.Data.Linq.Table<ENachRegistration> ENachRegistrations
        {
            get
            {
                return this.GetTable<ENachRegistration>();
            }
        }

        public System.Data.Linq.Table<CONAreaCityPinMaster> CONAreaCityPinMasters
        {
            get
            {
                return this.GetTable<CONAreaCityPinMaster>();
            }
        }

        public System.Data.Linq.Table<CONDocumentSubTypeMaster> CONDocumentSubTypeMasters
        {
            get
            {
                return this.GetTable<CONDocumentSubTypeMaster>();
            }
        }

        public System.Data.Linq.Table<CONDocumentMaster> CONDocumentMasters
        {
            get
            {
                return this.GetTable<CONDocumentMaster>();
            }
        }

        public System.Data.Linq.Table<CONPremiseTypeMaster> CONPremiseTypeMasters
        {
            get
            {
                return this.GetTable<CONPremiseTypeMaster>();
            }
        }

        public System.Data.Linq.Table<OTPValidationAEML> OTPValidationAEMLs
        {
            get
            {
                return this.GetTable<OTPValidationAEML>();
            }
        }

        public System.Data.Linq.Table<CONApplicationDocumentDetail> CONApplicationDocumentDetails
        {
            get
            {
                return this.GetTable<CONApplicationDocumentDetail>();
            }
        }

        public System.Data.Linq.Table<UserProfile> UserProfiles
        {
            get
            {
                return this.GetTable<UserProfile>();
            }
        }

        public System.Data.Linq.Table<PaymentHistory> PaymentHistories
        {
            get
            {
                return this.GetTable<PaymentHistory>();
            }
        }

        public System.Data.Linq.Table<SolarApplicationDocumentMaster> SolarApplicationDocumentMasters
        {
            get
            {
                return this.GetTable<SolarApplicationDocumentMaster>();
            }
        }

        public System.Data.Linq.Table<SolarApplicationVendorList> SolarApplicationVendorLists
        {
            get
            {
                return this.GetTable<SolarApplicationVendorList>();
            }
        }

        public System.Data.Linq.Table<SolarApplicationVoltageMaster> SolarApplicationVoltageMasters
        {
            get
            {
                return this.GetTable<SolarApplicationVoltageMaster>();
            }
        }

        public System.Data.Linq.Table<SolarApplicationDocumentDetail> SolarApplicationDocumentDetails
        {
            get
            {
                return this.GetTable<SolarApplicationDocumentDetail>();
            }
        }

        public System.Data.Linq.Table<SolarApplicationDetail> SolarApplicationDetails
        {
            get
            {
                return this.GetTable<SolarApplicationDetail>();
            }
        }

        public System.Data.Linq.Table<CONApplicationDetail> CONApplicationDetails
        {
            get
            {
                return this.GetTable<CONApplicationDetail>();
            }
        }

        public System.Data.Linq.Table<CONLECRegistrationDetail> CONLECRegistrationDetails
        {
            get
            {
                return this.GetTable<CONLECRegistrationDetail>();
            }
        }

        public System.Data.Linq.Table<CONLECUpdateLog> CONLECUpdateLogs
        {
            get
            {
                return this.GetTable<CONLECUpdateLog>();
            }
        }

        public System.Data.Linq.Table<PANUpdateLog> PANUpdateLogs
        {
            get
            {
                return this.GetTable<PANUpdateLog>();
            }
        }

        public System.Data.Linq.Table<ComplaintPortalLogginLog> ComplaintPortalLogginLogs
        {
            get
            {
                return this.GetTable<ComplaintPortalLogginLog>();
            }
        }

        public System.Data.Linq.Table<ComplaintPortalCGRFZoneDivisionMaster> ComplaintPortalCGRFZoneDivisionMasters
        {
            get
            {
                return this.GetTable<ComplaintPortalCGRFZoneDivisionMaster>();
            }
        }

        public System.Data.Linq.Table<ComplaintPortalCGRFDocumentTypeMaster> ComplaintPortalCGRFDocumentTypeMasters
        {
            get
            {
                return this.GetTable<ComplaintPortalCGRFDocumentTypeMaster>();
            }
        }

        public System.Data.Linq.Table<ComplaintPortalCGRFComplaintHistory> ComplaintPortalCGRFComplaintHistories
        {
            get
            {
                return this.GetTable<ComplaintPortalCGRFComplaintHistory>();
            }
        }

        public System.Data.Linq.Table<ComplaintPortalCGRFComplaintStatusMaster> ComplaintPortalCGRFComplaintStatusMasters
        {
            get
            {
                return this.GetTable<ComplaintPortalCGRFComplaintStatusMaster>();
            }
        }

        public System.Data.Linq.Table<ComplaintPortalCGRFAdminLogin> ComplaintPortalCGRFAdminLogins
        {
            get
            {
                return this.GetTable<ComplaintPortalCGRFAdminLogin>();
            }
        }

        public System.Data.Linq.Table<ComplaintPortalCGRFForwardDetail> ComplaintPortalCGRFForwardDetails
        {
            get
            {
                return this.GetTable<ComplaintPortalCGRFForwardDetail>();
            }
        }

        public System.Data.Linq.Table<ComplaintPortalCGRFForwardDetail1> ComplaintPortalCGRFForwardDetail1s
        {
            get
            {
                return this.GetTable<ComplaintPortalCGRFForwardDetail1>();
            }
        }

        public System.Data.Linq.Table<CGRFForwardMail> CGRFForwardMails
        {
            get
            {
                return this.GetTable<CGRFForwardMail>();
            }
        }

        public System.Data.Linq.Table<ComplaintPortalRegisteredComplaintsOrderReviewRequest> ComplaintPortalRegisteredComplaintsOrderReviewRequests
        {
            get
            {
                return this.GetTable<ComplaintPortalRegisteredComplaintsOrderReviewRequest>();
            }
        }

        public System.Data.Linq.Table<ComplaintPortalCGRFComplaintHearingSchedule> ComplaintPortalCGRFComplaintHearingSchedules
        {
            get
            {
                return this.GetTable<ComplaintPortalCGRFComplaintHearingSchedule>();
            }
        }

        public System.Data.Linq.Table<ComplaintPortalCGRFComplaintDocument> ComplaintPortalCGRFComplaintDocuments
        {
            get
            {
                return this.GetTable<ComplaintPortalCGRFComplaintDocument>();
            }
        }

        public System.Data.Linq.Table<ComplaintPortalComplaintSubCategoryMaster> ComplaintPortalComplaintSubCategoryMasters
        {
            get
            {
                return this.GetTable<ComplaintPortalComplaintSubCategoryMaster>();
            }
        }

        public System.Data.Linq.Table<ComplaintPortalComplaintSubTypeMaster> ComplaintPortalComplaintSubTypeMasters
        {
            get
            {
                return this.GetTable<ComplaintPortalComplaintSubTypeMaster>();
            }
        }

        public System.Data.Linq.Table<ComplaintPortalCGRFApprovedComplaint> ComplaintPortalCGRFApprovedComplaints
        {
            get
            {
                return this.GetTable<ComplaintPortalCGRFApprovedComplaint>();
            }
        }

        public System.Data.Linq.Table<SecurityDepositInstallmentOptIn> SecurityDepositInstallmentOptIns
        {
            get
            {
                return this.GetTable<SecurityDepositInstallmentOptIn>();
            }
        }

        public System.Data.Linq.Table<GreenPowerOptIn> GreenPowerOptIns
        {
            get
            {
                return this.GetTable<GreenPowerOptIn>();
            }
        }

        public System.Data.Linq.Table<NEWCON_MST_CONNECTION_TYPE> NEWCON_MST_CONNECTION_TYPEs
        {
            get
            {
                return this.GetTable<NEWCON_MST_CONNECTION_TYPE>();
            }
        }

        public System.Data.Linq.Table<NEWCON_MST_APPLICANT_TITLE> NEWCON_MST_APPLICANT_TITLEs
        {
            get
            {
                return this.GetTable<NEWCON_MST_APPLICANT_TITLE>();
            }
        }

        public System.Data.Linq.Table<NEWCON_MST_BILL_LANGUAGE> NEWCON_MST_BILL_LANGUAGEs
        {
            get
            {
                return this.GetTable<NEWCON_MST_BILL_LANGUAGE>();
            }
        }

        public System.Data.Linq.Table<NEWCON_MST_METERLOAD_TYPE> NEWCON_MST_METERLOAD_TYPEs
        {
            get
            {
                return this.GetTable<NEWCON_MST_METERLOAD_TYPE>();
            }
        }

        public System.Data.Linq.Table<CGRFComplaintsCounter> CGRFComplaintsCounters
        {
            get
            {
                return this.GetTable<CGRFComplaintsCounter>();
            }
        }

        public System.Data.Linq.Table<CityPayment> CityPayments
        {
            get
            {
                return this.GetTable<CityPayment>();
            }
        }

        public System.Data.Linq.Table<NEWCON_MST_VOLTAGE_LEVEL> NEWCON_MST_VOLTAGE_LEVELs
        {
            get
            {
                return this.GetTable<NEWCON_MST_VOLTAGE_LEVEL>();
            }
        }

        public System.Data.Linq.Table<NEWCON_MST_PREMISE_TYPE> NEWCON_MST_PREMISE_TYPEs
        {
            get
            {
                return this.GetTable<NEWCON_MST_PREMISE_TYPE>();
            }
        }

        public System.Data.Linq.Table<NEW_CON_APPLICATION_DOCUMENT_DETAIL> NEW_CON_APPLICATION_DOCUMENT_DETAILs
        {
            get
            {
                return this.GetTable<NEW_CON_APPLICATION_DOCUMENT_DETAIL>();
            }
        }

        public System.Data.Linq.Table<NEWCON_DOCUMENTMASTER> NEWCON_DOCUMENTMASTERs
        {
            get
            {
                return this.GetTable<NEWCON_DOCUMENTMASTER>();
            }
        }

        public System.Data.Linq.Table<NEW_CON_APPLICATIONSUBTYPE> NEW_CON_APPLICATIONSUBTYPEs
        {
            get
            {
                return this.GetTable<NEW_CON_APPLICATIONSUBTYPE>();
            }
        }

        public System.Data.Linq.Table<ComplaintPortalFeedback> ComplaintPortalFeedbacks
        {
            get
            {
                return this.GetTable<ComplaintPortalFeedback>();
            }
        }

        public System.Data.Linq.Table<NEWCON_MST_PURPOSE_CONNECTION> NEWCON_MST_PURPOSE_CONNECTIONs
        {
            get
            {
                return this.GetTable<NEWCON_MST_PURPOSE_CONNECTION>();
            }
        }

        public System.Data.Linq.Table<NEWCON_LOAD_DETAIL> NEWCON_LOAD_DETAILs
        {
            get
            {
                return this.GetTable<NEWCON_LOAD_DETAIL>();
            }
        }

        public System.Data.Linq.Table<NEW_CON_NormativeCharge> NEW_CON_NormativeCharges
        {
            get
            {
                return this.GetTable<NEW_CON_NormativeCharge>();
            }
        }

        public System.Data.Linq.Table<NEW_CON_APPLICATIONTYPE> NEW_CON_APPLICATIONTYPEs
        {
            get
            {
                return this.GetTable<NEW_CON_APPLICATIONTYPE>();
            }
        }

        public System.Data.Linq.Table<NEWCON_MST_APPLICANT_TYPE> NEWCON_MST_APPLICANT_TYPEs
        {
            get
            {
                return this.GetTable<NEWCON_MST_APPLICANT_TYPE>();
            }
        }

        public System.Data.Linq.Table<NEW_CON_CITY_PINCODE_MST> NEW_CON_CITY_PINCODE_MSTs
        {
            get
            {
                return this.GetTable<NEW_CON_CITY_PINCODE_MST>();
            }
        }

        public System.Data.Linq.Table<NEWCON_OTHER_DETAIL> NEWCON_OTHER_DETAILs
        {
            get
            {
                return this.GetTable<NEWCON_OTHER_DETAIL>();
            }
        }

        public System.Data.Linq.Table<UserLoginSession> UserLoginSessions
        {
            get
            {
                return this.GetTable<UserLoginSession>();
            }
        }

        public System.Data.Linq.Table<ComplaintPortalComplaintCategoryMaster> ComplaintPortalComplaintCategoryMasters
        {
            get
            {
                return this.GetTable<ComplaintPortalComplaintCategoryMaster>();
            }
        }

        public System.Data.Linq.Table<ComplaintPortalRegisteredComplaint> ComplaintPortalRegisteredComplaints
        {
            get
            {
                return this.GetTable<ComplaintPortalRegisteredComplaint>();
            }
        }

        public System.Data.Linq.Table<NEW_CON_APPLICATION_FORM> NEW_CON_APPLICATION_FORMs
        {
            get
            {
                return this.GetTable<NEW_CON_APPLICATION_FORM>();
            }
        }

        public System.Data.Linq.Table<RatusRevamp> RatusRevamps
        {
            get
            {
                return this.GetTable<RatusRevamp>();
            }
        }

        public System.Data.Linq.Table<CashFreeOrderDetail> CashFreeOrderDetails
        {
            get
            {
                return this.GetTable<CashFreeOrderDetail>();
            }
        }
        public System.Data.Linq.Table<SubmityourQuery> SubmityourQueries
        {
            get
            {
                return this.GetTable<SubmityourQuery>();
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.Payment_Penalty")]
    public partial class Payment_Penalty : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private System.Guid _Id;

        private string _CONSUMER_NO;

        private string _BILL_MONTH;

        private string _PENALTY;

        private string _RND_PAYABLE;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(System.Guid value);
        partial void OnIdChanged();
        partial void OnCONSUMER_NOChanging(string value);
        partial void OnCONSUMER_NOChanged();
        partial void OnBILL_MONTHChanging(string value);
        partial void OnBILL_MONTHChanged();
        partial void OnPENALTYChanging(string value);
        partial void OnPENALTYChanged();
        partial void OnRND_PAYABLEChanging(string value);
        partial void OnRND_PAYABLEChanged();
        #endregion

        public Payment_Penalty()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Id", DbType = "UniqueIdentifier NOT NULL", IsPrimaryKey = true)]
        public System.Guid Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if ((this._Id != value))
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging();
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CONSUMER_NO", DbType = "NVarChar(50)")]
        public string CONSUMER_NO
        {
            get
            {
                return this._CONSUMER_NO;
            }
            set
            {
                if ((this._CONSUMER_NO != value))
                {
                    this.OnCONSUMER_NOChanging(value);
                    this.SendPropertyChanging();
                    this._CONSUMER_NO = value;
                    this.SendPropertyChanged("CONSUMER_NO");
                    this.OnCONSUMER_NOChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BILL_MONTH", DbType = "NVarChar(50)")]
        public string BILL_MONTH
        {
            get
            {
                return this._BILL_MONTH;
            }
            set
            {
                if ((this._BILL_MONTH != value))
                {
                    this.OnBILL_MONTHChanging(value);
                    this.SendPropertyChanging();
                    this._BILL_MONTH = value;
                    this.SendPropertyChanged("BILL_MONTH");
                    this.OnBILL_MONTHChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PENALTY", DbType = "NVarChar(50)")]
        public string PENALTY
        {
            get
            {
                return this._PENALTY;
            }
            set
            {
                if ((this._PENALTY != value))
                {
                    this.OnPENALTYChanging(value);
                    this.SendPropertyChanging();
                    this._PENALTY = value;
                    this.SendPropertyChanged("PENALTY");
                    this.OnPENALTYChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_RND_PAYABLE", DbType = "NVarChar(50)")]
        public string RND_PAYABLE
        {
            get
            {
                return this._RND_PAYABLE;
            }
            set
            {
                if ((this._RND_PAYABLE != value))
                {
                    this.OnRND_PAYABLEChanging(value);
                    this.SendPropertyChanging();
                    this._RND_PAYABLE = value;
                    this.SendPropertyChanged("RND_PAYABLE");
                    this.OnRND_PAYABLEChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.user_otp")]
    public partial class user_otp : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private long _Id;

        private string _MobileNumber;

        private string _otp;

        private System.Nullable<bool> _status;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(long value);
        partial void OnIdChanged();
        partial void OnMobileNumberChanging(string value);
        partial void OnMobileNumberChanged();
        partial void OnotpChanging(string value);
        partial void OnotpChanged();
        partial void OnstatusChanging(System.Nullable<bool> value);
        partial void OnstatusChanged();
        #endregion

        public user_otp()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Id", AutoSync = AutoSync.OnInsert, DbType = "BigInt NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public long Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if ((this._Id != value))
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging();
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MobileNumber", DbType = "NVarChar(20)")]
        public string MobileNumber
        {
            get
            {
                return this._MobileNumber;
            }
            set
            {
                if ((this._MobileNumber != value))
                {
                    this.OnMobileNumberChanging(value);
                    this.SendPropertyChanging();
                    this._MobileNumber = value;
                    this.SendPropertyChanged("MobileNumber");
                    this.OnMobileNumberChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_otp", DbType = "NVarChar(10)")]
        public string otp
        {
            get
            {
                return this._otp;
            }
            set
            {
                if ((this._otp != value))
                {
                    this.OnotpChanging(value);
                    this.SendPropertyChanging();
                    this._otp = value;
                    this.SendPropertyChanged("otp");
                    this.OnotpChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_status", DbType = "Bit")]
        public System.Nullable<bool> status
        {
            get
            {
                return this._status;
            }
            set
            {
                if ((this._status != value))
                {
                    this.OnstatusChanging(value);
                    this.SendPropertyChanging();
                    this._status = value;
                    this.SendPropertyChanged("status");
                    this.OnstatusChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.ENachRegistration")]
    public partial class ENachRegistration : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private System.Guid _Id;

        private string _AccountNumber;

        private System.Nullable<bool> _PPIFlag;

        private string _Name;

        private string _Email;

        private string _Mobile;

        private System.Nullable<System.DateTime> _Created_Date;

        private string _CreatedBy;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(System.Guid value);
        partial void OnIdChanged();
        partial void OnAccountNumberChanging(string value);
        partial void OnAccountNumberChanged();
        partial void OnPPIFlagChanging(System.Nullable<bool> value);
        partial void OnPPIFlagChanged();
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
        partial void OnEmailChanging(string value);
        partial void OnEmailChanged();
        partial void OnMobileChanging(string value);
        partial void OnMobileChanged();
        partial void OnCreated_DateChanging(System.Nullable<System.DateTime> value);
        partial void OnCreated_DateChanged();
        partial void OnCreatedByChanging(string value);
        partial void OnCreatedByChanged();
        #endregion

        public ENachRegistration()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Id", DbType = "UniqueIdentifier NOT NULL", IsPrimaryKey = true)]
        public System.Guid Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if ((this._Id != value))
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging();
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AccountNumber", DbType = "NVarChar(150)")]
        public string AccountNumber
        {
            get
            {
                return this._AccountNumber;
            }
            set
            {
                if ((this._AccountNumber != value))
                {
                    this.OnAccountNumberChanging(value);
                    this.SendPropertyChanging();
                    this._AccountNumber = value;
                    this.SendPropertyChanged("AccountNumber");
                    this.OnAccountNumberChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PPIFlag", DbType = "Bit")]
        public System.Nullable<bool> PPIFlag
        {
            get
            {
                return this._PPIFlag;
            }
            set
            {
                if ((this._PPIFlag != value))
                {
                    this.OnPPIFlagChanging(value);
                    this.SendPropertyChanging();
                    this._PPIFlag = value;
                    this.SendPropertyChanged("PPIFlag");
                    this.OnPPIFlagChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Name", DbType = "NVarChar(150)")]
        public string Name
        {
            get
            {
                return this._Name;
            }
            set
            {
                if ((this._Name != value))
                {
                    this.OnNameChanging(value);
                    this.SendPropertyChanging();
                    this._Name = value;
                    this.SendPropertyChanged("Name");
                    this.OnNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Email", DbType = "NVarChar(150)")]
        public string Email
        {
            get
            {
                return this._Email;
            }
            set
            {
                if ((this._Email != value))
                {
                    this.OnEmailChanging(value);
                    this.SendPropertyChanging();
                    this._Email = value;
                    this.SendPropertyChanged("Email");
                    this.OnEmailChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Mobile", DbType = "NVarChar(150)")]
        public string Mobile
        {
            get
            {
                return this._Mobile;
            }
            set
            {
                if ((this._Mobile != value))
                {
                    this.OnMobileChanging(value);
                    this.SendPropertyChanging();
                    this._Mobile = value;
                    this.SendPropertyChanged("Mobile");
                    this.OnMobileChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Created_Date", DbType = "DateTime")]
        public System.Nullable<System.DateTime> Created_Date
        {
            get
            {
                return this._Created_Date;
            }
            set
            {
                if ((this._Created_Date != value))
                {
                    this.OnCreated_DateChanging(value);
                    this.SendPropertyChanging();
                    this._Created_Date = value;
                    this.SendPropertyChanged("Created_Date");
                    this.OnCreated_DateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CreatedBy", DbType = "NVarChar(50)")]
        public string CreatedBy
        {
            get
            {
                return this._CreatedBy;
            }
            set
            {
                if ((this._CreatedBy != value))
                {
                    this.OnCreatedByChanging(value);
                    this.SendPropertyChanging();
                    this._CreatedBy = value;
                    this.SendPropertyChanged("CreatedBy");
                    this.OnCreatedByChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.CONAreaCityPinMaster")]
    public partial class CONAreaCityPinMaster : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _Id;

        private string _City;

        private string _Area;

        private string _PinCode;

        private string _WorkCenter;

        private string _Remarks;

        private System.Nullable<System.DateTime> _CreatedDate;

        private string _CreatedBy;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnCityChanging(string value);
        partial void OnCityChanged();
        partial void OnAreaChanging(string value);
        partial void OnAreaChanged();
        partial void OnPinCodeChanging(string value);
        partial void OnPinCodeChanged();
        partial void OnWorkCenterChanging(string value);
        partial void OnWorkCenterChanged();
        partial void OnRemarksChanging(string value);
        partial void OnRemarksChanged();
        partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
        partial void OnCreatedDateChanged();
        partial void OnCreatedByChanging(string value);
        partial void OnCreatedByChanged();
        #endregion

        public CONAreaCityPinMaster()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Id", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if ((this._Id != value))
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging();
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_City", DbType = "NVarChar(50) NOT NULL", CanBeNull = false)]
        public string City
        {
            get
            {
                return this._City;
            }
            set
            {
                if ((this._City != value))
                {
                    this.OnCityChanging(value);
                    this.SendPropertyChanging();
                    this._City = value;
                    this.SendPropertyChanged("City");
                    this.OnCityChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Area", DbType = "NVarChar(50) NOT NULL", CanBeNull = false)]
        public string Area
        {
            get
            {
                return this._Area;
            }
            set
            {
                if ((this._Area != value))
                {
                    this.OnAreaChanging(value);
                    this.SendPropertyChanging();
                    this._Area = value;
                    this.SendPropertyChanged("Area");
                    this.OnAreaChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PinCode", DbType = "NVarChar(50) NOT NULL", CanBeNull = false)]
        public string PinCode
        {
            get
            {
                return this._PinCode;
            }
            set
            {
                if ((this._PinCode != value))
                {
                    this.OnPinCodeChanging(value);
                    this.SendPropertyChanging();
                    this._PinCode = value;
                    this.SendPropertyChanged("PinCode");
                    this.OnPinCodeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_WorkCenter", DbType = "NVarChar(50) NOT NULL", CanBeNull = false)]
        public string WorkCenter
        {
            get
            {
                return this._WorkCenter;
            }
            set
            {
                if ((this._WorkCenter != value))
                {
                    this.OnWorkCenterChanging(value);
                    this.SendPropertyChanging();
                    this._WorkCenter = value;
                    this.SendPropertyChanged("WorkCenter");
                    this.OnWorkCenterChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Remarks", DbType = "NChar(10)")]
        public string Remarks
        {
            get
            {
                return this._Remarks;
            }
            set
            {
                if ((this._Remarks != value))
                {
                    this.OnRemarksChanging(value);
                    this.SendPropertyChanging();
                    this._Remarks = value;
                    this.SendPropertyChanged("Remarks");
                    this.OnRemarksChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CreatedDate", DbType = "DateTime")]
        public System.Nullable<System.DateTime> CreatedDate
        {
            get
            {
                return this._CreatedDate;
            }
            set
            {
                if ((this._CreatedDate != value))
                {
                    this.OnCreatedDateChanging(value);
                    this.SendPropertyChanging();
                    this._CreatedDate = value;
                    this.SendPropertyChanged("CreatedDate");
                    this.OnCreatedDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CreatedBy", DbType = "NVarChar(50)")]
        public string CreatedBy
        {
            get
            {
                return this._CreatedBy;
            }
            set
            {
                if ((this._CreatedBy != value))
                {
                    this.OnCreatedByChanging(value);
                    this.SendPropertyChanging();
                    this._CreatedBy = value;
                    this.SendPropertyChanged("CreatedBy");
                    this.OnCreatedByChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.CONDocumentSubTypeMaster")]
    public partial class CONDocumentSubTypeMaster : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _Id;

        private string _DocumentSubTypeCode;

        private string _DocumentSubTypeName;

        private string _DocumentSubTypeDescription;

        private System.Nullable<int> _DocumentSubTypeSequence;

        private System.Nullable<bool> _IsActive;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnDocumentSubTypeCodeChanging(string value);
        partial void OnDocumentSubTypeCodeChanged();
        partial void OnDocumentSubTypeNameChanging(string value);
        partial void OnDocumentSubTypeNameChanged();
        partial void OnDocumentSubTypeDescriptionChanging(string value);
        partial void OnDocumentSubTypeDescriptionChanged();
        partial void OnDocumentSubTypeSequenceChanging(System.Nullable<int> value);
        partial void OnDocumentSubTypeSequenceChanged();
        partial void OnIsActiveChanging(System.Nullable<bool> value);
        partial void OnIsActiveChanged();
        #endregion

        public CONDocumentSubTypeMaster()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Id", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if ((this._Id != value))
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging();
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DocumentSubTypeCode", DbType = "NVarChar(10) NOT NULL", CanBeNull = false)]
        public string DocumentSubTypeCode
        {
            get
            {
                return this._DocumentSubTypeCode;
            }
            set
            {
                if ((this._DocumentSubTypeCode != value))
                {
                    this.OnDocumentSubTypeCodeChanging(value);
                    this.SendPropertyChanging();
                    this._DocumentSubTypeCode = value;
                    this.SendPropertyChanged("DocumentSubTypeCode");
                    this.OnDocumentSubTypeCodeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DocumentSubTypeName", DbType = "NVarChar(100) NOT NULL", CanBeNull = false)]
        public string DocumentSubTypeName
        {
            get
            {
                return this._DocumentSubTypeName;
            }
            set
            {
                if ((this._DocumentSubTypeName != value))
                {
                    this.OnDocumentSubTypeNameChanging(value);
                    this.SendPropertyChanging();
                    this._DocumentSubTypeName = value;
                    this.SendPropertyChanged("DocumentSubTypeName");
                    this.OnDocumentSubTypeNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DocumentSubTypeDescription", DbType = "NVarChar(100) NOT NULL", CanBeNull = false)]
        public string DocumentSubTypeDescription
        {
            get
            {
                return this._DocumentSubTypeDescription;
            }
            set
            {
                if ((this._DocumentSubTypeDescription != value))
                {
                    this.OnDocumentSubTypeDescriptionChanging(value);
                    this.SendPropertyChanging();
                    this._DocumentSubTypeDescription = value;
                    this.SendPropertyChanged("DocumentSubTypeDescription");
                    this.OnDocumentSubTypeDescriptionChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DocumentSubTypeSequence", DbType = "Int")]
        public System.Nullable<int> DocumentSubTypeSequence
        {
            get
            {
                return this._DocumentSubTypeSequence;
            }
            set
            {
                if ((this._DocumentSubTypeSequence != value))
                {
                    this.OnDocumentSubTypeSequenceChanging(value);
                    this.SendPropertyChanging();
                    this._DocumentSubTypeSequence = value;
                    this.SendPropertyChanged("DocumentSubTypeSequence");
                    this.OnDocumentSubTypeSequenceChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsActive", DbType = "Bit")]
        public System.Nullable<bool> IsActive
        {
            get
            {
                return this._IsActive;
            }
            set
            {
                if ((this._IsActive != value))
                {
                    this.OnIsActiveChanging(value);
                    this.SendPropertyChanging();
                    this._IsActive = value;
                    this.SendPropertyChanged("IsActive");
                    this.OnIsActiveChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.CONDocumentMaster")]
    public partial class CONDocumentMaster : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private System.Guid _Id;

        private int _DocumentSerialNumber;

        private string _DocumentType;

        private string _DocumentTypeCode;

        private string _ApplicationTypeCode;

        private string _PremiseTypeCode;

        private string _TitleCode;

        private string _DocumentDescription;

        private string _ZALTYP;

        private string _FLAG_MANDATORY;

        private string _FLAG_DOCNO;

        private string _AKLASSE;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(System.Guid value);
        partial void OnIdChanged();
        partial void OnDocumentSerialNumberChanging(int value);
        partial void OnDocumentSerialNumberChanged();
        partial void OnDocumentTypeChanging(string value);
        partial void OnDocumentTypeChanged();
        partial void OnDocumentTypeCodeChanging(string value);
        partial void OnDocumentTypeCodeChanged();
        partial void OnApplicationTypeCodeChanging(string value);
        partial void OnApplicationTypeCodeChanged();
        partial void OnPremiseTypeCodeChanging(string value);
        partial void OnPremiseTypeCodeChanged();
        partial void OnTitleCodeChanging(string value);
        partial void OnTitleCodeChanged();
        partial void OnDocumentDescriptionChanging(string value);
        partial void OnDocumentDescriptionChanged();
        partial void OnZALTYPChanging(string value);
        partial void OnZALTYPChanged();
        partial void OnFLAG_MANDATORYChanging(string value);
        partial void OnFLAG_MANDATORYChanged();
        partial void OnFLAG_DOCNOChanging(string value);
        partial void OnFLAG_DOCNOChanged();
        partial void OnAKLASSEChanging(string value);
        partial void OnAKLASSEChanged();
        #endregion

        public CONDocumentMaster()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Id", DbType = "UniqueIdentifier NOT NULL", IsPrimaryKey = true)]
        public System.Guid Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if ((this._Id != value))
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging();
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DocumentSerialNumber", DbType = "Int NOT NULL")]
        public int DocumentSerialNumber
        {
            get
            {
                return this._DocumentSerialNumber;
            }
            set
            {
                if ((this._DocumentSerialNumber != value))
                {
                    this.OnDocumentSerialNumberChanging(value);
                    this.SendPropertyChanging();
                    this._DocumentSerialNumber = value;
                    this.SendPropertyChanged("DocumentSerialNumber");
                    this.OnDocumentSerialNumberChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DocumentType", DbType = "NVarChar(50) NOT NULL", CanBeNull = false)]
        public string DocumentType
        {
            get
            {
                return this._DocumentType;
            }
            set
            {
                if ((this._DocumentType != value))
                {
                    this.OnDocumentTypeChanging(value);
                    this.SendPropertyChanging();
                    this._DocumentType = value;
                    this.SendPropertyChanged("DocumentType");
                    this.OnDocumentTypeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DocumentTypeCode", DbType = "NVarChar(50) NOT NULL", CanBeNull = false)]
        public string DocumentTypeCode
        {
            get
            {
                return this._DocumentTypeCode;
            }
            set
            {
                if ((this._DocumentTypeCode != value))
                {
                    this.OnDocumentTypeCodeChanging(value);
                    this.SendPropertyChanging();
                    this._DocumentTypeCode = value;
                    this.SendPropertyChanged("DocumentTypeCode");
                    this.OnDocumentTypeCodeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ApplicationTypeCode", DbType = "NVarChar(50) NOT NULL", CanBeNull = false)]
        public string ApplicationTypeCode
        {
            get
            {
                return this._ApplicationTypeCode;
            }
            set
            {
                if ((this._ApplicationTypeCode != value))
                {
                    this.OnApplicationTypeCodeChanging(value);
                    this.SendPropertyChanging();
                    this._ApplicationTypeCode = value;
                    this.SendPropertyChanged("ApplicationTypeCode");
                    this.OnApplicationTypeCodeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PremiseTypeCode", DbType = "NVarChar(50) NOT NULL", CanBeNull = false)]
        public string PremiseTypeCode
        {
            get
            {
                return this._PremiseTypeCode;
            }
            set
            {
                if ((this._PremiseTypeCode != value))
                {
                    this.OnPremiseTypeCodeChanging(value);
                    this.SendPropertyChanging();
                    this._PremiseTypeCode = value;
                    this.SendPropertyChanged("PremiseTypeCode");
                    this.OnPremiseTypeCodeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TitleCode", DbType = "NVarChar(50)")]
        public string TitleCode
        {
            get
            {
                return this._TitleCode;
            }
            set
            {
                if ((this._TitleCode != value))
                {
                    this.OnTitleCodeChanging(value);
                    this.SendPropertyChanging();
                    this._TitleCode = value;
                    this.SendPropertyChanged("TitleCode");
                    this.OnTitleCodeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DocumentDescription", DbType = "NVarChar(MAX)")]
        public string DocumentDescription
        {
            get
            {
                return this._DocumentDescription;
            }
            set
            {
                if ((this._DocumentDescription != value))
                {
                    this.OnDocumentDescriptionChanging(value);
                    this.SendPropertyChanging();
                    this._DocumentDescription = value;
                    this.SendPropertyChanged("DocumentDescription");
                    this.OnDocumentDescriptionChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ZALTYP", DbType = "NVarChar(50)")]
        public string ZALTYP
        {
            get
            {
                return this._ZALTYP;
            }
            set
            {
                if ((this._ZALTYP != value))
                {
                    this.OnZALTYPChanging(value);
                    this.SendPropertyChanging();
                    this._ZALTYP = value;
                    this.SendPropertyChanged("ZALTYP");
                    this.OnZALTYPChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_FLAG_MANDATORY", DbType = "NVarChar(10)")]
        public string FLAG_MANDATORY
        {
            get
            {
                return this._FLAG_MANDATORY;
            }
            set
            {
                if ((this._FLAG_MANDATORY != value))
                {
                    this.OnFLAG_MANDATORYChanging(value);
                    this.SendPropertyChanging();
                    this._FLAG_MANDATORY = value;
                    this.SendPropertyChanged("FLAG_MANDATORY");
                    this.OnFLAG_MANDATORYChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_FLAG_DOCNO", DbType = "NVarChar(10)")]
        public string FLAG_DOCNO
        {
            get
            {
                return this._FLAG_DOCNO;
            }
            set
            {
                if ((this._FLAG_DOCNO != value))
                {
                    this.OnFLAG_DOCNOChanging(value);
                    this.SendPropertyChanging();
                    this._FLAG_DOCNO = value;
                    this.SendPropertyChanged("FLAG_DOCNO");
                    this.OnFLAG_DOCNOChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AKLASSE", DbType = "NVarChar(50)")]
        public string AKLASSE
        {
            get
            {
                return this._AKLASSE;
            }
            set
            {
                if ((this._AKLASSE != value))
                {
                    this.OnAKLASSEChanging(value);
                    this.SendPropertyChanging();
                    this._AKLASSE = value;
                    this.SendPropertyChanged("AKLASSE");
                    this.OnAKLASSEChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.CONPremiseTypeMaster")]
    public partial class CONPremiseTypeMaster : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _Id;

        private string _PremiseTypeName;

        private string _PremiseTypeCode;

        private System.Nullable<bool> _IsActive;

        private System.Nullable<int> _DisplayOrder;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnPremiseTypeNameChanging(string value);
        partial void OnPremiseTypeNameChanged();
        partial void OnPremiseTypeCodeChanging(string value);
        partial void OnPremiseTypeCodeChanged();
        partial void OnIsActiveChanging(System.Nullable<bool> value);
        partial void OnIsActiveChanged();
        partial void OnDisplayOrderChanging(System.Nullable<int> value);
        partial void OnDisplayOrderChanged();
        #endregion

        public CONPremiseTypeMaster()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Id", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if ((this._Id != value))
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging();
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PremiseTypeName", DbType = "NVarChar(50)")]
        public string PremiseTypeName
        {
            get
            {
                return this._PremiseTypeName;
            }
            set
            {
                if ((this._PremiseTypeName != value))
                {
                    this.OnPremiseTypeNameChanging(value);
                    this.SendPropertyChanging();
                    this._PremiseTypeName = value;
                    this.SendPropertyChanged("PremiseTypeName");
                    this.OnPremiseTypeNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PremiseTypeCode", DbType = "NVarChar(10)")]
        public string PremiseTypeCode
        {
            get
            {
                return this._PremiseTypeCode;
            }
            set
            {
                if ((this._PremiseTypeCode != value))
                {
                    this.OnPremiseTypeCodeChanging(value);
                    this.SendPropertyChanging();
                    this._PremiseTypeCode = value;
                    this.SendPropertyChanged("PremiseTypeCode");
                    this.OnPremiseTypeCodeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsActive", DbType = "Bit")]
        public System.Nullable<bool> IsActive
        {
            get
            {
                return this._IsActive;
            }
            set
            {
                if ((this._IsActive != value))
                {
                    this.OnIsActiveChanging(value);
                    this.SendPropertyChanging();
                    this._IsActive = value;
                    this.SendPropertyChanged("IsActive");
                    this.OnIsActiveChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DisplayOrder", DbType = "Int")]
        public System.Nullable<int> DisplayOrder
        {
            get
            {
                return this._DisplayOrder;
            }
            set
            {
                if ((this._DisplayOrder != value))
                {
                    this.OnDisplayOrderChanging(value);
                    this.SendPropertyChanging();
                    this._DisplayOrder = value;
                    this.SendPropertyChanged("DisplayOrder");
                    this.OnDisplayOrderChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.OTPValidationAEML")]
    public partial class OTPValidationAEML : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private long _Id;

        private string _AccountNumber;

        private string _MeterNumber;

        private string _MobileNumber;

        private string _OTP;

        private string _PageName;

        private System.Nullable<System.DateTime> _CreatedDate;

        private string _ReferenceNumner;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(long value);
        partial void OnIdChanged();
        partial void OnAccountNumberChanging(string value);
        partial void OnAccountNumberChanged();
        partial void OnMeterNumberChanging(string value);
        partial void OnMeterNumberChanged();
        partial void OnMobileNumberChanging(string value);
        partial void OnMobileNumberChanged();
        partial void OnOTPChanging(string value);
        partial void OnOTPChanged();
        partial void OnPageNameChanging(string value);
        partial void OnPageNameChanged();
        partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
        partial void OnCreatedDateChanged();
        partial void OnReferenceNumnerChanging(string value);
        partial void OnReferenceNumnerChanged();
        #endregion

        public OTPValidationAEML()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Id", AutoSync = AutoSync.OnInsert, DbType = "BigInt NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public long Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if ((this._Id != value))
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging();
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AccountNumber", DbType = "NVarChar(50) NOT NULL", CanBeNull = false)]
        public string AccountNumber
        {
            get
            {
                return this._AccountNumber;
            }
            set
            {
                if ((this._AccountNumber != value))
                {
                    this.OnAccountNumberChanging(value);
                    this.SendPropertyChanging();
                    this._AccountNumber = value;
                    this.SendPropertyChanged("AccountNumber");
                    this.OnAccountNumberChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MeterNumber", DbType = "NVarChar(50)")]
        public string MeterNumber
        {
            get
            {
                return this._MeterNumber;
            }
            set
            {
                if ((this._MeterNumber != value))
                {
                    this.OnMeterNumberChanging(value);
                    this.SendPropertyChanging();
                    this._MeterNumber = value;
                    this.SendPropertyChanged("MeterNumber");
                    this.OnMeterNumberChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MobileNumber", DbType = "NVarChar(50) NOT NULL", CanBeNull = false)]
        public string MobileNumber
        {
            get
            {
                return this._MobileNumber;
            }
            set
            {
                if ((this._MobileNumber != value))
                {
                    this.OnMobileNumberChanging(value);
                    this.SendPropertyChanging();
                    this._MobileNumber = value;
                    this.SendPropertyChanged("MobileNumber");
                    this.OnMobileNumberChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_OTP", DbType = "NVarChar(50) NOT NULL", CanBeNull = false)]
        public string OTP
        {
            get
            {
                return this._OTP;
            }
            set
            {
                if ((this._OTP != value))
                {
                    this.OnOTPChanging(value);
                    this.SendPropertyChanging();
                    this._OTP = value;
                    this.SendPropertyChanged("OTP");
                    this.OnOTPChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PageName", DbType = "NVarChar(50)")]
        public string PageName
        {
            get
            {
                return this._PageName;
            }
            set
            {
                if ((this._PageName != value))
                {
                    this.OnPageNameChanging(value);
                    this.SendPropertyChanging();
                    this._PageName = value;
                    this.SendPropertyChanged("PageName");
                    this.OnPageNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CreatedDate", DbType = "DateTime")]
        public System.Nullable<System.DateTime> CreatedDate
        {
            get
            {
                return this._CreatedDate;
            }
            set
            {
                if ((this._CreatedDate != value))
                {
                    this.OnCreatedDateChanging(value);
                    this.SendPropertyChanging();
                    this._CreatedDate = value;
                    this.SendPropertyChanged("CreatedDate");
                    this.OnCreatedDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ReferenceNumner", DbType = "NVarChar(50)")]
        public string ReferenceNumner
        {
            get
            {
                return this._ReferenceNumner;
            }
            set
            {
                if ((this._ReferenceNumner != value))
                {
                    this.OnReferenceNumnerChanging(value);
                    this.SendPropertyChanging();
                    this._ReferenceNumner = value;
                    this.SendPropertyChanged("ReferenceNumner");
                    this.OnReferenceNumnerChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.CONApplicationDocumentDetails")]
    public partial class CONApplicationDocumentDetail : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private System.Guid _Id;

        private string _RegistrationSerialNumber;

        private string _DocumentType;

        private string _DocumentTypeCode;

        private string _DocumentChecklistSerialNumber;

        private string _DocumentName;

        private string _DocumentDescription;

        private string _DocumentNumber;

        private System.Nullable<System.DateTime> _CreatedDate;

        private string _CreatedBy;

        private System.Nullable<bool> _IsSentToSAP;

        private System.Nullable<System.DateTime> _SAPSentDate;

        private System.Data.Linq.Binary _DocumentData;

        private string _DocumentDataContenttype;

        private string _SAPReturnMsg;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(System.Guid value);
        partial void OnIdChanged();
        partial void OnRegistrationSerialNumberChanging(string value);
        partial void OnRegistrationSerialNumberChanged();
        partial void OnDocumentTypeChanging(string value);
        partial void OnDocumentTypeChanged();
        partial void OnDocumentTypeCodeChanging(string value);
        partial void OnDocumentTypeCodeChanged();
        partial void OnDocumentChecklistSerialNumberChanging(string value);
        partial void OnDocumentChecklistSerialNumberChanged();
        partial void OnDocumentNameChanging(string value);
        partial void OnDocumentNameChanged();
        partial void OnDocumentDescriptionChanging(string value);
        partial void OnDocumentDescriptionChanged();
        partial void OnDocumentNumberChanging(string value);
        partial void OnDocumentNumberChanged();
        partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
        partial void OnCreatedDateChanged();
        partial void OnCreatedByChanging(string value);
        partial void OnCreatedByChanged();
        partial void OnIsSentToSAPChanging(System.Nullable<bool> value);
        partial void OnIsSentToSAPChanged();
        partial void OnSAPSentDateChanging(System.Nullable<System.DateTime> value);
        partial void OnSAPSentDateChanged();
        partial void OnDocumentDataChanging(System.Data.Linq.Binary value);
        partial void OnDocumentDataChanged();
        partial void OnDocumentDataContenttypeChanging(string value);
        partial void OnDocumentDataContenttypeChanged();
        partial void OnSAPReturnMsgChanging(string value);
        partial void OnSAPReturnMsgChanged();
        #endregion

        public CONApplicationDocumentDetail()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Id", DbType = "UniqueIdentifier NOT NULL", IsPrimaryKey = true)]
        public System.Guid Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if ((this._Id != value))
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging();
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_RegistrationSerialNumber", DbType = "NVarChar(50) NOT NULL", CanBeNull = false)]
        public string RegistrationSerialNumber
        {
            get
            {
                return this._RegistrationSerialNumber;
            }
            set
            {
                if ((this._RegistrationSerialNumber != value))
                {
                    this.OnRegistrationSerialNumberChanging(value);
                    this.SendPropertyChanging();
                    this._RegistrationSerialNumber = value;
                    this.SendPropertyChanged("RegistrationSerialNumber");
                    this.OnRegistrationSerialNumberChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DocumentType", DbType = "NVarChar(50)")]
        public string DocumentType
        {
            get
            {
                return this._DocumentType;
            }
            set
            {
                if ((this._DocumentType != value))
                {
                    this.OnDocumentTypeChanging(value);
                    this.SendPropertyChanging();
                    this._DocumentType = value;
                    this.SendPropertyChanged("DocumentType");
                    this.OnDocumentTypeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DocumentTypeCode", DbType = "NVarChar(50)")]
        public string DocumentTypeCode
        {
            get
            {
                return this._DocumentTypeCode;
            }
            set
            {
                if ((this._DocumentTypeCode != value))
                {
                    this.OnDocumentTypeCodeChanging(value);
                    this.SendPropertyChanging();
                    this._DocumentTypeCode = value;
                    this.SendPropertyChanged("DocumentTypeCode");
                    this.OnDocumentTypeCodeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DocumentChecklistSerialNumber", DbType = "NVarChar(50)")]
        public string DocumentChecklistSerialNumber
        {
            get
            {
                return this._DocumentChecklistSerialNumber;
            }
            set
            {
                if ((this._DocumentChecklistSerialNumber != value))
                {
                    this.OnDocumentChecklistSerialNumberChanging(value);
                    this.SendPropertyChanging();
                    this._DocumentChecklistSerialNumber = value;
                    this.SendPropertyChanged("DocumentChecklistSerialNumber");
                    this.OnDocumentChecklistSerialNumberChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DocumentName", DbType = "NVarChar(200)")]
        public string DocumentName
        {
            get
            {
                return this._DocumentName;
            }
            set
            {
                if ((this._DocumentName != value))
                {
                    this.OnDocumentNameChanging(value);
                    this.SendPropertyChanging();
                    this._DocumentName = value;
                    this.SendPropertyChanged("DocumentName");
                    this.OnDocumentNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DocumentDescription", DbType = "NVarChar(MAX)")]
        public string DocumentDescription
        {
            get
            {
                return this._DocumentDescription;
            }
            set
            {
                if ((this._DocumentDescription != value))
                {
                    this.OnDocumentDescriptionChanging(value);
                    this.SendPropertyChanging();
                    this._DocumentDescription = value;
                    this.SendPropertyChanged("DocumentDescription");
                    this.OnDocumentDescriptionChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DocumentNumber", DbType = "NVarChar(50)")]
        public string DocumentNumber
        {
            get
            {
                return this._DocumentNumber;
            }
            set
            {
                if ((this._DocumentNumber != value))
                {
                    this.OnDocumentNumberChanging(value);
                    this.SendPropertyChanging();
                    this._DocumentNumber = value;
                    this.SendPropertyChanged("DocumentNumber");
                    this.OnDocumentNumberChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CreatedDate", DbType = "DateTime")]
        public System.Nullable<System.DateTime> CreatedDate
        {
            get
            {
                return this._CreatedDate;
            }
            set
            {
                if ((this._CreatedDate != value))
                {
                    this.OnCreatedDateChanging(value);
                    this.SendPropertyChanging();
                    this._CreatedDate = value;
                    this.SendPropertyChanged("CreatedDate");
                    this.OnCreatedDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CreatedBy", DbType = "NVarChar(50)")]
        public string CreatedBy
        {
            get
            {
                return this._CreatedBy;
            }
            set
            {
                if ((this._CreatedBy != value))
                {
                    this.OnCreatedByChanging(value);
                    this.SendPropertyChanging();
                    this._CreatedBy = value;
                    this.SendPropertyChanged("CreatedBy");
                    this.OnCreatedByChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsSentToSAP", DbType = "Bit")]
        public System.Nullable<bool> IsSentToSAP
        {
            get
            {
                return this._IsSentToSAP;
            }
            set
            {
                if ((this._IsSentToSAP != value))
                {
                    this.OnIsSentToSAPChanging(value);
                    this.SendPropertyChanging();
                    this._IsSentToSAP = value;
                    this.SendPropertyChanged("IsSentToSAP");
                    this.OnIsSentToSAPChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SAPSentDate", DbType = "DateTime")]
        public System.Nullable<System.DateTime> SAPSentDate
        {
            get
            {
                return this._SAPSentDate;
            }
            set
            {
                if ((this._SAPSentDate != value))
                {
                    this.OnSAPSentDateChanging(value);
                    this.SendPropertyChanging();
                    this._SAPSentDate = value;
                    this.SendPropertyChanged("SAPSentDate");
                    this.OnSAPSentDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DocumentData", DbType = "VarBinary(MAX)", UpdateCheck = UpdateCheck.Never)]
        public System.Data.Linq.Binary DocumentData
        {
            get
            {
                return this._DocumentData;
            }
            set
            {
                if ((this._DocumentData != value))
                {
                    this.OnDocumentDataChanging(value);
                    this.SendPropertyChanging();
                    this._DocumentData = value;
                    this.SendPropertyChanged("DocumentData");
                    this.OnDocumentDataChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DocumentDataContenttype", DbType = "NVarChar(100)")]
        public string DocumentDataContenttype
        {
            get
            {
                return this._DocumentDataContenttype;
            }
            set
            {
                if ((this._DocumentDataContenttype != value))
                {
                    this.OnDocumentDataContenttypeChanging(value);
                    this.SendPropertyChanging();
                    this._DocumentDataContenttype = value;
                    this.SendPropertyChanged("DocumentDataContenttype");
                    this.OnDocumentDataContenttypeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SAPReturnMsg", DbType = "NVarChar(MAX)")]
        public string SAPReturnMsg
        {
            get
            {
                return this._SAPReturnMsg;
            }
            set
            {
                if ((this._SAPReturnMsg != value))
                {
                    this.OnSAPReturnMsgChanging(value);
                    this.SendPropertyChanging();
                    this._SAPReturnMsg = value;
                    this.SendPropertyChanged("SAPReturnMsg");
                    this.OnSAPReturnMsgChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.UserProfile")]
    public partial class UserProfile : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private System.Guid _Id;

        private string _UserName;

        private string _Email;

        private string _Mobile;

        private string _AccountNumber;

        private string _MeterNumber;

        private System.Nullable<bool> _IsPrimary;

        private System.Nullable<bool> _status;

        private System.Nullable<System.DateTime> _Created_Date;

        private string _CreatedBy;

        private System.Nullable<System.DateTime> _Modified_Date;

        private string _ModifiedBy;

        private System.Nullable<System.DateTime> _LastPasswordChangedDate;

        private System.Nullable<System.DateTime> _LastLoginDate;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(System.Guid value);
        partial void OnIdChanged();
        partial void OnUserNameChanging(string value);
        partial void OnUserNameChanged();
        partial void OnEmailChanging(string value);
        partial void OnEmailChanged();
        partial void OnMobileChanging(string value);
        partial void OnMobileChanged();
        partial void OnAccountNumberChanging(string value);
        partial void OnAccountNumberChanged();
        partial void OnMeterNumberChanging(string value);
        partial void OnMeterNumberChanged();
        partial void OnIsPrimaryChanging(System.Nullable<bool> value);
        partial void OnIsPrimaryChanged();
        partial void OnstatusChanging(System.Nullable<bool> value);
        partial void OnstatusChanged();
        partial void OnCreated_DateChanging(System.Nullable<System.DateTime> value);
        partial void OnCreated_DateChanged();
        partial void OnCreatedByChanging(string value);
        partial void OnCreatedByChanged();
        partial void OnModified_DateChanging(System.Nullable<System.DateTime> value);
        partial void OnModified_DateChanged();
        partial void OnModifiedByChanging(string value);
        partial void OnModifiedByChanged();
        partial void OnLastPasswordChangedDateChanging(System.Nullable<System.DateTime> value);
        partial void OnLastPasswordChangedDateChanged();
        partial void OnLastLoginDateChanging(System.Nullable<System.DateTime> value);
        partial void OnLastLoginDateChanged();
        #endregion

        public UserProfile()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Id", DbType = "UniqueIdentifier NOT NULL", IsPrimaryKey = true)]
        public System.Guid Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if ((this._Id != value))
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging();
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_UserName", DbType = "NVarChar(500)")]
        public string UserName
        {
            get
            {
                return this._UserName;
            }
            set
            {
                if ((this._UserName != value))
                {
                    this.OnUserNameChanging(value);
                    this.SendPropertyChanging();
                    this._UserName = value;
                    this.SendPropertyChanged("UserName");
                    this.OnUserNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Email", DbType = "NVarChar(500)")]
        public string Email
        {
            get
            {
                return this._Email;
            }
            set
            {
                if ((this._Email != value))
                {
                    this.OnEmailChanging(value);
                    this.SendPropertyChanging();
                    this._Email = value;
                    this.SendPropertyChanged("Email");
                    this.OnEmailChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Mobile", DbType = "NVarChar(150)")]
        public string Mobile
        {
            get
            {
                return this._Mobile;
            }
            set
            {
                if ((this._Mobile != value))
                {
                    this.OnMobileChanging(value);
                    this.SendPropertyChanging();
                    this._Mobile = value;
                    this.SendPropertyChanged("Mobile");
                    this.OnMobileChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AccountNumber", DbType = "NVarChar(150)")]
        public string AccountNumber
        {
            get
            {
                return this._AccountNumber;
            }
            set
            {
                if ((this._AccountNumber != value))
                {
                    this.OnAccountNumberChanging(value);
                    this.SendPropertyChanging();
                    this._AccountNumber = value;
                    this.SendPropertyChanged("AccountNumber");
                    this.OnAccountNumberChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MeterNumber", DbType = "NVarChar(150)")]
        public string MeterNumber
        {
            get
            {
                return this._MeterNumber;
            }
            set
            {
                if ((this._MeterNumber != value))
                {
                    this.OnMeterNumberChanging(value);
                    this.SendPropertyChanging();
                    this._MeterNumber = value;
                    this.SendPropertyChanged("MeterNumber");
                    this.OnMeterNumberChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsPrimary", DbType = "Bit")]
        public System.Nullable<bool> IsPrimary
        {
            get
            {
                return this._IsPrimary;
            }
            set
            {
                if ((this._IsPrimary != value))
                {
                    this.OnIsPrimaryChanging(value);
                    this.SendPropertyChanging();
                    this._IsPrimary = value;
                    this.SendPropertyChanged("IsPrimary");
                    this.OnIsPrimaryChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_status", DbType = "Bit")]
        public System.Nullable<bool> status
        {
            get
            {
                return this._status;
            }
            set
            {
                if ((this._status != value))
                {
                    this.OnstatusChanging(value);
                    this.SendPropertyChanging();
                    this._status = value;
                    this.SendPropertyChanged("status");
                    this.OnstatusChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Created_Date", DbType = "DateTime")]
        public System.Nullable<System.DateTime> Created_Date
        {
            get
            {
                return this._Created_Date;
            }
            set
            {
                if ((this._Created_Date != value))
                {
                    this.OnCreated_DateChanging(value);
                    this.SendPropertyChanging();
                    this._Created_Date = value;
                    this.SendPropertyChanged("Created_Date");
                    this.OnCreated_DateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CreatedBy", DbType = "NVarChar(500)")]
        public string CreatedBy
        {
            get
            {
                return this._CreatedBy;
            }
            set
            {
                if ((this._CreatedBy != value))
                {
                    this.OnCreatedByChanging(value);
                    this.SendPropertyChanging();
                    this._CreatedBy = value;
                    this.SendPropertyChanged("CreatedBy");
                    this.OnCreatedByChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Modified_Date", DbType = "DateTime")]
        public System.Nullable<System.DateTime> Modified_Date
        {
            get
            {
                return this._Modified_Date;
            }
            set
            {
                if ((this._Modified_Date != value))
                {
                    this.OnModified_DateChanging(value);
                    this.SendPropertyChanging();
                    this._Modified_Date = value;
                    this.SendPropertyChanged("Modified_Date");
                    this.OnModified_DateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ModifiedBy", DbType = "NVarChar(500)")]
        public string ModifiedBy
        {
            get
            {
                return this._ModifiedBy;
            }
            set
            {
                if ((this._ModifiedBy != value))
                {
                    this.OnModifiedByChanging(value);
                    this.SendPropertyChanging();
                    this._ModifiedBy = value;
                    this.SendPropertyChanged("ModifiedBy");
                    this.OnModifiedByChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LastPasswordChangedDate", DbType = "DateTime")]
        public System.Nullable<System.DateTime> LastPasswordChangedDate
        {
            get
            {
                return this._LastPasswordChangedDate;
            }
            set
            {
                if ((this._LastPasswordChangedDate != value))
                {
                    this.OnLastPasswordChangedDateChanging(value);
                    this.SendPropertyChanging();
                    this._LastPasswordChangedDate = value;
                    this.SendPropertyChanged("LastPasswordChangedDate");
                    this.OnLastPasswordChangedDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LastLoginDate", DbType = "DateTime")]
        public System.Nullable<System.DateTime> LastLoginDate
        {
            get
            {
                return this._LastLoginDate;
            }
            set
            {
                if ((this._LastLoginDate != value))
                {
                    this.OnLastLoginDateChanging(value);
                    this.SendPropertyChanging();
                    this._LastLoginDate = value;
                    this.SendPropertyChanged("LastLoginDate");
                    this.OnLastLoginDateChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.PaymentHistory")]
    public partial class PaymentHistory : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private System.Guid _Id;

        private string _AccountNumber;

        private string _UserId;

        private string _OrderId;

        private string _Amount;

        private System.Nullable<System.DateTime> _RequestTime;

        private string _Checksumkey;

        private string _CurrencyType;

        private string _GatewayType;

        private string _msg;

        private string _AdvanceAmmount;

        private string _PaymentType;

        private string _UserType;

        private string _Email;

        private string _Mobile;

        private string _TransactionId;

        private string _Status;

        private string _Responsecode;

        private string _Remark;

        private System.Nullable<System.DateTime> _ResponseTime;

        private string _PaymentRef;

        private string _ResponseMsg;

        private string _PaymentMode;

        private System.Nullable<System.DateTime> _Created_Date;

        private string _CreatedBy;

        private System.Nullable<System.DateTime> _Modified_Date;

        private string _ModifiedBy;

        private string _ISU_UPDATE_FLAG;

        private System.Nullable<System.DateTime> _ISU_UPDATE_DATETIME;

        private string _ISU_UPDATE_MESSAGE;

        private System.Nullable<bool> _EMIOption;

        private string _EMIAmount;

        private string _EMIOutstanding;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(System.Guid value);
        partial void OnIdChanged();
        partial void OnAccountNumberChanging(string value);
        partial void OnAccountNumberChanged();
        partial void OnUserIdChanging(string value);
        partial void OnUserIdChanged();
        partial void OnOrderIdChanging(string value);
        partial void OnOrderIdChanged();
        partial void OnAmountChanging(string value);
        partial void OnAmountChanged();
        partial void OnRequestTimeChanging(System.Nullable<System.DateTime> value);
        partial void OnRequestTimeChanged();
        partial void OnChecksumkeyChanging(string value);
        partial void OnChecksumkeyChanged();
        partial void OnCurrencyTypeChanging(string value);
        partial void OnCurrencyTypeChanged();
        partial void OnGatewayTypeChanging(string value);
        partial void OnGatewayTypeChanged();
        partial void OnmsgChanging(string value);
        partial void OnmsgChanged();
        partial void OnAdvanceAmmountChanging(string value);
        partial void OnAdvanceAmmountChanged();
        partial void OnPaymentTypeChanging(string value);
        partial void OnPaymentTypeChanged();
        partial void OnUserTypeChanging(string value);
        partial void OnUserTypeChanged();
        partial void OnEmailChanging(string value);
        partial void OnEmailChanged();
        partial void OnMobileChanging(string value);
        partial void OnMobileChanged();
        partial void OnTransactionIdChanging(string value);
        partial void OnTransactionIdChanged();
        partial void OnStatusChanging(string value);
        partial void OnStatusChanged();
        partial void OnResponsecodeChanging(string value);
        partial void OnResponsecodeChanged();
        partial void OnRemarkChanging(string value);
        partial void OnRemarkChanged();
        partial void OnResponseTimeChanging(System.Nullable<System.DateTime> value);
        partial void OnResponseTimeChanged();
        partial void OnPaymentRefChanging(string value);
        partial void OnPaymentRefChanged();
        partial void OnResponseMsgChanging(string value);
        partial void OnResponseMsgChanged();
        partial void OnPaymentModeChanging(string value);
        partial void OnPaymentModeChanged();
        partial void OnCreated_DateChanging(System.Nullable<System.DateTime> value);
        partial void OnCreated_DateChanged();
        partial void OnCreatedByChanging(string value);
        partial void OnCreatedByChanged();
        partial void OnModified_DateChanging(System.Nullable<System.DateTime> value);
        partial void OnModified_DateChanged();
        partial void OnModifiedByChanging(string value);
        partial void OnModifiedByChanged();
        partial void OnISU_UPDATE_FLAGChanging(string value);
        partial void OnISU_UPDATE_FLAGChanged();
        partial void OnISU_UPDATE_DATETIMEChanging(System.Nullable<System.DateTime> value);
        partial void OnISU_UPDATE_DATETIMEChanged();
        partial void OnISU_UPDATE_MESSAGEChanging(string value);
        partial void OnISU_UPDATE_MESSAGEChanged();
        partial void OnEMIOptionChanging(System.Nullable<bool> value);
        partial void OnEMIOptionChanged();
        partial void OnEMIAmountChanging(string value);
        partial void OnEMIAmountChanged();
        partial void OnEMIOutstandingChanging(string value);
        partial void OnEMIOutstandingChanged();
        #endregion

        public PaymentHistory()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Id", DbType = "UniqueIdentifier NOT NULL", IsPrimaryKey = true)]
        public System.Guid Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if ((this._Id != value))
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging();
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AccountNumber", DbType = "NVarChar(50)")]
        public string AccountNumber
        {
            get
            {
                return this._AccountNumber;
            }
            set
            {
                if ((this._AccountNumber != value))
                {
                    this.OnAccountNumberChanging(value);
                    this.SendPropertyChanging();
                    this._AccountNumber = value;
                    this.SendPropertyChanged("AccountNumber");
                    this.OnAccountNumberChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_UserId", DbType = "NVarChar(50)")]
        public string UserId
        {
            get
            {
                return this._UserId;
            }
            set
            {
                if ((this._UserId != value))
                {
                    this.OnUserIdChanging(value);
                    this.SendPropertyChanging();
                    this._UserId = value;
                    this.SendPropertyChanged("UserId");
                    this.OnUserIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_OrderId", DbType = "NVarChar(50)")]
        public string OrderId
        {
            get
            {
                return this._OrderId;
            }
            set
            {
                if ((this._OrderId != value))
                {
                    this.OnOrderIdChanging(value);
                    this.SendPropertyChanging();
                    this._OrderId = value;
                    this.SendPropertyChanged("OrderId");
                    this.OnOrderIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Amount", DbType = "NVarChar(50)")]
        public string Amount
        {
            get
            {
                return this._Amount;
            }
            set
            {
                if ((this._Amount != value))
                {
                    this.OnAmountChanging(value);
                    this.SendPropertyChanging();
                    this._Amount = value;
                    this.SendPropertyChanged("Amount");
                    this.OnAmountChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_RequestTime", DbType = "DateTime")]
        public System.Nullable<System.DateTime> RequestTime
        {
            get
            {
                return this._RequestTime;
            }
            set
            {
                if ((this._RequestTime != value))
                {
                    this.OnRequestTimeChanging(value);
                    this.SendPropertyChanging();
                    this._RequestTime = value;
                    this.SendPropertyChanged("RequestTime");
                    this.OnRequestTimeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Checksumkey", DbType = "NVarChar(50)")]
        public string Checksumkey
        {
            get
            {
                return this._Checksumkey;
            }
            set
            {
                if ((this._Checksumkey != value))
                {
                    this.OnChecksumkeyChanging(value);
                    this.SendPropertyChanging();
                    this._Checksumkey = value;
                    this.SendPropertyChanged("Checksumkey");
                    this.OnChecksumkeyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CurrencyType", DbType = "NVarChar(50)")]
        public string CurrencyType
        {
            get
            {
                return this._CurrencyType;
            }
            set
            {
                if ((this._CurrencyType != value))
                {
                    this.OnCurrencyTypeChanging(value);
                    this.SendPropertyChanging();
                    this._CurrencyType = value;
                    this.SendPropertyChanged("CurrencyType");
                    this.OnCurrencyTypeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_GatewayType", DbType = "NVarChar(50)")]
        public string GatewayType
        {
            get
            {
                return this._GatewayType;
            }
            set
            {
                if ((this._GatewayType != value))
                {
                    this.OnGatewayTypeChanging(value);
                    this.SendPropertyChanging();
                    this._GatewayType = value;
                    this.SendPropertyChanged("GatewayType");
                    this.OnGatewayTypeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_msg", DbType = "NVarChar(MAX)")]
        public string msg
        {
            get
            {
                return this._msg;
            }
            set
            {
                if ((this._msg != value))
                {
                    this.OnmsgChanging(value);
                    this.SendPropertyChanging();
                    this._msg = value;
                    this.SendPropertyChanged("msg");
                    this.OnmsgChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AdvanceAmmount", DbType = "NVarChar(50)")]
        public string AdvanceAmmount
        {
            get
            {
                return this._AdvanceAmmount;
            }
            set
            {
                if ((this._AdvanceAmmount != value))
                {
                    this.OnAdvanceAmmountChanging(value);
                    this.SendPropertyChanging();
                    this._AdvanceAmmount = value;
                    this.SendPropertyChanged("AdvanceAmmount");
                    this.OnAdvanceAmmountChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PaymentType", DbType = "NVarChar(50)")]
        public string PaymentType
        {
            get
            {
                return this._PaymentType;
            }
            set
            {
                if ((this._PaymentType != value))
                {
                    this.OnPaymentTypeChanging(value);
                    this.SendPropertyChanging();
                    this._PaymentType = value;
                    this.SendPropertyChanged("PaymentType");
                    this.OnPaymentTypeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_UserType", DbType = "NVarChar(50)")]
        public string UserType
        {
            get
            {
                return this._UserType;
            }
            set
            {
                if ((this._UserType != value))
                {
                    this.OnUserTypeChanging(value);
                    this.SendPropertyChanging();
                    this._UserType = value;
                    this.SendPropertyChanged("UserType");
                    this.OnUserTypeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Email", DbType = "NVarChar(50)")]
        public string Email
        {
            get
            {
                return this._Email;
            }
            set
            {
                if ((this._Email != value))
                {
                    this.OnEmailChanging(value);
                    this.SendPropertyChanging();
                    this._Email = value;
                    this.SendPropertyChanged("Email");
                    this.OnEmailChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Mobile", DbType = "NVarChar(50)")]
        public string Mobile
        {
            get
            {
                return this._Mobile;
            }
            set
            {
                if ((this._Mobile != value))
                {
                    this.OnMobileChanging(value);
                    this.SendPropertyChanging();
                    this._Mobile = value;
                    this.SendPropertyChanged("Mobile");
                    this.OnMobileChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TransactionId", DbType = "NVarChar(50)")]
        public string TransactionId
        {
            get
            {
                return this._TransactionId;
            }
            set
            {
                if ((this._TransactionId != value))
                {
                    this.OnTransactionIdChanging(value);
                    this.SendPropertyChanging();
                    this._TransactionId = value;
                    this.SendPropertyChanged("TransactionId");
                    this.OnTransactionIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Status", DbType = "NVarChar(50)")]
        public string Status
        {
            get
            {
                return this._Status;
            }
            set
            {
                if ((this._Status != value))
                {
                    this.OnStatusChanging(value);
                    this.SendPropertyChanging();
                    this._Status = value;
                    this.SendPropertyChanged("Status");
                    this.OnStatusChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Responsecode", DbType = "NVarChar(50)")]
        public string Responsecode
        {
            get
            {
                return this._Responsecode;
            }
            set
            {
                if ((this._Responsecode != value))
                {
                    this.OnResponsecodeChanging(value);
                    this.SendPropertyChanging();
                    this._Responsecode = value;
                    this.SendPropertyChanged("Responsecode");
                    this.OnResponsecodeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Remark", DbType = "VarChar(MAX)")]
        public string Remark
        {
            get
            {
                return this._Remark;
            }
            set
            {
                if ((this._Remark != value))
                {
                    this.OnRemarkChanging(value);
                    this.SendPropertyChanging();
                    this._Remark = value;
                    this.SendPropertyChanged("Remark");
                    this.OnRemarkChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ResponseTime", DbType = "DateTime")]
        public System.Nullable<System.DateTime> ResponseTime
        {
            get
            {
                return this._ResponseTime;
            }
            set
            {
                if ((this._ResponseTime != value))
                {
                    this.OnResponseTimeChanging(value);
                    this.SendPropertyChanging();
                    this._ResponseTime = value;
                    this.SendPropertyChanged("ResponseTime");
                    this.OnResponseTimeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PaymentRef", DbType = "NVarChar(50)")]
        public string PaymentRef
        {
            get
            {
                return this._PaymentRef;
            }
            set
            {
                if ((this._PaymentRef != value))
                {
                    this.OnPaymentRefChanging(value);
                    this.SendPropertyChanging();
                    this._PaymentRef = value;
                    this.SendPropertyChanged("PaymentRef");
                    this.OnPaymentRefChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ResponseMsg", DbType = "NVarChar(MAX)")]
        public string ResponseMsg
        {
            get
            {
                return this._ResponseMsg;
            }
            set
            {
                if ((this._ResponseMsg != value))
                {
                    this.OnResponseMsgChanging(value);
                    this.SendPropertyChanging();
                    this._ResponseMsg = value;
                    this.SendPropertyChanged("ResponseMsg");
                    this.OnResponseMsgChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PaymentMode", DbType = "NVarChar(50)")]
        public string PaymentMode
        {
            get
            {
                return this._PaymentMode;
            }
            set
            {
                if ((this._PaymentMode != value))
                {
                    this.OnPaymentModeChanging(value);
                    this.SendPropertyChanging();
                    this._PaymentMode = value;
                    this.SendPropertyChanged("PaymentMode");
                    this.OnPaymentModeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Created_Date", DbType = "DateTime")]
        public System.Nullable<System.DateTime> Created_Date
        {
            get
            {
                return this._Created_Date;
            }
            set
            {
                if ((this._Created_Date != value))
                {
                    this.OnCreated_DateChanging(value);
                    this.SendPropertyChanging();
                    this._Created_Date = value;
                    this.SendPropertyChanged("Created_Date");
                    this.OnCreated_DateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CreatedBy", DbType = "NVarChar(50)")]
        public string CreatedBy
        {
            get
            {
                return this._CreatedBy;
            }
            set
            {
                if ((this._CreatedBy != value))
                {
                    this.OnCreatedByChanging(value);
                    this.SendPropertyChanging();
                    this._CreatedBy = value;
                    this.SendPropertyChanged("CreatedBy");
                    this.OnCreatedByChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Modified_Date", DbType = "DateTime")]
        public System.Nullable<System.DateTime> Modified_Date
        {
            get
            {
                return this._Modified_Date;
            }
            set
            {
                if ((this._Modified_Date != value))
                {
                    this.OnModified_DateChanging(value);
                    this.SendPropertyChanging();
                    this._Modified_Date = value;
                    this.SendPropertyChanged("Modified_Date");
                    this.OnModified_DateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ModifiedBy", DbType = "NVarChar(50)")]
        public string ModifiedBy
        {
            get
            {
                return this._ModifiedBy;
            }
            set
            {
                if ((this._ModifiedBy != value))
                {
                    this.OnModifiedByChanging(value);
                    this.SendPropertyChanging();
                    this._ModifiedBy = value;
                    this.SendPropertyChanged("ModifiedBy");
                    this.OnModifiedByChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ISU_UPDATE_FLAG", DbType = "NChar(10)")]
        public string ISU_UPDATE_FLAG
        {
            get
            {
                return this._ISU_UPDATE_FLAG;
            }
            set
            {
                if ((this._ISU_UPDATE_FLAG != value))
                {
                    this.OnISU_UPDATE_FLAGChanging(value);
                    this.SendPropertyChanging();
                    this._ISU_UPDATE_FLAG = value;
                    this.SendPropertyChanged("ISU_UPDATE_FLAG");
                    this.OnISU_UPDATE_FLAGChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ISU_UPDATE_DATETIME", DbType = "DateTime")]
        public System.Nullable<System.DateTime> ISU_UPDATE_DATETIME
        {
            get
            {
                return this._ISU_UPDATE_DATETIME;
            }
            set
            {
                if ((this._ISU_UPDATE_DATETIME != value))
                {
                    this.OnISU_UPDATE_DATETIMEChanging(value);
                    this.SendPropertyChanging();
                    this._ISU_UPDATE_DATETIME = value;
                    this.SendPropertyChanged("ISU_UPDATE_DATETIME");
                    this.OnISU_UPDATE_DATETIMEChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ISU_UPDATE_MESSAGE", DbType = "NVarChar(MAX)")]
        public string ISU_UPDATE_MESSAGE
        {
            get
            {
                return this._ISU_UPDATE_MESSAGE;
            }
            set
            {
                if ((this._ISU_UPDATE_MESSAGE != value))
                {
                    this.OnISU_UPDATE_MESSAGEChanging(value);
                    this.SendPropertyChanging();
                    this._ISU_UPDATE_MESSAGE = value;
                    this.SendPropertyChanged("ISU_UPDATE_MESSAGE");
                    this.OnISU_UPDATE_MESSAGEChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EMIOption", DbType = "Bit")]
        public System.Nullable<bool> EMIOption
        {
            get
            {
                return this._EMIOption;
            }
            set
            {
                if ((this._EMIOption != value))
                {
                    this.OnEMIOptionChanging(value);
                    this.SendPropertyChanging();
                    this._EMIOption = value;
                    this.SendPropertyChanged("EMIOption");
                    this.OnEMIOptionChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EMIAmount", DbType = "NVarChar(50)")]
        public string EMIAmount
        {
            get
            {
                return this._EMIAmount;
            }
            set
            {
                if ((this._EMIAmount != value))
                {
                    this.OnEMIAmountChanging(value);
                    this.SendPropertyChanging();
                    this._EMIAmount = value;
                    this.SendPropertyChanged("EMIAmount");
                    this.OnEMIAmountChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EMIOutstanding", DbType = "NVarChar(50)")]
        public string EMIOutstanding
        {
            get
            {
                return this._EMIOutstanding;
            }
            set
            {
                if ((this._EMIOutstanding != value))
                {
                    this.OnEMIOutstandingChanging(value);
                    this.SendPropertyChanging();
                    this._EMIOutstanding = value;
                    this.SendPropertyChanged("EMIOutstanding");
                    this.OnEMIOutstandingChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.SolarApplicationDocumentMaster")]
    public partial class SolarApplicationDocumentMaster : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private System.Guid _Id;

        private int _DocumentSerialNumber;

        private bool _IsSubsidizedCategory;

        private string _DocumentName;

        private string _DocumentDescription;

        private string _DocumentTypeAllowed;

        private string _DocumentSizeAllowed;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(System.Guid value);
        partial void OnIdChanged();
        partial void OnDocumentSerialNumberChanging(int value);
        partial void OnDocumentSerialNumberChanged();
        partial void OnIsSubsidizedCategoryChanging(bool value);
        partial void OnIsSubsidizedCategoryChanged();
        partial void OnDocumentNameChanging(string value);
        partial void OnDocumentNameChanged();
        partial void OnDocumentDescriptionChanging(string value);
        partial void OnDocumentDescriptionChanged();
        partial void OnDocumentTypeAllowedChanging(string value);
        partial void OnDocumentTypeAllowedChanged();
        partial void OnDocumentSizeAllowedChanging(string value);
        partial void OnDocumentSizeAllowedChanged();
        #endregion

        public SolarApplicationDocumentMaster()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Id", DbType = "UniqueIdentifier NOT NULL", IsPrimaryKey = true)]
        public System.Guid Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if ((this._Id != value))
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging();
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DocumentSerialNumber", DbType = "Int NOT NULL")]
        public int DocumentSerialNumber
        {
            get
            {
                return this._DocumentSerialNumber;
            }
            set
            {
                if ((this._DocumentSerialNumber != value))
                {
                    this.OnDocumentSerialNumberChanging(value);
                    this.SendPropertyChanging();
                    this._DocumentSerialNumber = value;
                    this.SendPropertyChanged("DocumentSerialNumber");
                    this.OnDocumentSerialNumberChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsSubsidizedCategory", DbType = "Bit NOT NULL")]
        public bool IsSubsidizedCategory
        {
            get
            {
                return this._IsSubsidizedCategory;
            }
            set
            {
                if ((this._IsSubsidizedCategory != value))
                {
                    this.OnIsSubsidizedCategoryChanging(value);
                    this.SendPropertyChanging();
                    this._IsSubsidizedCategory = value;
                    this.SendPropertyChanged("IsSubsidizedCategory");
                    this.OnIsSubsidizedCategoryChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DocumentName", DbType = "NVarChar(150) NOT NULL", CanBeNull = false)]
        public string DocumentName
        {
            get
            {
                return this._DocumentName;
            }
            set
            {
                if ((this._DocumentName != value))
                {
                    this.OnDocumentNameChanging(value);
                    this.SendPropertyChanging();
                    this._DocumentName = value;
                    this.SendPropertyChanged("DocumentName");
                    this.OnDocumentNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DocumentDescription", DbType = "NVarChar(MAX)")]
        public string DocumentDescription
        {
            get
            {
                return this._DocumentDescription;
            }
            set
            {
                if ((this._DocumentDescription != value))
                {
                    this.OnDocumentDescriptionChanging(value);
                    this.SendPropertyChanging();
                    this._DocumentDescription = value;
                    this.SendPropertyChanged("DocumentDescription");
                    this.OnDocumentDescriptionChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DocumentTypeAllowed", DbType = "NVarChar(100)")]
        public string DocumentTypeAllowed
        {
            get
            {
                return this._DocumentTypeAllowed;
            }
            set
            {
                if ((this._DocumentTypeAllowed != value))
                {
                    this.OnDocumentTypeAllowedChanging(value);
                    this.SendPropertyChanging();
                    this._DocumentTypeAllowed = value;
                    this.SendPropertyChanged("DocumentTypeAllowed");
                    this.OnDocumentTypeAllowedChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DocumentSizeAllowed", DbType = "NVarChar(50)")]
        public string DocumentSizeAllowed
        {
            get
            {
                return this._DocumentSizeAllowed;
            }
            set
            {
                if ((this._DocumentSizeAllowed != value))
                {
                    this.OnDocumentSizeAllowedChanging(value);
                    this.SendPropertyChanging();
                    this._DocumentSizeAllowed = value;
                    this.SendPropertyChanged("DocumentSizeAllowed");
                    this.OnDocumentSizeAllowedChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.SolarApplicationVendorList")]
    public partial class SolarApplicationVendorList : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private System.Guid _Id;

        private string _NameOfVendorAgency;

        private string _Address;

        private string _City;

        private string _District;

        private string _State;

        private string _ContactName;

        private string _EmailAddress;

        private string _MobileNumber;

        private string _PublicMobileNumber;

        private string _STDLandlineNumber;

        private string _STDFaxNumber;

        private string _WebsiteAddress;

        private string _PANNumber;

        private string _RatingAgency;

        private string _RatingReceived;

        private string _ApprovedRate;

        private System.Nullable<bool> _IsActive;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(System.Guid value);
        partial void OnIdChanged();
        partial void OnNameOfVendorAgencyChanging(string value);
        partial void OnNameOfVendorAgencyChanged();
        partial void OnAddressChanging(string value);
        partial void OnAddressChanged();
        partial void OnCityChanging(string value);
        partial void OnCityChanged();
        partial void OnDistrictChanging(string value);
        partial void OnDistrictChanged();
        partial void OnStateChanging(string value);
        partial void OnStateChanged();
        partial void OnContactNameChanging(string value);
        partial void OnContactNameChanged();
        partial void OnEmailAddressChanging(string value);
        partial void OnEmailAddressChanged();
        partial void OnMobileNumberChanging(string value);
        partial void OnMobileNumberChanged();
        partial void OnPublicMobileNumberChanging(string value);
        partial void OnPublicMobileNumberChanged();
        partial void OnSTDLandlineNumberChanging(string value);
        partial void OnSTDLandlineNumberChanged();
        partial void OnSTDFaxNumberChanging(string value);
        partial void OnSTDFaxNumberChanged();
        partial void OnWebsiteAddressChanging(string value);
        partial void OnWebsiteAddressChanged();
        partial void OnPANNumberChanging(string value);
        partial void OnPANNumberChanged();
        partial void OnRatingAgencyChanging(string value);
        partial void OnRatingAgencyChanged();
        partial void OnRatingReceivedChanging(string value);
        partial void OnRatingReceivedChanged();
        partial void OnApprovedRateChanging(string value);
        partial void OnApprovedRateChanged();
        partial void OnIsActiveChanging(System.Nullable<bool> value);
        partial void OnIsActiveChanged();
        #endregion

        public SolarApplicationVendorList()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Id", DbType = "UniqueIdentifier NOT NULL", IsPrimaryKey = true)]
        public System.Guid Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if ((this._Id != value))
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging();
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NameOfVendorAgency", DbType = "NVarChar(500) NOT NULL", CanBeNull = false)]
        public string NameOfVendorAgency
        {
            get
            {
                return this._NameOfVendorAgency;
            }
            set
            {
                if ((this._NameOfVendorAgency != value))
                {
                    this.OnNameOfVendorAgencyChanging(value);
                    this.SendPropertyChanging();
                    this._NameOfVendorAgency = value;
                    this.SendPropertyChanged("NameOfVendorAgency");
                    this.OnNameOfVendorAgencyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Address", DbType = "NVarChar(1000)")]
        public string Address
        {
            get
            {
                return this._Address;
            }
            set
            {
                if ((this._Address != value))
                {
                    this.OnAddressChanging(value);
                    this.SendPropertyChanging();
                    this._Address = value;
                    this.SendPropertyChanged("Address");
                    this.OnAddressChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_City", DbType = "NVarChar(1000)")]
        public string City
        {
            get
            {
                return this._City;
            }
            set
            {
                if ((this._City != value))
                {
                    this.OnCityChanging(value);
                    this.SendPropertyChanging();
                    this._City = value;
                    this.SendPropertyChanged("City");
                    this.OnCityChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_District", DbType = "NVarChar(1000)")]
        public string District
        {
            get
            {
                return this._District;
            }
            set
            {
                if ((this._District != value))
                {
                    this.OnDistrictChanging(value);
                    this.SendPropertyChanging();
                    this._District = value;
                    this.SendPropertyChanged("District");
                    this.OnDistrictChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_State", DbType = "NVarChar(1000)")]
        public string State
        {
            get
            {
                return this._State;
            }
            set
            {
                if ((this._State != value))
                {
                    this.OnStateChanging(value);
                    this.SendPropertyChanging();
                    this._State = value;
                    this.SendPropertyChanged("State");
                    this.OnStateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ContactName", DbType = "NVarChar(100) NOT NULL", CanBeNull = false)]
        public string ContactName
        {
            get
            {
                return this._ContactName;
            }
            set
            {
                if ((this._ContactName != value))
                {
                    this.OnContactNameChanging(value);
                    this.SendPropertyChanging();
                    this._ContactName = value;
                    this.SendPropertyChanged("ContactName");
                    this.OnContactNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EmailAddress", DbType = "NVarChar(50) NOT NULL", CanBeNull = false)]
        public string EmailAddress
        {
            get
            {
                return this._EmailAddress;
            }
            set
            {
                if ((this._EmailAddress != value))
                {
                    this.OnEmailAddressChanging(value);
                    this.SendPropertyChanging();
                    this._EmailAddress = value;
                    this.SendPropertyChanged("EmailAddress");
                    this.OnEmailAddressChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MobileNumber", DbType = "NVarChar(50) NOT NULL", CanBeNull = false)]
        public string MobileNumber
        {
            get
            {
                return this._MobileNumber;
            }
            set
            {
                if ((this._MobileNumber != value))
                {
                    this.OnMobileNumberChanging(value);
                    this.SendPropertyChanging();
                    this._MobileNumber = value;
                    this.SendPropertyChanged("MobileNumber");
                    this.OnMobileNumberChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PublicMobileNumber", DbType = "NVarChar(50) NOT NULL", CanBeNull = false)]
        public string PublicMobileNumber
        {
            get
            {
                return this._PublicMobileNumber;
            }
            set
            {
                if ((this._PublicMobileNumber != value))
                {
                    this.OnPublicMobileNumberChanging(value);
                    this.SendPropertyChanging();
                    this._PublicMobileNumber = value;
                    this.SendPropertyChanged("PublicMobileNumber");
                    this.OnPublicMobileNumberChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_STDLandlineNumber", DbType = "NVarChar(50) NOT NULL", CanBeNull = false)]
        public string STDLandlineNumber
        {
            get
            {
                return this._STDLandlineNumber;
            }
            set
            {
                if ((this._STDLandlineNumber != value))
                {
                    this.OnSTDLandlineNumberChanging(value);
                    this.SendPropertyChanging();
                    this._STDLandlineNumber = value;
                    this.SendPropertyChanged("STDLandlineNumber");
                    this.OnSTDLandlineNumberChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_STDFaxNumber", DbType = "NVarChar(50) NOT NULL", CanBeNull = false)]
        public string STDFaxNumber
        {
            get
            {
                return this._STDFaxNumber;
            }
            set
            {
                if ((this._STDFaxNumber != value))
                {
                    this.OnSTDFaxNumberChanging(value);
                    this.SendPropertyChanging();
                    this._STDFaxNumber = value;
                    this.SendPropertyChanged("STDFaxNumber");
                    this.OnSTDFaxNumberChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_WebsiteAddress", DbType = "NVarChar(50)")]
        public string WebsiteAddress
        {
            get
            {
                return this._WebsiteAddress;
            }
            set
            {
                if ((this._WebsiteAddress != value))
                {
                    this.OnWebsiteAddressChanging(value);
                    this.SendPropertyChanging();
                    this._WebsiteAddress = value;
                    this.SendPropertyChanged("WebsiteAddress");
                    this.OnWebsiteAddressChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PANNumber", DbType = "NVarChar(50)")]
        public string PANNumber
        {
            get
            {
                return this._PANNumber;
            }
            set
            {
                if ((this._PANNumber != value))
                {
                    this.OnPANNumberChanging(value);
                    this.SendPropertyChanging();
                    this._PANNumber = value;
                    this.SendPropertyChanged("PANNumber");
                    this.OnPANNumberChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_RatingAgency", DbType = "NVarChar(50)")]
        public string RatingAgency
        {
            get
            {
                return this._RatingAgency;
            }
            set
            {
                if ((this._RatingAgency != value))
                {
                    this.OnRatingAgencyChanging(value);
                    this.SendPropertyChanging();
                    this._RatingAgency = value;
                    this.SendPropertyChanged("RatingAgency");
                    this.OnRatingAgencyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_RatingReceived", DbType = "NVarChar(50)")]
        public string RatingReceived
        {
            get
            {
                return this._RatingReceived;
            }
            set
            {
                if ((this._RatingReceived != value))
                {
                    this.OnRatingReceivedChanging(value);
                    this.SendPropertyChanging();
                    this._RatingReceived = value;
                    this.SendPropertyChanged("RatingReceived");
                    this.OnRatingReceivedChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ApprovedRate", DbType = "NVarChar(50)")]
        public string ApprovedRate
        {
            get
            {
                return this._ApprovedRate;
            }
            set
            {
                if ((this._ApprovedRate != value))
                {
                    this.OnApprovedRateChanging(value);
                    this.SendPropertyChanging();
                    this._ApprovedRate = value;
                    this.SendPropertyChanged("ApprovedRate");
                    this.OnApprovedRateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsActive", DbType = "Bit")]
        public System.Nullable<bool> IsActive
        {
            get
            {
                return this._IsActive;
            }
            set
            {
                if ((this._IsActive != value))
                {
                    this.OnIsActiveChanging(value);
                    this.SendPropertyChanging();
                    this._IsActive = value;
                    this.SendPropertyChanged("IsActive");
                    this.OnIsActiveChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.SolarApplicationVoltageMaster")]
    public partial class SolarApplicationVoltageMaster : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _Id;

        private string _VoltageLevel;

        private string _VoltageDescription;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnVoltageLevelChanging(string value);
        partial void OnVoltageLevelChanged();
        partial void OnVoltageDescriptionChanging(string value);
        partial void OnVoltageDescriptionChanged();
        #endregion

        public SolarApplicationVoltageMaster()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Id", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if ((this._Id != value))
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging();
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_VoltageLevel", DbType = "NVarChar(50) NOT NULL", CanBeNull = false)]
        public string VoltageLevel
        {
            get
            {
                return this._VoltageLevel;
            }
            set
            {
                if ((this._VoltageLevel != value))
                {
                    this.OnVoltageLevelChanging(value);
                    this.SendPropertyChanging();
                    this._VoltageLevel = value;
                    this.SendPropertyChanged("VoltageLevel");
                    this.OnVoltageLevelChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_VoltageDescription", DbType = "NVarChar(50) NOT NULL", CanBeNull = false)]
        public string VoltageDescription
        {
            get
            {
                return this._VoltageDescription;
            }
            set
            {
                if ((this._VoltageDescription != value))
                {
                    this.OnVoltageDescriptionChanging(value);
                    this.SendPropertyChanging();
                    this._VoltageDescription = value;
                    this.SendPropertyChanged("VoltageDescription");
                    this.OnVoltageDescriptionChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.SolarApplicationDocumentDetails")]
    public partial class SolarApplicationDocumentDetail : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private System.Guid _Id;

        private System.Guid _SolarApplicationId;

        private string _AccountNumber;

        private System.Guid _DocumentId;

        private System.Nullable<int> _DocumentSerialNumber;

        private string _DocumentName;

        private System.Nullable<System.DateTime> _CreatedDate;

        private string _CreatedBy;

        private System.Nullable<bool> _IsSentToSAP;

        private System.Nullable<System.DateTime> _SAPSentDate;

        private System.Data.Linq.Binary _DocumentData;

        private string _DocumentDataContenttype;

        private string _SAPReturnMsg;

        private int _ApplicationNumber;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(System.Guid value);
        partial void OnIdChanged();
        partial void OnSolarApplicationIdChanging(System.Guid value);
        partial void OnSolarApplicationIdChanged();
        partial void OnAccountNumberChanging(string value);
        partial void OnAccountNumberChanged();
        partial void OnDocumentIdChanging(System.Guid value);
        partial void OnDocumentIdChanged();
        partial void OnDocumentSerialNumberChanging(System.Nullable<int> value);
        partial void OnDocumentSerialNumberChanged();
        partial void OnDocumentNameChanging(string value);
        partial void OnDocumentNameChanged();
        partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
        partial void OnCreatedDateChanged();
        partial void OnCreatedByChanging(string value);
        partial void OnCreatedByChanged();
        partial void OnIsSentToSAPChanging(System.Nullable<bool> value);
        partial void OnIsSentToSAPChanged();
        partial void OnSAPSentDateChanging(System.Nullable<System.DateTime> value);
        partial void OnSAPSentDateChanged();
        partial void OnDocumentDataChanging(System.Data.Linq.Binary value);
        partial void OnDocumentDataChanged();
        partial void OnDocumentDataContenttypeChanging(string value);
        partial void OnDocumentDataContenttypeChanged();
        partial void OnSAPReturnMsgChanging(string value);
        partial void OnSAPReturnMsgChanged();
        partial void OnApplicationNumberChanging(int value);
        partial void OnApplicationNumberChanged();
        #endregion

        public SolarApplicationDocumentDetail()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Id", DbType = "UniqueIdentifier NOT NULL", IsPrimaryKey = true)]
        public System.Guid Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if ((this._Id != value))
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging();
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SolarApplicationId", DbType = "UniqueIdentifier NOT NULL")]
        public System.Guid SolarApplicationId
        {
            get
            {
                return this._SolarApplicationId;
            }
            set
            {
                if ((this._SolarApplicationId != value))
                {
                    this.OnSolarApplicationIdChanging(value);
                    this.SendPropertyChanging();
                    this._SolarApplicationId = value;
                    this.SendPropertyChanged("SolarApplicationId");
                    this.OnSolarApplicationIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AccountNumber", DbType = "NVarChar(50) NOT NULL", CanBeNull = false)]
        public string AccountNumber
        {
            get
            {
                return this._AccountNumber;
            }
            set
            {
                if ((this._AccountNumber != value))
                {
                    this.OnAccountNumberChanging(value);
                    this.SendPropertyChanging();
                    this._AccountNumber = value;
                    this.SendPropertyChanged("AccountNumber");
                    this.OnAccountNumberChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DocumentId", DbType = "UniqueIdentifier NOT NULL")]
        public System.Guid DocumentId
        {
            get
            {
                return this._DocumentId;
            }
            set
            {
                if ((this._DocumentId != value))
                {
                    this.OnDocumentIdChanging(value);
                    this.SendPropertyChanging();
                    this._DocumentId = value;
                    this.SendPropertyChanged("DocumentId");
                    this.OnDocumentIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DocumentSerialNumber", DbType = "Int")]
        public System.Nullable<int> DocumentSerialNumber
        {
            get
            {
                return this._DocumentSerialNumber;
            }
            set
            {
                if ((this._DocumentSerialNumber != value))
                {
                    this.OnDocumentSerialNumberChanging(value);
                    this.SendPropertyChanging();
                    this._DocumentSerialNumber = value;
                    this.SendPropertyChanged("DocumentSerialNumber");
                    this.OnDocumentSerialNumberChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DocumentName", DbType = "NVarChar(50) NOT NULL", CanBeNull = false)]
        public string DocumentName
        {
            get
            {
                return this._DocumentName;
            }
            set
            {
                if ((this._DocumentName != value))
                {
                    this.OnDocumentNameChanging(value);
                    this.SendPropertyChanging();
                    this._DocumentName = value;
                    this.SendPropertyChanged("DocumentName");
                    this.OnDocumentNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CreatedDate", DbType = "DateTime")]
        public System.Nullable<System.DateTime> CreatedDate
        {
            get
            {
                return this._CreatedDate;
            }
            set
            {
                if ((this._CreatedDate != value))
                {
                    this.OnCreatedDateChanging(value);
                    this.SendPropertyChanging();
                    this._CreatedDate = value;
                    this.SendPropertyChanged("CreatedDate");
                    this.OnCreatedDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CreatedBy", DbType = "NVarChar(50)")]
        public string CreatedBy
        {
            get
            {
                return this._CreatedBy;
            }
            set
            {
                if ((this._CreatedBy != value))
                {
                    this.OnCreatedByChanging(value);
                    this.SendPropertyChanging();
                    this._CreatedBy = value;
                    this.SendPropertyChanged("CreatedBy");
                    this.OnCreatedByChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsSentToSAP", DbType = "Bit")]
        public System.Nullable<bool> IsSentToSAP
        {
            get
            {
                return this._IsSentToSAP;
            }
            set
            {
                if ((this._IsSentToSAP != value))
                {
                    this.OnIsSentToSAPChanging(value);
                    this.SendPropertyChanging();
                    this._IsSentToSAP = value;
                    this.SendPropertyChanged("IsSentToSAP");
                    this.OnIsSentToSAPChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SAPSentDate", DbType = "DateTime")]
        public System.Nullable<System.DateTime> SAPSentDate
        {
            get
            {
                return this._SAPSentDate;
            }
            set
            {
                if ((this._SAPSentDate != value))
                {
                    this.OnSAPSentDateChanging(value);
                    this.SendPropertyChanging();
                    this._SAPSentDate = value;
                    this.SendPropertyChanged("SAPSentDate");
                    this.OnSAPSentDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DocumentData", DbType = "VarBinary(MAX)", UpdateCheck = UpdateCheck.Never)]
        public System.Data.Linq.Binary DocumentData
        {
            get
            {
                return this._DocumentData;
            }
            set
            {
                if ((this._DocumentData != value))
                {
                    this.OnDocumentDataChanging(value);
                    this.SendPropertyChanging();
                    this._DocumentData = value;
                    this.SendPropertyChanged("DocumentData");
                    this.OnDocumentDataChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DocumentDataContenttype", DbType = "NVarChar(50)")]
        public string DocumentDataContenttype
        {
            get
            {
                return this._DocumentDataContenttype;
            }
            set
            {
                if ((this._DocumentDataContenttype != value))
                {
                    this.OnDocumentDataContenttypeChanging(value);
                    this.SendPropertyChanging();
                    this._DocumentDataContenttype = value;
                    this.SendPropertyChanged("DocumentDataContenttype");
                    this.OnDocumentDataContenttypeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SAPReturnMsg", DbType = "NVarChar(MAX)")]
        public string SAPReturnMsg
        {
            get
            {
                return this._SAPReturnMsg;
            }
            set
            {
                if ((this._SAPReturnMsg != value))
                {
                    this.OnSAPReturnMsgChanging(value);
                    this.SendPropertyChanging();
                    this._SAPReturnMsg = value;
                    this.SendPropertyChanged("SAPReturnMsg");
                    this.OnSAPReturnMsgChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ApplicationNumber", DbType = "Int NOT NULL")]
        public int ApplicationNumber
        {
            get
            {
                return this._ApplicationNumber;
            }
            set
            {
                if ((this._ApplicationNumber != value))
                {
                    this.OnApplicationNumberChanging(value);
                    this.SendPropertyChanging();
                    this._ApplicationNumber = value;
                    this.SendPropertyChanged("ApplicationNumber");
                    this.OnApplicationNumberChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.SolarApplicationDetails")]
    public partial class SolarApplicationDetail : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private System.Guid _Id;

        private string _AccountNumber;

        private string _MeterNumber;

        private string _ConsumerName;

        private string _Address;

        private string _RateCategory;

        private string _EmailAddress;

        private string _MobileNumber;

        private string _VoltageCategorySelected;

        private string _ProposedACcapacity;

        private string _LECNumber;

        private bool _IsRooftopSolarInstalled;

        private bool _IsOwnershipLeased;

        private bool _IsObligatedEntity;

        private bool _IsNetMeterOpted;

        private string _InstallationCost;

        private System.Nullable<System.Guid> _VenderSelected;

        private string _VenderNameSeleted;

        private System.DateTime _CreatedDate;

        private string _CreatedBy;

        private int _ApplicationNumber;

        private string _OrderNumber;

        private string _AmountTobePaid;

        private string _ApplicationStatus;

        private System.Nullable<bool> _IsPaymentDone;

        private System.Nullable<System.DateTime> _PaymentDate;

        private string _TransactionId;

        private System.Nullable<bool> _IsRooftopPlusGroundCapacity;

        private string _ApplicationCategory;

        private string _AadharNumber;

        private System.Nullable<bool> _IsSubsidizedCategory;

        private string _TempRegistrationNumber;

        private string _Workcenter;

        private string _UserId;

        private string _OrderId;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(System.Guid value);
        partial void OnIdChanged();
        partial void OnAccountNumberChanging(string value);
        partial void OnAccountNumberChanged();
        partial void OnMeterNumberChanging(string value);
        partial void OnMeterNumberChanged();
        partial void OnConsumerNameChanging(string value);
        partial void OnConsumerNameChanged();
        partial void OnAddressChanging(string value);
        partial void OnAddressChanged();
        partial void OnRateCategoryChanging(string value);
        partial void OnRateCategoryChanged();
        partial void OnEmailAddressChanging(string value);
        partial void OnEmailAddressChanged();
        partial void OnMobileNumberChanging(string value);
        partial void OnMobileNumberChanged();
        partial void OnVoltageCategorySelectedChanging(string value);
        partial void OnVoltageCategorySelectedChanged();
        partial void OnProposedACcapacityChanging(string value);
        partial void OnProposedACcapacityChanged();
        partial void OnLECNumberChanging(string value);
        partial void OnLECNumberChanged();
        partial void OnIsRooftopSolarInstalledChanging(bool value);
        partial void OnIsRooftopSolarInstalledChanged();
        partial void OnIsOwnershipLeasedChanging(bool value);
        partial void OnIsOwnershipLeasedChanged();
        partial void OnIsObligatedEntityChanging(bool value);
        partial void OnIsObligatedEntityChanged();
        partial void OnIsNetMeterOptedChanging(bool value);
        partial void OnIsNetMeterOptedChanged();
        partial void OnInstallationCostChanging(string value);
        partial void OnInstallationCostChanged();
        partial void OnVenderSelectedChanging(System.Nullable<System.Guid> value);
        partial void OnVenderSelectedChanged();
        partial void OnVenderNameSeletedChanging(string value);
        partial void OnVenderNameSeletedChanged();
        partial void OnCreatedDateChanging(System.DateTime value);
        partial void OnCreatedDateChanged();
        partial void OnCreatedByChanging(string value);
        partial void OnCreatedByChanged();
        partial void OnApplicationNumberChanging(int value);
        partial void OnApplicationNumberChanged();
        partial void OnOrderNumberChanging(string value);
        partial void OnOrderNumberChanged();
        partial void OnAmountTobePaidChanging(string value);
        partial void OnAmountTobePaidChanged();
        partial void OnApplicationStatusChanging(string value);
        partial void OnApplicationStatusChanged();
        partial void OnIsPaymentDoneChanging(System.Nullable<bool> value);
        partial void OnIsPaymentDoneChanged();
        partial void OnPaymentDateChanging(System.Nullable<System.DateTime> value);
        partial void OnPaymentDateChanged();
        partial void OnTransactionIdChanging(string value);
        partial void OnTransactionIdChanged();
        partial void OnIsRooftopPlusGroundCapacityChanging(System.Nullable<bool> value);
        partial void OnIsRooftopPlusGroundCapacityChanged();
        partial void OnApplicationCategoryChanging(string value);
        partial void OnApplicationCategoryChanged();
        partial void OnAadharNumberChanging(string value);
        partial void OnAadharNumberChanged();
        partial void OnIsSubsidizedCategoryChanging(System.Nullable<bool> value);
        partial void OnIsSubsidizedCategoryChanged();
        partial void OnTempRegistrationNumberChanging(string value);
        partial void OnTempRegistrationNumberChanged();
        partial void OnWorkcenterChanging(string value);
        partial void OnWorkcenterChanged();
        partial void OnUserIdChanging(string value);
        partial void OnUserIdChanged();
        partial void OnOrderIdChanging(string value);
        partial void OnOrderIdChanged();
        #endregion

        public SolarApplicationDetail()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Id", DbType = "UniqueIdentifier NOT NULL", IsPrimaryKey = true)]
        public System.Guid Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if ((this._Id != value))
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging();
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AccountNumber", DbType = "NVarChar(50) NOT NULL", CanBeNull = false)]
        public string AccountNumber
        {
            get
            {
                return this._AccountNumber;
            }
            set
            {
                if ((this._AccountNumber != value))
                {
                    this.OnAccountNumberChanging(value);
                    this.SendPropertyChanging();
                    this._AccountNumber = value;
                    this.SendPropertyChanged("AccountNumber");
                    this.OnAccountNumberChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MeterNumber", DbType = "NVarChar(50) NOT NULL", CanBeNull = false)]
        public string MeterNumber
        {
            get
            {
                return this._MeterNumber;
            }
            set
            {
                if ((this._MeterNumber != value))
                {
                    this.OnMeterNumberChanging(value);
                    this.SendPropertyChanging();
                    this._MeterNumber = value;
                    this.SendPropertyChanged("MeterNumber");
                    this.OnMeterNumberChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ConsumerName", DbType = "NVarChar(100) NOT NULL", CanBeNull = false)]
        public string ConsumerName
        {
            get
            {
                return this._ConsumerName;
            }
            set
            {
                if ((this._ConsumerName != value))
                {
                    this.OnConsumerNameChanging(value);
                    this.SendPropertyChanging();
                    this._ConsumerName = value;
                    this.SendPropertyChanged("ConsumerName");
                    this.OnConsumerNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Address", DbType = "NVarChar(500)")]
        public string Address
        {
            get
            {
                return this._Address;
            }
            set
            {
                if ((this._Address != value))
                {
                    this.OnAddressChanging(value);
                    this.SendPropertyChanging();
                    this._Address = value;
                    this.SendPropertyChanged("Address");
                    this.OnAddressChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_RateCategory", DbType = "NVarChar(50) NOT NULL", CanBeNull = false)]
        public string RateCategory
        {
            get
            {
                return this._RateCategory;
            }
            set
            {
                if ((this._RateCategory != value))
                {
                    this.OnRateCategoryChanging(value);
                    this.SendPropertyChanging();
                    this._RateCategory = value;
                    this.SendPropertyChanged("RateCategory");
                    this.OnRateCategoryChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EmailAddress", DbType = "NVarChar(50)")]
        public string EmailAddress
        {
            get
            {
                return this._EmailAddress;
            }
            set
            {
                if ((this._EmailAddress != value))
                {
                    this.OnEmailAddressChanging(value);
                    this.SendPropertyChanging();
                    this._EmailAddress = value;
                    this.SendPropertyChanged("EmailAddress");
                    this.OnEmailAddressChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MobileNumber", DbType = "NVarChar(50)")]
        public string MobileNumber
        {
            get
            {
                return this._MobileNumber;
            }
            set
            {
                if ((this._MobileNumber != value))
                {
                    this.OnMobileNumberChanging(value);
                    this.SendPropertyChanging();
                    this._MobileNumber = value;
                    this.SendPropertyChanged("MobileNumber");
                    this.OnMobileNumberChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_VoltageCategorySelected", DbType = "NVarChar(50) NOT NULL", CanBeNull = false)]
        public string VoltageCategorySelected
        {
            get
            {
                return this._VoltageCategorySelected;
            }
            set
            {
                if ((this._VoltageCategorySelected != value))
                {
                    this.OnVoltageCategorySelectedChanging(value);
                    this.SendPropertyChanging();
                    this._VoltageCategorySelected = value;
                    this.SendPropertyChanged("VoltageCategorySelected");
                    this.OnVoltageCategorySelectedChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ProposedACcapacity", DbType = "NVarChar(50)")]
        public string ProposedACcapacity
        {
            get
            {
                return this._ProposedACcapacity;
            }
            set
            {
                if ((this._ProposedACcapacity != value))
                {
                    this.OnProposedACcapacityChanging(value);
                    this.SendPropertyChanging();
                    this._ProposedACcapacity = value;
                    this.SendPropertyChanged("ProposedACcapacity");
                    this.OnProposedACcapacityChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LECNumber", DbType = "NVarChar(50) NOT NULL", CanBeNull = false)]
        public string LECNumber
        {
            get
            {
                return this._LECNumber;
            }
            set
            {
                if ((this._LECNumber != value))
                {
                    this.OnLECNumberChanging(value);
                    this.SendPropertyChanging();
                    this._LECNumber = value;
                    this.SendPropertyChanged("LECNumber");
                    this.OnLECNumberChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsRooftopSolarInstalled", DbType = "Bit NOT NULL")]
        public bool IsRooftopSolarInstalled
        {
            get
            {
                return this._IsRooftopSolarInstalled;
            }
            set
            {
                if ((this._IsRooftopSolarInstalled != value))
                {
                    this.OnIsRooftopSolarInstalledChanging(value);
                    this.SendPropertyChanging();
                    this._IsRooftopSolarInstalled = value;
                    this.SendPropertyChanged("IsRooftopSolarInstalled");
                    this.OnIsRooftopSolarInstalledChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsOwnershipLeased", DbType = "Bit NOT NULL")]
        public bool IsOwnershipLeased
        {
            get
            {
                return this._IsOwnershipLeased;
            }
            set
            {
                if ((this._IsOwnershipLeased != value))
                {
                    this.OnIsOwnershipLeasedChanging(value);
                    this.SendPropertyChanging();
                    this._IsOwnershipLeased = value;
                    this.SendPropertyChanged("IsOwnershipLeased");
                    this.OnIsOwnershipLeasedChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsObligatedEntity", DbType = "Bit NOT NULL")]
        public bool IsObligatedEntity
        {
            get
            {
                return this._IsObligatedEntity;
            }
            set
            {
                if ((this._IsObligatedEntity != value))
                {
                    this.OnIsObligatedEntityChanging(value);
                    this.SendPropertyChanging();
                    this._IsObligatedEntity = value;
                    this.SendPropertyChanged("IsObligatedEntity");
                    this.OnIsObligatedEntityChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsNetMeterOpted", DbType = "Bit NOT NULL")]
        public bool IsNetMeterOpted
        {
            get
            {
                return this._IsNetMeterOpted;
            }
            set
            {
                if ((this._IsNetMeterOpted != value))
                {
                    this.OnIsNetMeterOptedChanging(value);
                    this.SendPropertyChanging();
                    this._IsNetMeterOpted = value;
                    this.SendPropertyChanged("IsNetMeterOpted");
                    this.OnIsNetMeterOptedChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_InstallationCost", DbType = "NVarChar(50)")]
        public string InstallationCost
        {
            get
            {
                return this._InstallationCost;
            }
            set
            {
                if ((this._InstallationCost != value))
                {
                    this.OnInstallationCostChanging(value);
                    this.SendPropertyChanging();
                    this._InstallationCost = value;
                    this.SendPropertyChanged("InstallationCost");
                    this.OnInstallationCostChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_VenderSelected", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> VenderSelected
        {
            get
            {
                return this._VenderSelected;
            }
            set
            {
                if ((this._VenderSelected != value))
                {
                    this.OnVenderSelectedChanging(value);
                    this.SendPropertyChanging();
                    this._VenderSelected = value;
                    this.SendPropertyChanged("VenderSelected");
                    this.OnVenderSelectedChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_VenderNameSeleted", DbType = "NVarChar(100)")]
        public string VenderNameSeleted
        {
            get
            {
                return this._VenderNameSeleted;
            }
            set
            {
                if ((this._VenderNameSeleted != value))
                {
                    this.OnVenderNameSeletedChanging(value);
                    this.SendPropertyChanging();
                    this._VenderNameSeleted = value;
                    this.SendPropertyChanged("VenderNameSeleted");
                    this.OnVenderNameSeletedChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CreatedDate", DbType = "DateTime NOT NULL")]
        public System.DateTime CreatedDate
        {
            get
            {
                return this._CreatedDate;
            }
            set
            {
                if ((this._CreatedDate != value))
                {
                    this.OnCreatedDateChanging(value);
                    this.SendPropertyChanging();
                    this._CreatedDate = value;
                    this.SendPropertyChanged("CreatedDate");
                    this.OnCreatedDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CreatedBy", DbType = "NVarChar(50)")]
        public string CreatedBy
        {
            get
            {
                return this._CreatedBy;
            }
            set
            {
                if ((this._CreatedBy != value))
                {
                    this.OnCreatedByChanging(value);
                    this.SendPropertyChanging();
                    this._CreatedBy = value;
                    this.SendPropertyChanged("CreatedBy");
                    this.OnCreatedByChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ApplicationNumber", AutoSync = AutoSync.Always, DbType = "Int NOT NULL IDENTITY", IsDbGenerated = true)]
        public int ApplicationNumber
        {
            get
            {
                return this._ApplicationNumber;
            }
            set
            {
                if ((this._ApplicationNumber != value))
                {
                    this.OnApplicationNumberChanging(value);
                    this.SendPropertyChanging();
                    this._ApplicationNumber = value;
                    this.SendPropertyChanged("ApplicationNumber");
                    this.OnApplicationNumberChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_OrderNumber", DbType = "NVarChar(50)")]
        public string OrderNumber
        {
            get
            {
                return this._OrderNumber;
            }
            set
            {
                if ((this._OrderNumber != value))
                {
                    this.OnOrderNumberChanging(value);
                    this.SendPropertyChanging();
                    this._OrderNumber = value;
                    this.SendPropertyChanged("OrderNumber");
                    this.OnOrderNumberChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AmountTobePaid", DbType = "NVarChar(50)")]
        public string AmountTobePaid
        {
            get
            {
                return this._AmountTobePaid;
            }
            set
            {
                if ((this._AmountTobePaid != value))
                {
                    this.OnAmountTobePaidChanging(value);
                    this.SendPropertyChanging();
                    this._AmountTobePaid = value;
                    this.SendPropertyChanged("AmountTobePaid");
                    this.OnAmountTobePaidChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ApplicationStatus", DbType = "NVarChar(50)")]
        public string ApplicationStatus
        {
            get
            {
                return this._ApplicationStatus;
            }
            set
            {
                if ((this._ApplicationStatus != value))
                {
                    this.OnApplicationStatusChanging(value);
                    this.SendPropertyChanging();
                    this._ApplicationStatus = value;
                    this.SendPropertyChanged("ApplicationStatus");
                    this.OnApplicationStatusChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsPaymentDone", DbType = "Bit")]
        public System.Nullable<bool> IsPaymentDone
        {
            get
            {
                return this._IsPaymentDone;
            }
            set
            {
                if ((this._IsPaymentDone != value))
                {
                    this.OnIsPaymentDoneChanging(value);
                    this.SendPropertyChanging();
                    this._IsPaymentDone = value;
                    this.SendPropertyChanged("IsPaymentDone");
                    this.OnIsPaymentDoneChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PaymentDate", DbType = "DateTime")]
        public System.Nullable<System.DateTime> PaymentDate
        {
            get
            {
                return this._PaymentDate;
            }
            set
            {
                if ((this._PaymentDate != value))
                {
                    this.OnPaymentDateChanging(value);
                    this.SendPropertyChanging();
                    this._PaymentDate = value;
                    this.SendPropertyChanged("PaymentDate");
                    this.OnPaymentDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TransactionId", DbType = "NVarChar(50)")]
        public string TransactionId
        {
            get
            {
                return this._TransactionId;
            }
            set
            {
                if ((this._TransactionId != value))
                {
                    this.OnTransactionIdChanging(value);
                    this.SendPropertyChanging();
                    this._TransactionId = value;
                    this.SendPropertyChanged("TransactionId");
                    this.OnTransactionIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsRooftopPlusGroundCapacity", DbType = "Bit")]
        public System.Nullable<bool> IsRooftopPlusGroundCapacity
        {
            get
            {
                return this._IsRooftopPlusGroundCapacity;
            }
            set
            {
                if ((this._IsRooftopPlusGroundCapacity != value))
                {
                    this.OnIsRooftopPlusGroundCapacityChanging(value);
                    this.SendPropertyChanging();
                    this._IsRooftopPlusGroundCapacity = value;
                    this.SendPropertyChanged("IsRooftopPlusGroundCapacity");
                    this.OnIsRooftopPlusGroundCapacityChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ApplicationCategory", DbType = "NVarChar(50)")]
        public string ApplicationCategory
        {
            get
            {
                return this._ApplicationCategory;
            }
            set
            {
                if ((this._ApplicationCategory != value))
                {
                    this.OnApplicationCategoryChanging(value);
                    this.SendPropertyChanging();
                    this._ApplicationCategory = value;
                    this.SendPropertyChanged("ApplicationCategory");
                    this.OnApplicationCategoryChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AadharNumber", DbType = "NVarChar(50)")]
        public string AadharNumber
        {
            get
            {
                return this._AadharNumber;
            }
            set
            {
                if ((this._AadharNumber != value))
                {
                    this.OnAadharNumberChanging(value);
                    this.SendPropertyChanging();
                    this._AadharNumber = value;
                    this.SendPropertyChanged("AadharNumber");
                    this.OnAadharNumberChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsSubsidizedCategory", DbType = "Bit")]
        public System.Nullable<bool> IsSubsidizedCategory
        {
            get
            {
                return this._IsSubsidizedCategory;
            }
            set
            {
                if ((this._IsSubsidizedCategory != value))
                {
                    this.OnIsSubsidizedCategoryChanging(value);
                    this.SendPropertyChanging();
                    this._IsSubsidizedCategory = value;
                    this.SendPropertyChanged("IsSubsidizedCategory");
                    this.OnIsSubsidizedCategoryChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TempRegistrationNumber", AutoSync = AutoSync.Always, DbType = "NVarChar(52)", IsDbGenerated = true, UpdateCheck = UpdateCheck.Never)]
        public string TempRegistrationNumber
        {
            get
            {
                return this._TempRegistrationNumber;
            }
            set
            {
                if ((this._TempRegistrationNumber != value))
                {
                    this.OnTempRegistrationNumberChanging(value);
                    this.SendPropertyChanging();
                    this._TempRegistrationNumber = value;
                    this.SendPropertyChanged("TempRegistrationNumber");
                    this.OnTempRegistrationNumberChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Workcenter", DbType = "NVarChar(50)")]
        public string Workcenter
        {
            get
            {
                return this._Workcenter;
            }
            set
            {
                if ((this._Workcenter != value))
                {
                    this.OnWorkcenterChanging(value);
                    this.SendPropertyChanging();
                    this._Workcenter = value;
                    this.SendPropertyChanged("Workcenter");
                    this.OnWorkcenterChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_UserId", DbType = "NVarChar(50)")]
        public string UserId
        {
            get
            {
                return this._UserId;
            }
            set
            {
                if ((this._UserId != value))
                {
                    this.OnUserIdChanging(value);
                    this.SendPropertyChanging();
                    this._UserId = value;
                    this.SendPropertyChanged("UserId");
                    this.OnUserIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_OrderId", DbType = "NVarChar(50)")]
        public string OrderId
        {
            get
            {
                return this._OrderId;
            }
            set
            {
                if ((this._OrderId != value))
                {
                    this.OnOrderIdChanging(value);
                    this.SendPropertyChanging();
                    this._OrderId = value;
                    this.SendPropertyChanged("OrderId");
                    this.OnOrderIdChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.CONApplicationDetails")]
    public partial class CONApplicationDetail : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private System.Guid _Id;

        private string _AccountNumber;

        private string _MeterNumber;

        private string _ApplicationTypeName;

        private string _ApplicationTypeId;

        private string _PremiseTypeName;

        private string _PremiseTypeCode;

        private string _ApplicantType;

        private string _ApplicantTypeCode;

        private System.Nullable<bool> _IsContinueExitingSDvalueOpt;

        private string _ExistingSecurityDepositAmount;

        private string _SecurityDepositAmount;

        private string _TitleName;

        private string _TitleValue;

        private string _OrgName;

        private string _FirstName;

        private string _MiddleName;

        private string _LastName;

        private string _MobileNumber;

        private string _LandlineNumber;

        private string _EmailAddress;

        private string _WorkCenterName;

        private System.Nullable<bool> _IsDiffrentBillingAddressValueOpt;

        private System.Nullable<bool> _PaperlessBillingFlag;

        private System.Nullable<bool> _EbillPhysicalFlag;

        private string _HouseNumber;

        private string _BuildingName;

        private string _StreetName;

        private string _Landmark;

        private string _Area;

        private string _City;

        private string _Pincode;

        private string _Suburb;

        private string _ConsumerContractVertrag;

        private string _ConsumerRemarks;

        private string _BillingLanguage;

        private System.Nullable<System.DateTime> _CreatedDate;

        private string _CreatedBy;

        private System.Nullable<System.DateTime> _ModifiedDate;

        private string _ModifiedBy;

        private System.Nullable<int> _NumberOfVersion;

        private string _RegistrationSerialNumber;

        private string _TempRegistrationSerialNumber;

        private string _ApplicationStatusName;

        private string _ApplicationStatusCode;

        private string _ZALTYP;

        private string _ZAPPLBY;

        private string _NewAccountNumber;

        private System.Nullable<System.DateTime> _ApplicationStatusUpdateDate;

        private string _ApplicationstatusUpdatedBy;

        private string _ApplicationStatusUpdateEmpRemarks;

        private string _ApplicationRejectionReason;

        private string _AKLASSE;

        private string _Housenumber_New;

        private string _Streetname_New;

        private string _Landmark_New;

        private string _Buildingname_New;

        private string _Suburb_New;

        private string _Pincode_New;

        private string _City_New;

        private string _Area_New;

        private System.Nullable<bool> _IsRentedProperty;

        private string _Rented_Ownername;

        private string _Rented_Owner_Mobile;

        private string _Rented_Owner_Landline;

        private string _Rented_Owner_Email;

        private string _BillingHouseNumber;

        private string _BillingBuildingName;

        private string _BillingStreet;

        private string _BillingLandmark;

        private string _BillingSuburb;

        private string _BillingCity;

        private string _BillingPincode;

        private System.Nullable<bool> _IsAddressChangeRequired;

        private string _SAPReturnMsg;

        private string _LECRegistrationNumber;

        private string _LECMobileNumber;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(System.Guid value);
        partial void OnIdChanged();
        partial void OnAccountNumberChanging(string value);
        partial void OnAccountNumberChanged();
        partial void OnMeterNumberChanging(string value);
        partial void OnMeterNumberChanged();
        partial void OnApplicationTypeNameChanging(string value);
        partial void OnApplicationTypeNameChanged();
        partial void OnApplicationTypeIdChanging(string value);
        partial void OnApplicationTypeIdChanged();
        partial void OnPremiseTypeNameChanging(string value);
        partial void OnPremiseTypeNameChanged();
        partial void OnPremiseTypeCodeChanging(string value);
        partial void OnPremiseTypeCodeChanged();
        partial void OnApplicantTypeChanging(string value);
        partial void OnApplicantTypeChanged();
        partial void OnApplicantTypeCodeChanging(string value);
        partial void OnApplicantTypeCodeChanged();
        partial void OnIsContinueExitingSDvalueOptChanging(System.Nullable<bool> value);
        partial void OnIsContinueExitingSDvalueOptChanged();
        partial void OnExistingSecurityDepositAmountChanging(string value);
        partial void OnExistingSecurityDepositAmountChanged();
        partial void OnSecurityDepositAmountChanging(string value);
        partial void OnSecurityDepositAmountChanged();
        partial void OnTitleNameChanging(string value);
        partial void OnTitleNameChanged();
        partial void OnTitleValueChanging(string value);
        partial void OnTitleValueChanged();
        partial void OnOrgNameChanging(string value);
        partial void OnOrgNameChanged();
        partial void OnFirstNameChanging(string value);
        partial void OnFirstNameChanged();
        partial void OnMiddleNameChanging(string value);
        partial void OnMiddleNameChanged();
        partial void OnLastNameChanging(string value);
        partial void OnLastNameChanged();
        partial void OnMobileNumberChanging(string value);
        partial void OnMobileNumberChanged();
        partial void OnLandlineNumberChanging(string value);
        partial void OnLandlineNumberChanged();
        partial void OnEmailAddressChanging(string value);
        partial void OnEmailAddressChanged();
        partial void OnWorkCenterNameChanging(string value);
        partial void OnWorkCenterNameChanged();
        partial void OnIsDiffrentBillingAddressValueOptChanging(System.Nullable<bool> value);
        partial void OnIsDiffrentBillingAddressValueOptChanged();
        partial void OnPaperlessBillingFlagChanging(System.Nullable<bool> value);
        partial void OnPaperlessBillingFlagChanged();
        partial void OnEbillPhysicalFlagChanging(System.Nullable<bool> value);
        partial void OnEbillPhysicalFlagChanged();
        partial void OnHouseNumberChanging(string value);
        partial void OnHouseNumberChanged();
        partial void OnBuildingNameChanging(string value);
        partial void OnBuildingNameChanged();
        partial void OnStreetNameChanging(string value);
        partial void OnStreetNameChanged();
        partial void OnLandmarkChanging(string value);
        partial void OnLandmarkChanged();
        partial void OnAreaChanging(string value);
        partial void OnAreaChanged();
        partial void OnCityChanging(string value);
        partial void OnCityChanged();
        partial void OnPincodeChanging(string value);
        partial void OnPincodeChanged();
        partial void OnSuburbChanging(string value);
        partial void OnSuburbChanged();
        partial void OnConsumerContractVertragChanging(string value);
        partial void OnConsumerContractVertragChanged();
        partial void OnConsumerRemarksChanging(string value);
        partial void OnConsumerRemarksChanged();
        partial void OnBillingLanguageChanging(string value);
        partial void OnBillingLanguageChanged();
        partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
        partial void OnCreatedDateChanged();
        partial void OnCreatedByChanging(string value);
        partial void OnCreatedByChanged();
        partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
        partial void OnModifiedDateChanged();
        partial void OnModifiedByChanging(string value);
        partial void OnModifiedByChanged();
        partial void OnNumberOfVersionChanging(System.Nullable<int> value);
        partial void OnNumberOfVersionChanged();
        partial void OnRegistrationSerialNumberChanging(string value);
        partial void OnRegistrationSerialNumberChanged();
        partial void OnTempRegistrationSerialNumberChanging(string value);
        partial void OnTempRegistrationSerialNumberChanged();
        partial void OnApplicationStatusNameChanging(string value);
        partial void OnApplicationStatusNameChanged();
        partial void OnApplicationStatusCodeChanging(string value);
        partial void OnApplicationStatusCodeChanged();
        partial void OnZALTYPChanging(string value);
        partial void OnZALTYPChanged();
        partial void OnZAPPLBYChanging(string value);
        partial void OnZAPPLBYChanged();
        partial void OnNewAccountNumberChanging(string value);
        partial void OnNewAccountNumberChanged();
        partial void OnApplicationStatusUpdateDateChanging(System.Nullable<System.DateTime> value);
        partial void OnApplicationStatusUpdateDateChanged();
        partial void OnApplicationstatusUpdatedByChanging(string value);
        partial void OnApplicationstatusUpdatedByChanged();
        partial void OnApplicationStatusUpdateEmpRemarksChanging(string value);
        partial void OnApplicationStatusUpdateEmpRemarksChanged();
        partial void OnApplicationRejectionReasonChanging(string value);
        partial void OnApplicationRejectionReasonChanged();
        partial void OnAKLASSEChanging(string value);
        partial void OnAKLASSEChanged();
        partial void OnHousenumber_NewChanging(string value);
        partial void OnHousenumber_NewChanged();
        partial void OnStreetname_NewChanging(string value);
        partial void OnStreetname_NewChanged();
        partial void OnLandmark_NewChanging(string value);
        partial void OnLandmark_NewChanged();
        partial void OnBuildingname_NewChanging(string value);
        partial void OnBuildingname_NewChanged();
        partial void OnSuburb_NewChanging(string value);
        partial void OnSuburb_NewChanged();
        partial void OnPincode_NewChanging(string value);
        partial void OnPincode_NewChanged();
        partial void OnCity_NewChanging(string value);
        partial void OnCity_NewChanged();
        partial void OnArea_NewChanging(string value);
        partial void OnArea_NewChanged();
        partial void OnIsRentedPropertyChanging(System.Nullable<bool> value);
        partial void OnIsRentedPropertyChanged();
        partial void OnRented_OwnernameChanging(string value);
        partial void OnRented_OwnernameChanged();
        partial void OnRented_Owner_MobileChanging(string value);
        partial void OnRented_Owner_MobileChanged();
        partial void OnRented_Owner_LandlineChanging(string value);
        partial void OnRented_Owner_LandlineChanged();
        partial void OnRented_Owner_EmailChanging(string value);
        partial void OnRented_Owner_EmailChanged();
        partial void OnBillingHouseNumberChanging(string value);
        partial void OnBillingHouseNumberChanged();
        partial void OnBillingBuildingNameChanging(string value);
        partial void OnBillingBuildingNameChanged();
        partial void OnBillingStreetChanging(string value);
        partial void OnBillingStreetChanged();
        partial void OnBillingLandmarkChanging(string value);
        partial void OnBillingLandmarkChanged();
        partial void OnBillingSuburbChanging(string value);
        partial void OnBillingSuburbChanged();
        partial void OnBillingCityChanging(string value);
        partial void OnBillingCityChanged();
        partial void OnBillingPincodeChanging(string value);
        partial void OnBillingPincodeChanged();
        partial void OnIsAddressChangeRequiredChanging(System.Nullable<bool> value);
        partial void OnIsAddressChangeRequiredChanged();
        partial void OnSAPReturnMsgChanging(string value);
        partial void OnSAPReturnMsgChanged();
        partial void OnLECRegistrationNumberChanging(string value);
        partial void OnLECRegistrationNumberChanged();
        partial void OnLECMobileNumberChanging(string value);
        partial void OnLECMobileNumberChanged();
        #endregion

        public CONApplicationDetail()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Id", DbType = "UniqueIdentifier NOT NULL", IsPrimaryKey = true)]
        public System.Guid Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if ((this._Id != value))
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging();
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AccountNumber", DbType = "NVarChar(50) NOT NULL", CanBeNull = false)]
        public string AccountNumber
        {
            get
            {
                return this._AccountNumber;
            }
            set
            {
                if ((this._AccountNumber != value))
                {
                    this.OnAccountNumberChanging(value);
                    this.SendPropertyChanging();
                    this._AccountNumber = value;
                    this.SendPropertyChanged("AccountNumber");
                    this.OnAccountNumberChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MeterNumber", DbType = "NVarChar(50) NOT NULL", CanBeNull = false)]
        public string MeterNumber
        {
            get
            {
                return this._MeterNumber;
            }
            set
            {
                if ((this._MeterNumber != value))
                {
                    this.OnMeterNumberChanging(value);
                    this.SendPropertyChanging();
                    this._MeterNumber = value;
                    this.SendPropertyChanged("MeterNumber");
                    this.OnMeterNumberChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ApplicationTypeName", DbType = "NVarChar(50) NOT NULL", CanBeNull = false)]
        public string ApplicationTypeName
        {
            get
            {
                return this._ApplicationTypeName;
            }
            set
            {
                if ((this._ApplicationTypeName != value))
                {
                    this.OnApplicationTypeNameChanging(value);
                    this.SendPropertyChanging();
                    this._ApplicationTypeName = value;
                    this.SendPropertyChanged("ApplicationTypeName");
                    this.OnApplicationTypeNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ApplicationTypeId", DbType = "NVarChar(10) NOT NULL", CanBeNull = false)]
        public string ApplicationTypeId
        {
            get
            {
                return this._ApplicationTypeId;
            }
            set
            {
                if ((this._ApplicationTypeId != value))
                {
                    this.OnApplicationTypeIdChanging(value);
                    this.SendPropertyChanging();
                    this._ApplicationTypeId = value;
                    this.SendPropertyChanged("ApplicationTypeId");
                    this.OnApplicationTypeIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PremiseTypeName", DbType = "NVarChar(50) NOT NULL", CanBeNull = false)]
        public string PremiseTypeName
        {
            get
            {
                return this._PremiseTypeName;
            }
            set
            {
                if ((this._PremiseTypeName != value))
                {
                    this.OnPremiseTypeNameChanging(value);
                    this.SendPropertyChanging();
                    this._PremiseTypeName = value;
                    this.SendPropertyChanged("PremiseTypeName");
                    this.OnPremiseTypeNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PremiseTypeCode", DbType = "NVarChar(10) NOT NULL", CanBeNull = false)]
        public string PremiseTypeCode
        {
            get
            {
                return this._PremiseTypeCode;
            }
            set
            {
                if ((this._PremiseTypeCode != value))
                {
                    this.OnPremiseTypeCodeChanging(value);
                    this.SendPropertyChanging();
                    this._PremiseTypeCode = value;
                    this.SendPropertyChanged("PremiseTypeCode");
                    this.OnPremiseTypeCodeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ApplicantType", DbType = "NVarChar(50) NOT NULL", CanBeNull = false)]
        public string ApplicantType
        {
            get
            {
                return this._ApplicantType;
            }
            set
            {
                if ((this._ApplicantType != value))
                {
                    this.OnApplicantTypeChanging(value);
                    this.SendPropertyChanging();
                    this._ApplicantType = value;
                    this.SendPropertyChanged("ApplicantType");
                    this.OnApplicantTypeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ApplicantTypeCode", DbType = "NVarChar(10) NOT NULL", CanBeNull = false)]
        public string ApplicantTypeCode
        {
            get
            {
                return this._ApplicantTypeCode;
            }
            set
            {
                if ((this._ApplicantTypeCode != value))
                {
                    this.OnApplicantTypeCodeChanging(value);
                    this.SendPropertyChanging();
                    this._ApplicantTypeCode = value;
                    this.SendPropertyChanged("ApplicantTypeCode");
                    this.OnApplicantTypeCodeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsContinueExitingSDvalueOpt", DbType = "Bit")]
        public System.Nullable<bool> IsContinueExitingSDvalueOpt
        {
            get
            {
                return this._IsContinueExitingSDvalueOpt;
            }
            set
            {
                if ((this._IsContinueExitingSDvalueOpt != value))
                {
                    this.OnIsContinueExitingSDvalueOptChanging(value);
                    this.SendPropertyChanging();
                    this._IsContinueExitingSDvalueOpt = value;
                    this.SendPropertyChanged("IsContinueExitingSDvalueOpt");
                    this.OnIsContinueExitingSDvalueOptChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ExistingSecurityDepositAmount", DbType = "NVarChar(50)")]
        public string ExistingSecurityDepositAmount
        {
            get
            {
                return this._ExistingSecurityDepositAmount;
            }
            set
            {
                if ((this._ExistingSecurityDepositAmount != value))
                {
                    this.OnExistingSecurityDepositAmountChanging(value);
                    this.SendPropertyChanging();
                    this._ExistingSecurityDepositAmount = value;
                    this.SendPropertyChanged("ExistingSecurityDepositAmount");
                    this.OnExistingSecurityDepositAmountChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SecurityDepositAmount", DbType = "NVarChar(50)")]
        public string SecurityDepositAmount
        {
            get
            {
                return this._SecurityDepositAmount;
            }
            set
            {
                if ((this._SecurityDepositAmount != value))
                {
                    this.OnSecurityDepositAmountChanging(value);
                    this.SendPropertyChanging();
                    this._SecurityDepositAmount = value;
                    this.SendPropertyChanged("SecurityDepositAmount");
                    this.OnSecurityDepositAmountChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TitleName", DbType = "NVarChar(50)")]
        public string TitleName
        {
            get
            {
                return this._TitleName;
            }
            set
            {
                if ((this._TitleName != value))
                {
                    this.OnTitleNameChanging(value);
                    this.SendPropertyChanging();
                    this._TitleName = value;
                    this.SendPropertyChanged("TitleName");
                    this.OnTitleNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TitleValue", DbType = "NVarChar(50)")]
        public string TitleValue
        {
            get
            {
                return this._TitleValue;
            }
            set
            {
                if ((this._TitleValue != value))
                {
                    this.OnTitleValueChanging(value);
                    this.SendPropertyChanging();
                    this._TitleValue = value;
                    this.SendPropertyChanged("TitleValue");
                    this.OnTitleValueChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_OrgName", DbType = "NVarChar(200)")]
        public string OrgName
        {
            get
            {
                return this._OrgName;
            }
            set
            {
                if ((this._OrgName != value))
                {
                    this.OnOrgNameChanging(value);
                    this.SendPropertyChanging();
                    this._OrgName = value;
                    this.SendPropertyChanged("OrgName");
                    this.OnOrgNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_FirstName", DbType = "NVarChar(50)")]
        public string FirstName
        {
            get
            {
                return this._FirstName;
            }
            set
            {
                if ((this._FirstName != value))
                {
                    this.OnFirstNameChanging(value);
                    this.SendPropertyChanging();
                    this._FirstName = value;
                    this.SendPropertyChanged("FirstName");
                    this.OnFirstNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MiddleName", DbType = "NVarChar(50)")]
        public string MiddleName
        {
            get
            {
                return this._MiddleName;
            }
            set
            {
                if ((this._MiddleName != value))
                {
                    this.OnMiddleNameChanging(value);
                    this.SendPropertyChanging();
                    this._MiddleName = value;
                    this.SendPropertyChanged("MiddleName");
                    this.OnMiddleNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LastName", DbType = "NVarChar(50)")]
        public string LastName
        {
            get
            {
                return this._LastName;
            }
            set
            {
                if ((this._LastName != value))
                {
                    this.OnLastNameChanging(value);
                    this.SendPropertyChanging();
                    this._LastName = value;
                    this.SendPropertyChanged("LastName");
                    this.OnLastNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MobileNumber", DbType = "NVarChar(50)")]
        public string MobileNumber
        {
            get
            {
                return this._MobileNumber;
            }
            set
            {
                if ((this._MobileNumber != value))
                {
                    this.OnMobileNumberChanging(value);
                    this.SendPropertyChanging();
                    this._MobileNumber = value;
                    this.SendPropertyChanged("MobileNumber");
                    this.OnMobileNumberChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LandlineNumber", DbType = "NVarChar(50)")]
        public string LandlineNumber
        {
            get
            {
                return this._LandlineNumber;
            }
            set
            {
                if ((this._LandlineNumber != value))
                {
                    this.OnLandlineNumberChanging(value);
                    this.SendPropertyChanging();
                    this._LandlineNumber = value;
                    this.SendPropertyChanged("LandlineNumber");
                    this.OnLandlineNumberChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EmailAddress", DbType = "NVarChar(50)")]
        public string EmailAddress
        {
            get
            {
                return this._EmailAddress;
            }
            set
            {
                if ((this._EmailAddress != value))
                {
                    this.OnEmailAddressChanging(value);
                    this.SendPropertyChanging();
                    this._EmailAddress = value;
                    this.SendPropertyChanged("EmailAddress");
                    this.OnEmailAddressChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_WorkCenterName", DbType = "NVarChar(200)")]
        public string WorkCenterName
        {
            get
            {
                return this._WorkCenterName;
            }
            set
            {
                if ((this._WorkCenterName != value))
                {
                    this.OnWorkCenterNameChanging(value);
                    this.SendPropertyChanging();
                    this._WorkCenterName = value;
                    this.SendPropertyChanged("WorkCenterName");
                    this.OnWorkCenterNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsDiffrentBillingAddressValueOpt", DbType = "Bit")]
        public System.Nullable<bool> IsDiffrentBillingAddressValueOpt
        {
            get
            {
                return this._IsDiffrentBillingAddressValueOpt;
            }
            set
            {
                if ((this._IsDiffrentBillingAddressValueOpt != value))
                {
                    this.OnIsDiffrentBillingAddressValueOptChanging(value);
                    this.SendPropertyChanging();
                    this._IsDiffrentBillingAddressValueOpt = value;
                    this.SendPropertyChanged("IsDiffrentBillingAddressValueOpt");
                    this.OnIsDiffrentBillingAddressValueOptChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PaperlessBillingFlag", DbType = "Bit")]
        public System.Nullable<bool> PaperlessBillingFlag
        {
            get
            {
                return this._PaperlessBillingFlag;
            }
            set
            {
                if ((this._PaperlessBillingFlag != value))
                {
                    this.OnPaperlessBillingFlagChanging(value);
                    this.SendPropertyChanging();
                    this._PaperlessBillingFlag = value;
                    this.SendPropertyChanged("PaperlessBillingFlag");
                    this.OnPaperlessBillingFlagChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EbillPhysicalFlag", DbType = "Bit")]
        public System.Nullable<bool> EbillPhysicalFlag
        {
            get
            {
                return this._EbillPhysicalFlag;
            }
            set
            {
                if ((this._EbillPhysicalFlag != value))
                {
                    this.OnEbillPhysicalFlagChanging(value);
                    this.SendPropertyChanging();
                    this._EbillPhysicalFlag = value;
                    this.SendPropertyChanged("EbillPhysicalFlag");
                    this.OnEbillPhysicalFlagChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_HouseNumber", DbType = "NVarChar(200)")]
        public string HouseNumber
        {
            get
            {
                return this._HouseNumber;
            }
            set
            {
                if ((this._HouseNumber != value))
                {
                    this.OnHouseNumberChanging(value);
                    this.SendPropertyChanging();
                    this._HouseNumber = value;
                    this.SendPropertyChanged("HouseNumber");
                    this.OnHouseNumberChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BuildingName", DbType = "NVarChar(MAX)")]
        public string BuildingName
        {
            get
            {
                return this._BuildingName;
            }
            set
            {
                if ((this._BuildingName != value))
                {
                    this.OnBuildingNameChanging(value);
                    this.SendPropertyChanging();
                    this._BuildingName = value;
                    this.SendPropertyChanged("BuildingName");
                    this.OnBuildingNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_StreetName", DbType = "NVarChar(MAX)")]
        public string StreetName
        {
            get
            {
                return this._StreetName;
            }
            set
            {
                if ((this._StreetName != value))
                {
                    this.OnStreetNameChanging(value);
                    this.SendPropertyChanging();
                    this._StreetName = value;
                    this.SendPropertyChanged("StreetName");
                    this.OnStreetNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Landmark", DbType = "NVarChar(MAX)")]
        public string Landmark
        {
            get
            {
                return this._Landmark;
            }
            set
            {
                if ((this._Landmark != value))
                {
                    this.OnLandmarkChanging(value);
                    this.SendPropertyChanging();
                    this._Landmark = value;
                    this.SendPropertyChanged("Landmark");
                    this.OnLandmarkChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Area", DbType = "NVarChar(200)")]
        public string Area
        {
            get
            {
                return this._Area;
            }
            set
            {
                if ((this._Area != value))
                {
                    this.OnAreaChanging(value);
                    this.SendPropertyChanging();
                    this._Area = value;
                    this.SendPropertyChanged("Area");
                    this.OnAreaChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_City", DbType = "NVarChar(200)")]
        public string City
        {
            get
            {
                return this._City;
            }
            set
            {
                if ((this._City != value))
                {
                    this.OnCityChanging(value);
                    this.SendPropertyChanging();
                    this._City = value;
                    this.SendPropertyChanged("City");
                    this.OnCityChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Pincode", DbType = "NVarChar(50)")]
        public string Pincode
        {
            get
            {
                return this._Pincode;
            }
            set
            {
                if ((this._Pincode != value))
                {
                    this.OnPincodeChanging(value);
                    this.SendPropertyChanging();
                    this._Pincode = value;
                    this.SendPropertyChanged("Pincode");
                    this.OnPincodeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Suburb", DbType = "NVarChar(200)")]
        public string Suburb
        {
            get
            {
                return this._Suburb;
            }
            set
            {
                if ((this._Suburb != value))
                {
                    this.OnSuburbChanging(value);
                    this.SendPropertyChanging();
                    this._Suburb = value;
                    this.SendPropertyChanged("Suburb");
                    this.OnSuburbChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ConsumerContractVertrag", DbType = "NVarChar(50)")]
        public string ConsumerContractVertrag
        {
            get
            {
                return this._ConsumerContractVertrag;
            }
            set
            {
                if ((this._ConsumerContractVertrag != value))
                {
                    this.OnConsumerContractVertragChanging(value);
                    this.SendPropertyChanging();
                    this._ConsumerContractVertrag = value;
                    this.SendPropertyChanged("ConsumerContractVertrag");
                    this.OnConsumerContractVertragChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ConsumerRemarks", DbType = "NVarChar(1000)")]
        public string ConsumerRemarks
        {
            get
            {
                return this._ConsumerRemarks;
            }
            set
            {
                if ((this._ConsumerRemarks != value))
                {
                    this.OnConsumerRemarksChanging(value);
                    this.SendPropertyChanging();
                    this._ConsumerRemarks = value;
                    this.SendPropertyChanged("ConsumerRemarks");
                    this.OnConsumerRemarksChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BillingLanguage", DbType = "NVarChar(50)")]
        public string BillingLanguage
        {
            get
            {
                return this._BillingLanguage;
            }
            set
            {
                if ((this._BillingLanguage != value))
                {
                    this.OnBillingLanguageChanging(value);
                    this.SendPropertyChanging();
                    this._BillingLanguage = value;
                    this.SendPropertyChanged("BillingLanguage");
                    this.OnBillingLanguageChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CreatedDate", DbType = "DateTime")]
        public System.Nullable<System.DateTime> CreatedDate
        {
            get
            {
                return this._CreatedDate;
            }
            set
            {
                if ((this._CreatedDate != value))
                {
                    this.OnCreatedDateChanging(value);
                    this.SendPropertyChanging();
                    this._CreatedDate = value;
                    this.SendPropertyChanged("CreatedDate");
                    this.OnCreatedDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CreatedBy", DbType = "NVarChar(50)")]
        public string CreatedBy
        {
            get
            {
                return this._CreatedBy;
            }
            set
            {
                if ((this._CreatedBy != value))
                {
                    this.OnCreatedByChanging(value);
                    this.SendPropertyChanging();
                    this._CreatedBy = value;
                    this.SendPropertyChanged("CreatedBy");
                    this.OnCreatedByChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ModifiedDate", DbType = "DateTime")]
        public System.Nullable<System.DateTime> ModifiedDate
        {
            get
            {
                return this._ModifiedDate;
            }
            set
            {
                if ((this._ModifiedDate != value))
                {
                    this.OnModifiedDateChanging(value);
                    this.SendPropertyChanging();
                    this._ModifiedDate = value;
                    this.SendPropertyChanged("ModifiedDate");
                    this.OnModifiedDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ModifiedBy", DbType = "NVarChar(50)")]
        public string ModifiedBy
        {
            get
            {
                return this._ModifiedBy;
            }
            set
            {
                if ((this._ModifiedBy != value))
                {
                    this.OnModifiedByChanging(value);
                    this.SendPropertyChanging();
                    this._ModifiedBy = value;
                    this.SendPropertyChanged("ModifiedBy");
                    this.OnModifiedByChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NumberOfVersion", DbType = "Int")]
        public System.Nullable<int> NumberOfVersion
        {
            get
            {
                return this._NumberOfVersion;
            }
            set
            {
                if ((this._NumberOfVersion != value))
                {
                    this.OnNumberOfVersionChanging(value);
                    this.SendPropertyChanging();
                    this._NumberOfVersion = value;
                    this.SendPropertyChanged("NumberOfVersion");
                    this.OnNumberOfVersionChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_RegistrationSerialNumber", DbType = "NVarChar(50)")]
        public string RegistrationSerialNumber
        {
            get
            {
                return this._RegistrationSerialNumber;
            }
            set
            {
                if ((this._RegistrationSerialNumber != value))
                {
                    this.OnRegistrationSerialNumberChanging(value);
                    this.SendPropertyChanging();
                    this._RegistrationSerialNumber = value;
                    this.SendPropertyChanged("RegistrationSerialNumber");
                    this.OnRegistrationSerialNumberChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TempRegistrationSerialNumber", DbType = "NVarChar(50)")]
        public string TempRegistrationSerialNumber
        {
            get
            {
                return this._TempRegistrationSerialNumber;
            }
            set
            {
                if ((this._TempRegistrationSerialNumber != value))
                {
                    this.OnTempRegistrationSerialNumberChanging(value);
                    this.SendPropertyChanging();
                    this._TempRegistrationSerialNumber = value;
                    this.SendPropertyChanged("TempRegistrationSerialNumber");
                    this.OnTempRegistrationSerialNumberChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ApplicationStatusName", DbType = "NVarChar(50)")]
        public string ApplicationStatusName
        {
            get
            {
                return this._ApplicationStatusName;
            }
            set
            {
                if ((this._ApplicationStatusName != value))
                {
                    this.OnApplicationStatusNameChanging(value);
                    this.SendPropertyChanging();
                    this._ApplicationStatusName = value;
                    this.SendPropertyChanged("ApplicationStatusName");
                    this.OnApplicationStatusNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ApplicationStatusCode", DbType = "NVarChar(50)")]
        public string ApplicationStatusCode
        {
            get
            {
                return this._ApplicationStatusCode;
            }
            set
            {
                if ((this._ApplicationStatusCode != value))
                {
                    this.OnApplicationStatusCodeChanging(value);
                    this.SendPropertyChanging();
                    this._ApplicationStatusCode = value;
                    this.SendPropertyChanged("ApplicationStatusCode");
                    this.OnApplicationStatusCodeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ZALTYP", DbType = "NVarChar(50)")]
        public string ZALTYP
        {
            get
            {
                return this._ZALTYP;
            }
            set
            {
                if ((this._ZALTYP != value))
                {
                    this.OnZALTYPChanging(value);
                    this.SendPropertyChanging();
                    this._ZALTYP = value;
                    this.SendPropertyChanged("ZALTYP");
                    this.OnZALTYPChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ZAPPLBY", DbType = "NVarChar(50)")]
        public string ZAPPLBY
        {
            get
            {
                return this._ZAPPLBY;
            }
            set
            {
                if ((this._ZAPPLBY != value))
                {
                    this.OnZAPPLBYChanging(value);
                    this.SendPropertyChanging();
                    this._ZAPPLBY = value;
                    this.SendPropertyChanged("ZAPPLBY");
                    this.OnZAPPLBYChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NewAccountNumber", DbType = "NVarChar(50)")]
        public string NewAccountNumber
        {
            get
            {
                return this._NewAccountNumber;
            }
            set
            {
                if ((this._NewAccountNumber != value))
                {
                    this.OnNewAccountNumberChanging(value);
                    this.SendPropertyChanging();
                    this._NewAccountNumber = value;
                    this.SendPropertyChanged("NewAccountNumber");
                    this.OnNewAccountNumberChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ApplicationStatusUpdateDate", DbType = "DateTime")]
        public System.Nullable<System.DateTime> ApplicationStatusUpdateDate
        {
            get
            {
                return this._ApplicationStatusUpdateDate;
            }
            set
            {
                if ((this._ApplicationStatusUpdateDate != value))
                {
                    this.OnApplicationStatusUpdateDateChanging(value);
                    this.SendPropertyChanging();
                    this._ApplicationStatusUpdateDate = value;
                    this.SendPropertyChanged("ApplicationStatusUpdateDate");
                    this.OnApplicationStatusUpdateDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ApplicationstatusUpdatedBy", DbType = "NVarChar(50)")]
        public string ApplicationstatusUpdatedBy
        {
            get
            {
                return this._ApplicationstatusUpdatedBy;
            }
            set
            {
                if ((this._ApplicationstatusUpdatedBy != value))
                {
                    this.OnApplicationstatusUpdatedByChanging(value);
                    this.SendPropertyChanging();
                    this._ApplicationstatusUpdatedBy = value;
                    this.SendPropertyChanged("ApplicationstatusUpdatedBy");
                    this.OnApplicationstatusUpdatedByChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ApplicationStatusUpdateEmpRemarks", DbType = "NVarChar(2000)")]
        public string ApplicationStatusUpdateEmpRemarks
        {
            get
            {
                return this._ApplicationStatusUpdateEmpRemarks;
            }
            set
            {
                if ((this._ApplicationStatusUpdateEmpRemarks != value))
                {
                    this.OnApplicationStatusUpdateEmpRemarksChanging(value);
                    this.SendPropertyChanging();
                    this._ApplicationStatusUpdateEmpRemarks = value;
                    this.SendPropertyChanged("ApplicationStatusUpdateEmpRemarks");
                    this.OnApplicationStatusUpdateEmpRemarksChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ApplicationRejectionReason", DbType = "NVarChar(200)")]
        public string ApplicationRejectionReason
        {
            get
            {
                return this._ApplicationRejectionReason;
            }
            set
            {
                if ((this._ApplicationRejectionReason != value))
                {
                    this.OnApplicationRejectionReasonChanging(value);
                    this.SendPropertyChanging();
                    this._ApplicationRejectionReason = value;
                    this.SendPropertyChanged("ApplicationRejectionReason");
                    this.OnApplicationRejectionReasonChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AKLASSE", DbType = "NVarChar(50)")]
        public string AKLASSE
        {
            get
            {
                return this._AKLASSE;
            }
            set
            {
                if ((this._AKLASSE != value))
                {
                    this.OnAKLASSEChanging(value);
                    this.SendPropertyChanging();
                    this._AKLASSE = value;
                    this.SendPropertyChanged("AKLASSE");
                    this.OnAKLASSEChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Housenumber_New", DbType = "NVarChar(200)")]
        public string Housenumber_New
        {
            get
            {
                return this._Housenumber_New;
            }
            set
            {
                if ((this._Housenumber_New != value))
                {
                    this.OnHousenumber_NewChanging(value);
                    this.SendPropertyChanging();
                    this._Housenumber_New = value;
                    this.SendPropertyChanged("Housenumber_New");
                    this.OnHousenumber_NewChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Streetname_New", DbType = "NVarChar(MAX)")]
        public string Streetname_New
        {
            get
            {
                return this._Streetname_New;
            }
            set
            {
                if ((this._Streetname_New != value))
                {
                    this.OnStreetname_NewChanging(value);
                    this.SendPropertyChanging();
                    this._Streetname_New = value;
                    this.SendPropertyChanged("Streetname_New");
                    this.OnStreetname_NewChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Landmark_New", DbType = "NVarChar(MAX)")]
        public string Landmark_New
        {
            get
            {
                return this._Landmark_New;
            }
            set
            {
                if ((this._Landmark_New != value))
                {
                    this.OnLandmark_NewChanging(value);
                    this.SendPropertyChanging();
                    this._Landmark_New = value;
                    this.SendPropertyChanged("Landmark_New");
                    this.OnLandmark_NewChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Buildingname_New", DbType = "NVarChar(MAX)")]
        public string Buildingname_New
        {
            get
            {
                return this._Buildingname_New;
            }
            set
            {
                if ((this._Buildingname_New != value))
                {
                    this.OnBuildingname_NewChanging(value);
                    this.SendPropertyChanging();
                    this._Buildingname_New = value;
                    this.SendPropertyChanged("Buildingname_New");
                    this.OnBuildingname_NewChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Suburb_New", DbType = "NVarChar(200)")]
        public string Suburb_New
        {
            get
            {
                return this._Suburb_New;
            }
            set
            {
                if ((this._Suburb_New != value))
                {
                    this.OnSuburb_NewChanging(value);
                    this.SendPropertyChanging();
                    this._Suburb_New = value;
                    this.SendPropertyChanged("Suburb_New");
                    this.OnSuburb_NewChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Pincode_New", DbType = "NVarChar(50)")]
        public string Pincode_New
        {
            get
            {
                return this._Pincode_New;
            }
            set
            {
                if ((this._Pincode_New != value))
                {
                    this.OnPincode_NewChanging(value);
                    this.SendPropertyChanging();
                    this._Pincode_New = value;
                    this.SendPropertyChanged("Pincode_New");
                    this.OnPincode_NewChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_City_New", DbType = "NVarChar(200)")]
        public string City_New
        {
            get
            {
                return this._City_New;
            }
            set
            {
                if ((this._City_New != value))
                {
                    this.OnCity_NewChanging(value);
                    this.SendPropertyChanging();
                    this._City_New = value;
                    this.SendPropertyChanged("City_New");
                    this.OnCity_NewChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Area_New", DbType = "NVarChar(200)")]
        public string Area_New
        {
            get
            {
                return this._Area_New;
            }
            set
            {
                if ((this._Area_New != value))
                {
                    this.OnArea_NewChanging(value);
                    this.SendPropertyChanging();
                    this._Area_New = value;
                    this.SendPropertyChanged("Area_New");
                    this.OnArea_NewChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsRentedProperty", DbType = "Bit")]
        public System.Nullable<bool> IsRentedProperty
        {
            get
            {
                return this._IsRentedProperty;
            }
            set
            {
                if ((this._IsRentedProperty != value))
                {
                    this.OnIsRentedPropertyChanging(value);
                    this.SendPropertyChanging();
                    this._IsRentedProperty = value;
                    this.SendPropertyChanged("IsRentedProperty");
                    this.OnIsRentedPropertyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Rented_Ownername", DbType = "NVarChar(50)")]
        public string Rented_Ownername
        {
            get
            {
                return this._Rented_Ownername;
            }
            set
            {
                if ((this._Rented_Ownername != value))
                {
                    this.OnRented_OwnernameChanging(value);
                    this.SendPropertyChanging();
                    this._Rented_Ownername = value;
                    this.SendPropertyChanged("Rented_Ownername");
                    this.OnRented_OwnernameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Rented_Owner_Mobile", DbType = "NVarChar(50)")]
        public string Rented_Owner_Mobile
        {
            get
            {
                return this._Rented_Owner_Mobile;
            }
            set
            {
                if ((this._Rented_Owner_Mobile != value))
                {
                    this.OnRented_Owner_MobileChanging(value);
                    this.SendPropertyChanging();
                    this._Rented_Owner_Mobile = value;
                    this.SendPropertyChanged("Rented_Owner_Mobile");
                    this.OnRented_Owner_MobileChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Rented_Owner_Landline", DbType = "NVarChar(50)")]
        public string Rented_Owner_Landline
        {
            get
            {
                return this._Rented_Owner_Landline;
            }
            set
            {
                if ((this._Rented_Owner_Landline != value))
                {
                    this.OnRented_Owner_LandlineChanging(value);
                    this.SendPropertyChanging();
                    this._Rented_Owner_Landline = value;
                    this.SendPropertyChanged("Rented_Owner_Landline");
                    this.OnRented_Owner_LandlineChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Rented_Owner_Email", DbType = "NVarChar(50)")]
        public string Rented_Owner_Email
        {
            get
            {
                return this._Rented_Owner_Email;
            }
            set
            {
                if ((this._Rented_Owner_Email != value))
                {
                    this.OnRented_Owner_EmailChanging(value);
                    this.SendPropertyChanging();
                    this._Rented_Owner_Email = value;
                    this.SendPropertyChanged("Rented_Owner_Email");
                    this.OnRented_Owner_EmailChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BillingHouseNumber", DbType = "NVarChar(50)")]
        public string BillingHouseNumber
        {
            get
            {
                return this._BillingHouseNumber;
            }
            set
            {
                if ((this._BillingHouseNumber != value))
                {
                    this.OnBillingHouseNumberChanging(value);
                    this.SendPropertyChanging();
                    this._BillingHouseNumber = value;
                    this.SendPropertyChanged("BillingHouseNumber");
                    this.OnBillingHouseNumberChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BillingBuildingName", DbType = "NVarChar(MAX)")]
        public string BillingBuildingName
        {
            get
            {
                return this._BillingBuildingName;
            }
            set
            {
                if ((this._BillingBuildingName != value))
                {
                    this.OnBillingBuildingNameChanging(value);
                    this.SendPropertyChanging();
                    this._BillingBuildingName = value;
                    this.SendPropertyChanged("BillingBuildingName");
                    this.OnBillingBuildingNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BillingStreet", DbType = "NVarChar(MAX)")]
        public string BillingStreet
        {
            get
            {
                return this._BillingStreet;
            }
            set
            {
                if ((this._BillingStreet != value))
                {
                    this.OnBillingStreetChanging(value);
                    this.SendPropertyChanging();
                    this._BillingStreet = value;
                    this.SendPropertyChanged("BillingStreet");
                    this.OnBillingStreetChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BillingLandmark", DbType = "NVarChar(MAX)")]
        public string BillingLandmark
        {
            get
            {
                return this._BillingLandmark;
            }
            set
            {
                if ((this._BillingLandmark != value))
                {
                    this.OnBillingLandmarkChanging(value);
                    this.SendPropertyChanging();
                    this._BillingLandmark = value;
                    this.SendPropertyChanged("BillingLandmark");
                    this.OnBillingLandmarkChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BillingSuburb", DbType = "NVarChar(50)")]
        public string BillingSuburb
        {
            get
            {
                return this._BillingSuburb;
            }
            set
            {
                if ((this._BillingSuburb != value))
                {
                    this.OnBillingSuburbChanging(value);
                    this.SendPropertyChanging();
                    this._BillingSuburb = value;
                    this.SendPropertyChanged("BillingSuburb");
                    this.OnBillingSuburbChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BillingCity", DbType = "NVarChar(50)")]
        public string BillingCity
        {
            get
            {
                return this._BillingCity;
            }
            set
            {
                if ((this._BillingCity != value))
                {
                    this.OnBillingCityChanging(value);
                    this.SendPropertyChanging();
                    this._BillingCity = value;
                    this.SendPropertyChanged("BillingCity");
                    this.OnBillingCityChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BillingPincode", DbType = "NVarChar(50)")]
        public string BillingPincode
        {
            get
            {
                return this._BillingPincode;
            }
            set
            {
                if ((this._BillingPincode != value))
                {
                    this.OnBillingPincodeChanging(value);
                    this.SendPropertyChanging();
                    this._BillingPincode = value;
                    this.SendPropertyChanged("BillingPincode");
                    this.OnBillingPincodeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsAddressChangeRequired", DbType = "Bit")]
        public System.Nullable<bool> IsAddressChangeRequired
        {
            get
            {
                return this._IsAddressChangeRequired;
            }
            set
            {
                if ((this._IsAddressChangeRequired != value))
                {
                    this.OnIsAddressChangeRequiredChanging(value);
                    this.SendPropertyChanging();
                    this._IsAddressChangeRequired = value;
                    this.SendPropertyChanged("IsAddressChangeRequired");
                    this.OnIsAddressChangeRequiredChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SAPReturnMsg", DbType = "NVarChar(MAX)")]
        public string SAPReturnMsg
        {
            get
            {
                return this._SAPReturnMsg;
            }
            set
            {
                if ((this._SAPReturnMsg != value))
                {
                    this.OnSAPReturnMsgChanging(value);
                    this.SendPropertyChanging();
                    this._SAPReturnMsg = value;
                    this.SendPropertyChanged("SAPReturnMsg");
                    this.OnSAPReturnMsgChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LECRegistrationNumber", DbType = "NVarChar(50)")]
        public string LECRegistrationNumber
        {
            get
            {
                return this._LECRegistrationNumber;
            }
            set
            {
                if ((this._LECRegistrationNumber != value))
                {
                    this.OnLECRegistrationNumberChanging(value);
                    this.SendPropertyChanging();
                    this._LECRegistrationNumber = value;
                    this.SendPropertyChanged("LECRegistrationNumber");
                    this.OnLECRegistrationNumberChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LECMobileNumber", DbType = "NVarChar(50)")]
        public string LECMobileNumber
        {
            get
            {
                return this._LECMobileNumber;
            }
            set
            {
                if ((this._LECMobileNumber != value))
                {
                    this.OnLECMobileNumberChanging(value);
                    this.SendPropertyChanging();
                    this._LECMobileNumber = value;
                    this.SendPropertyChanged("LECMobileNumber");
                    this.OnLECMobileNumberChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.CONLECRegistrationDetails")]
    public partial class CONLECRegistrationDetail : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private long _ID;

        private string _LECRegistrationNumber;

        private string _LECName;

        private string _LECMobileNumber;

        private string _LECEmailId;

        private string _LECUserName;

        private string _LECPassword;

        private System.Nullable<bool> _LECIsActive;

        private System.DateTime _LECCreatedDate;

        private System.Nullable<System.DateTime> _LECInActivateDate;

        private System.Nullable<System.DateTime> _LECLastPasswordChangeDate;

        private EntitySet<CONLECUpdateLog> _CONLECUpdateLogs;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIDChanging(long value);
        partial void OnIDChanged();
        partial void OnLECRegistrationNumberChanging(string value);
        partial void OnLECRegistrationNumberChanged();
        partial void OnLECNameChanging(string value);
        partial void OnLECNameChanged();
        partial void OnLECMobileNumberChanging(string value);
        partial void OnLECMobileNumberChanged();
        partial void OnLECEmailIdChanging(string value);
        partial void OnLECEmailIdChanged();
        partial void OnLECUserNameChanging(string value);
        partial void OnLECUserNameChanged();
        partial void OnLECPasswordChanging(string value);
        partial void OnLECPasswordChanged();
        partial void OnLECIsActiveChanging(System.Nullable<bool> value);
        partial void OnLECIsActiveChanged();
        partial void OnLECCreatedDateChanging(System.DateTime value);
        partial void OnLECCreatedDateChanged();
        partial void OnLECInActivateDateChanging(System.Nullable<System.DateTime> value);
        partial void OnLECInActivateDateChanged();
        partial void OnLECLastPasswordChangeDateChanging(System.Nullable<System.DateTime> value);
        partial void OnLECLastPasswordChangeDateChanged();
        #endregion

        public CONLECRegistrationDetail()
        {
            this._CONLECUpdateLogs = new EntitySet<CONLECUpdateLog>(new Action<CONLECUpdateLog>(this.attach_CONLECUpdateLogs), new Action<CONLECUpdateLog>(this.detach_CONLECUpdateLogs));
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", AutoSync = AutoSync.OnInsert, DbType = "BigInt NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public long ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ((this._ID != value))
                {
                    this.OnIDChanging(value);
                    this.SendPropertyChanging();
                    this._ID = value;
                    this.SendPropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LECRegistrationNumber", DbType = "NVarChar(50) NOT NULL", CanBeNull = false)]
        public string LECRegistrationNumber
        {
            get
            {
                return this._LECRegistrationNumber;
            }
            set
            {
                if ((this._LECRegistrationNumber != value))
                {
                    this.OnLECRegistrationNumberChanging(value);
                    this.SendPropertyChanging();
                    this._LECRegistrationNumber = value;
                    this.SendPropertyChanged("LECRegistrationNumber");
                    this.OnLECRegistrationNumberChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LECName", DbType = "NVarChar(50) NOT NULL", CanBeNull = false)]
        public string LECName
        {
            get
            {
                return this._LECName;
            }
            set
            {
                if ((this._LECName != value))
                {
                    this.OnLECNameChanging(value);
                    this.SendPropertyChanging();
                    this._LECName = value;
                    this.SendPropertyChanged("LECName");
                    this.OnLECNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LECMobileNumber", DbType = "NVarChar(50) NOT NULL", CanBeNull = false)]
        public string LECMobileNumber
        {
            get
            {
                return this._LECMobileNumber;
            }
            set
            {
                if ((this._LECMobileNumber != value))
                {
                    this.OnLECMobileNumberChanging(value);
                    this.SendPropertyChanging();
                    this._LECMobileNumber = value;
                    this.SendPropertyChanged("LECMobileNumber");
                    this.OnLECMobileNumberChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LECEmailId", DbType = "NVarChar(50) NOT NULL", CanBeNull = false)]
        public string LECEmailId
        {
            get
            {
                return this._LECEmailId;
            }
            set
            {
                if ((this._LECEmailId != value))
                {
                    this.OnLECEmailIdChanging(value);
                    this.SendPropertyChanging();
                    this._LECEmailId = value;
                    this.SendPropertyChanged("LECEmailId");
                    this.OnLECEmailIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LECUserName", DbType = "NVarChar(50) NOT NULL", CanBeNull = false)]
        public string LECUserName
        {
            get
            {
                return this._LECUserName;
            }
            set
            {
                if ((this._LECUserName != value))
                {
                    this.OnLECUserNameChanging(value);
                    this.SendPropertyChanging();
                    this._LECUserName = value;
                    this.SendPropertyChanged("LECUserName");
                    this.OnLECUserNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LECPassword", DbType = "NVarChar(50) NOT NULL", CanBeNull = false)]
        public string LECPassword
        {
            get
            {
                return this._LECPassword;
            }
            set
            {
                if ((this._LECPassword != value))
                {
                    this.OnLECPasswordChanging(value);
                    this.SendPropertyChanging();
                    this._LECPassword = value;
                    this.SendPropertyChanged("LECPassword");
                    this.OnLECPasswordChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LECIsActive", DbType = "Bit")]
        public System.Nullable<bool> LECIsActive
        {
            get
            {
                return this._LECIsActive;
            }
            set
            {
                if ((this._LECIsActive != value))
                {
                    this.OnLECIsActiveChanging(value);
                    this.SendPropertyChanging();
                    this._LECIsActive = value;
                    this.SendPropertyChanged("LECIsActive");
                    this.OnLECIsActiveChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LECCreatedDate", DbType = "DateTime NOT NULL")]
        public System.DateTime LECCreatedDate
        {
            get
            {
                return this._LECCreatedDate;
            }
            set
            {
                if ((this._LECCreatedDate != value))
                {
                    this.OnLECCreatedDateChanging(value);
                    this.SendPropertyChanging();
                    this._LECCreatedDate = value;
                    this.SendPropertyChanged("LECCreatedDate");
                    this.OnLECCreatedDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LECInActivateDate", DbType = "DateTime")]
        public System.Nullable<System.DateTime> LECInActivateDate
        {
            get
            {
                return this._LECInActivateDate;
            }
            set
            {
                if ((this._LECInActivateDate != value))
                {
                    this.OnLECInActivateDateChanging(value);
                    this.SendPropertyChanging();
                    this._LECInActivateDate = value;
                    this.SendPropertyChanged("LECInActivateDate");
                    this.OnLECInActivateDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LECLastPasswordChangeDate", DbType = "DateTime")]
        public System.Nullable<System.DateTime> LECLastPasswordChangeDate
        {
            get
            {
                return this._LECLastPasswordChangeDate;
            }
            set
            {
                if ((this._LECLastPasswordChangeDate != value))
                {
                    this.OnLECLastPasswordChangeDateChanging(value);
                    this.SendPropertyChanging();
                    this._LECLastPasswordChangeDate = value;
                    this.SendPropertyChanged("LECLastPasswordChangeDate");
                    this.OnLECLastPasswordChangeDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "CONLECRegistrationDetail_CONLECUpdateLog", Storage = "_CONLECUpdateLogs", ThisKey = "ID", OtherKey = "LECID")]
        public EntitySet<CONLECUpdateLog> CONLECUpdateLogs
        {
            get
            {
                return this._CONLECUpdateLogs;
            }
            set
            {
                this._CONLECUpdateLogs.Assign(value);
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private void attach_CONLECUpdateLogs(CONLECUpdateLog entity)
        {
            this.SendPropertyChanging();
            entity.CONLECRegistrationDetail = this;
        }

        private void detach_CONLECUpdateLogs(CONLECUpdateLog entity)
        {
            this.SendPropertyChanging();
            entity.CONLECRegistrationDetail = null;
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.CONLECUpdateLog")]
    public partial class CONLECUpdateLog : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private long _ID;

        private long _LECID;

        private string _LECRegistrationNumber;

        private string _LECMobileNumber;

        private string _LECEmailID;

        private System.Nullable<bool> _IsProfileUpdated;

        private string _OldMobileNumber;

        private string _OldEmailId;

        private System.Nullable<bool> _IsPasswordUpdated;

        private string _OldPassword;

        private System.Nullable<bool> _IsDeActivated;

        private System.Nullable<System.DateTime> _DateModified;

        private string _Comments;

        private EntityRef<CONLECRegistrationDetail> _CONLECRegistrationDetail;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIDChanging(long value);
        partial void OnIDChanged();
        partial void OnLECIDChanging(long value);
        partial void OnLECIDChanged();
        partial void OnLECRegistrationNumberChanging(string value);
        partial void OnLECRegistrationNumberChanged();
        partial void OnLECMobileNumberChanging(string value);
        partial void OnLECMobileNumberChanged();
        partial void OnLECEmailIDChanging(string value);
        partial void OnLECEmailIDChanged();
        partial void OnIsProfileUpdatedChanging(System.Nullable<bool> value);
        partial void OnIsProfileUpdatedChanged();
        partial void OnOldMobileNumberChanging(string value);
        partial void OnOldMobileNumberChanged();
        partial void OnOldEmailIdChanging(string value);
        partial void OnOldEmailIdChanged();
        partial void OnIsPasswordUpdatedChanging(System.Nullable<bool> value);
        partial void OnIsPasswordUpdatedChanged();
        partial void OnOldPasswordChanging(string value);
        partial void OnOldPasswordChanged();
        partial void OnIsDeActivatedChanging(System.Nullable<bool> value);
        partial void OnIsDeActivatedChanged();
        partial void OnDateModifiedChanging(System.Nullable<System.DateTime> value);
        partial void OnDateModifiedChanged();
        partial void OnCommentsChanging(string value);
        partial void OnCommentsChanged();
        #endregion

        public CONLECUpdateLog()
        {
            this._CONLECRegistrationDetail = default(EntityRef<CONLECRegistrationDetail>);
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", AutoSync = AutoSync.OnInsert, DbType = "BigInt NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public long ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ((this._ID != value))
                {
                    this.OnIDChanging(value);
                    this.SendPropertyChanging();
                    this._ID = value;
                    this.SendPropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LECID", DbType = "BigInt NOT NULL")]
        public long LECID
        {
            get
            {
                return this._LECID;
            }
            set
            {
                if ((this._LECID != value))
                {
                    if (this._CONLECRegistrationDetail.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnLECIDChanging(value);
                    this.SendPropertyChanging();
                    this._LECID = value;
                    this.SendPropertyChanged("LECID");
                    this.OnLECIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LECRegistrationNumber", DbType = "NVarChar(50) NOT NULL", CanBeNull = false)]
        public string LECRegistrationNumber
        {
            get
            {
                return this._LECRegistrationNumber;
            }
            set
            {
                if ((this._LECRegistrationNumber != value))
                {
                    this.OnLECRegistrationNumberChanging(value);
                    this.SendPropertyChanging();
                    this._LECRegistrationNumber = value;
                    this.SendPropertyChanged("LECRegistrationNumber");
                    this.OnLECRegistrationNumberChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LECMobileNumber", DbType = "NVarChar(50)")]
        public string LECMobileNumber
        {
            get
            {
                return this._LECMobileNumber;
            }
            set
            {
                if ((this._LECMobileNumber != value))
                {
                    this.OnLECMobileNumberChanging(value);
                    this.SendPropertyChanging();
                    this._LECMobileNumber = value;
                    this.SendPropertyChanged("LECMobileNumber");
                    this.OnLECMobileNumberChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LECEmailID", DbType = "NVarChar(50)")]
        public string LECEmailID
        {
            get
            {
                return this._LECEmailID;
            }
            set
            {
                if ((this._LECEmailID != value))
                {
                    this.OnLECEmailIDChanging(value);
                    this.SendPropertyChanging();
                    this._LECEmailID = value;
                    this.SendPropertyChanged("LECEmailID");
                    this.OnLECEmailIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsProfileUpdated", DbType = "Bit")]
        public System.Nullable<bool> IsProfileUpdated
        {
            get
            {
                return this._IsProfileUpdated;
            }
            set
            {
                if ((this._IsProfileUpdated != value))
                {
                    this.OnIsProfileUpdatedChanging(value);
                    this.SendPropertyChanging();
                    this._IsProfileUpdated = value;
                    this.SendPropertyChanged("IsProfileUpdated");
                    this.OnIsProfileUpdatedChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_OldMobileNumber", DbType = "NVarChar(50)")]
        public string OldMobileNumber
        {
            get
            {
                return this._OldMobileNumber;
            }
            set
            {
                if ((this._OldMobileNumber != value))
                {
                    this.OnOldMobileNumberChanging(value);
                    this.SendPropertyChanging();
                    this._OldMobileNumber = value;
                    this.SendPropertyChanged("OldMobileNumber");
                    this.OnOldMobileNumberChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_OldEmailId", DbType = "NVarChar(50)")]
        public string OldEmailId
        {
            get
            {
                return this._OldEmailId;
            }
            set
            {
                if ((this._OldEmailId != value))
                {
                    this.OnOldEmailIdChanging(value);
                    this.SendPropertyChanging();
                    this._OldEmailId = value;
                    this.SendPropertyChanged("OldEmailId");
                    this.OnOldEmailIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsPasswordUpdated", DbType = "Bit")]
        public System.Nullable<bool> IsPasswordUpdated
        {
            get
            {
                return this._IsPasswordUpdated;
            }
            set
            {
                if ((this._IsPasswordUpdated != value))
                {
                    this.OnIsPasswordUpdatedChanging(value);
                    this.SendPropertyChanging();
                    this._IsPasswordUpdated = value;
                    this.SendPropertyChanged("IsPasswordUpdated");
                    this.OnIsPasswordUpdatedChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_OldPassword", DbType = "NVarChar(50)")]
        public string OldPassword
        {
            get
            {
                return this._OldPassword;
            }
            set
            {
                if ((this._OldPassword != value))
                {
                    this.OnOldPasswordChanging(value);
                    this.SendPropertyChanging();
                    this._OldPassword = value;
                    this.SendPropertyChanged("OldPassword");
                    this.OnOldPasswordChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsDeActivated", DbType = "Bit")]
        public System.Nullable<bool> IsDeActivated
        {
            get
            {
                return this._IsDeActivated;
            }
            set
            {
                if ((this._IsDeActivated != value))
                {
                    this.OnIsDeActivatedChanging(value);
                    this.SendPropertyChanging();
                    this._IsDeActivated = value;
                    this.SendPropertyChanged("IsDeActivated");
                    this.OnIsDeActivatedChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DateModified", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DateModified
        {
            get
            {
                return this._DateModified;
            }
            set
            {
                if ((this._DateModified != value))
                {
                    this.OnDateModifiedChanging(value);
                    this.SendPropertyChanging();
                    this._DateModified = value;
                    this.SendPropertyChanged("DateModified");
                    this.OnDateModifiedChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Comments", DbType = "NVarChar(500)")]
        public string Comments
        {
            get
            {
                return this._Comments;
            }
            set
            {
                if ((this._Comments != value))
                {
                    this.OnCommentsChanging(value);
                    this.SendPropertyChanging();
                    this._Comments = value;
                    this.SendPropertyChanged("Comments");
                    this.OnCommentsChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "CONLECRegistrationDetail_CONLECUpdateLog", Storage = "_CONLECRegistrationDetail", ThisKey = "LECID", OtherKey = "ID", IsForeignKey = true)]
        public CONLECRegistrationDetail CONLECRegistrationDetail
        {
            get
            {
                return this._CONLECRegistrationDetail.Entity;
            }
            set
            {
                CONLECRegistrationDetail previousValue = this._CONLECRegistrationDetail.Entity;
                if (((previousValue != value)
                            || (this._CONLECRegistrationDetail.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._CONLECRegistrationDetail.Entity = null;
                        previousValue.CONLECUpdateLogs.Remove(this);
                    }
                    this._CONLECRegistrationDetail.Entity = value;
                    if ((value != null))
                    {
                        value.CONLECUpdateLogs.Add(this);
                        this._LECID = value.ID;
                    }
                    else
                    {
                        this._LECID = default(long);
                    }
                    this.SendPropertyChanged("CONLECRegistrationDetail");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.PANUpdateLog")]
    public partial class PANUpdateLog : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _Id;

        private string _AccountNumber;

        private string _MobileNumber;

        private string _EmailId;

        private string _ConsumerName;

        private string _PANNumber;

        private string _GSTNumber;

        private System.Nullable<bool> _IsPANUpdated;

        private System.Nullable<bool> _IsGSTUpdated;

        private string _UpdatedPANNumber;

        private string _UpdatedGSTNumber;

        private System.Nullable<System.DateTime> _Created_Date;

        private string _FileName;

        private string _ContentType;

        private System.Data.Linq.Binary _DocData;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnAccountNumberChanging(string value);
        partial void OnAccountNumberChanged();
        partial void OnMobileNumberChanging(string value);
        partial void OnMobileNumberChanged();
        partial void OnEmailIdChanging(string value);
        partial void OnEmailIdChanged();
        partial void OnConsumerNameChanging(string value);
        partial void OnConsumerNameChanged();
        partial void OnPANNumberChanging(string value);
        partial void OnPANNumberChanged();
        partial void OnGSTNumberChanging(string value);
        partial void OnGSTNumberChanged();
        partial void OnIsPANUpdatedChanging(System.Nullable<bool> value);
        partial void OnIsPANUpdatedChanged();
        partial void OnIsGSTUpdatedChanging(System.Nullable<bool> value);
        partial void OnIsGSTUpdatedChanged();
        partial void OnUpdatedPANNumberChanging(string value);
        partial void OnUpdatedPANNumberChanged();
        partial void OnUpdatedGSTNumberChanging(string value);
        partial void OnUpdatedGSTNumberChanged();
        partial void OnCreated_DateChanging(System.Nullable<System.DateTime> value);
        partial void OnCreated_DateChanged();
        partial void OnFileNameChanging(string value);
        partial void OnFileNameChanged();
        partial void OnContentTypeChanging(string value);
        partial void OnContentTypeChanged();
        partial void OnDocDataChanging(System.Data.Linq.Binary value);
        partial void OnDocDataChanged();
        #endregion

        public PANUpdateLog()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Id", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if ((this._Id != value))
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging();
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AccountNumber", DbType = "NVarChar(50) NOT NULL", CanBeNull = false)]
        public string AccountNumber
        {
            get
            {
                return this._AccountNumber;
            }
            set
            {
                if ((this._AccountNumber != value))
                {
                    this.OnAccountNumberChanging(value);
                    this.SendPropertyChanging();
                    this._AccountNumber = value;
                    this.SendPropertyChanged("AccountNumber");
                    this.OnAccountNumberChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MobileNumber", DbType = "NVarChar(50) NOT NULL", CanBeNull = false)]
        public string MobileNumber
        {
            get
            {
                return this._MobileNumber;
            }
            set
            {
                if ((this._MobileNumber != value))
                {
                    this.OnMobileNumberChanging(value);
                    this.SendPropertyChanging();
                    this._MobileNumber = value;
                    this.SendPropertyChanged("MobileNumber");
                    this.OnMobileNumberChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EmailId", DbType = "NVarChar(50)")]
        public string EmailId
        {
            get
            {
                return this._EmailId;
            }
            set
            {
                if ((this._EmailId != value))
                {
                    this.OnEmailIdChanging(value);
                    this.SendPropertyChanging();
                    this._EmailId = value;
                    this.SendPropertyChanged("EmailId");
                    this.OnEmailIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ConsumerName", DbType = "NVarChar(50)")]
        public string ConsumerName
        {
            get
            {
                return this._ConsumerName;
            }
            set
            {
                if ((this._ConsumerName != value))
                {
                    this.OnConsumerNameChanging(value);
                    this.SendPropertyChanging();
                    this._ConsumerName = value;
                    this.SendPropertyChanged("ConsumerName");
                    this.OnConsumerNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PANNumber", DbType = "NVarChar(50)")]
        public string PANNumber
        {
            get
            {
                return this._PANNumber;
            }
            set
            {
                if ((this._PANNumber != value))
                {
                    this.OnPANNumberChanging(value);
                    this.SendPropertyChanging();
                    this._PANNumber = value;
                    this.SendPropertyChanged("PANNumber");
                    this.OnPANNumberChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_GSTNumber", DbType = "NVarChar(50)")]
        public string GSTNumber
        {
            get
            {
                return this._GSTNumber;
            }
            set
            {
                if ((this._GSTNumber != value))
                {
                    this.OnGSTNumberChanging(value);
                    this.SendPropertyChanging();
                    this._GSTNumber = value;
                    this.SendPropertyChanged("GSTNumber");
                    this.OnGSTNumberChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsPANUpdated", DbType = "Bit")]
        public System.Nullable<bool> IsPANUpdated
        {
            get
            {
                return this._IsPANUpdated;
            }
            set
            {
                if ((this._IsPANUpdated != value))
                {
                    this.OnIsPANUpdatedChanging(value);
                    this.SendPropertyChanging();
                    this._IsPANUpdated = value;
                    this.SendPropertyChanged("IsPANUpdated");
                    this.OnIsPANUpdatedChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsGSTUpdated", DbType = "Bit")]
        public System.Nullable<bool> IsGSTUpdated
        {
            get
            {
                return this._IsGSTUpdated;
            }
            set
            {
                if ((this._IsGSTUpdated != value))
                {
                    this.OnIsGSTUpdatedChanging(value);
                    this.SendPropertyChanging();
                    this._IsGSTUpdated = value;
                    this.SendPropertyChanged("IsGSTUpdated");
                    this.OnIsGSTUpdatedChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_UpdatedPANNumber", DbType = "NVarChar(50)")]
        public string UpdatedPANNumber
        {
            get
            {
                return this._UpdatedPANNumber;
            }
            set
            {
                if ((this._UpdatedPANNumber != value))
                {
                    this.OnUpdatedPANNumberChanging(value);
                    this.SendPropertyChanging();
                    this._UpdatedPANNumber = value;
                    this.SendPropertyChanged("UpdatedPANNumber");
                    this.OnUpdatedPANNumberChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_UpdatedGSTNumber", DbType = "NVarChar(50)")]
        public string UpdatedGSTNumber
        {
            get
            {
                return this._UpdatedGSTNumber;
            }
            set
            {
                if ((this._UpdatedGSTNumber != value))
                {
                    this.OnUpdatedGSTNumberChanging(value);
                    this.SendPropertyChanging();
                    this._UpdatedGSTNumber = value;
                    this.SendPropertyChanged("UpdatedGSTNumber");
                    this.OnUpdatedGSTNumberChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Created_Date", DbType = "DateTime")]
        public System.Nullable<System.DateTime> Created_Date
        {
            get
            {
                return this._Created_Date;
            }
            set
            {
                if ((this._Created_Date != value))
                {
                    this.OnCreated_DateChanging(value);
                    this.SendPropertyChanging();
                    this._Created_Date = value;
                    this.SendPropertyChanged("Created_Date");
                    this.OnCreated_DateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_FileName", DbType = "NVarChar(100)")]
        public string FileName
        {
            get
            {
                return this._FileName;
            }
            set
            {
                if ((this._FileName != value))
                {
                    this.OnFileNameChanging(value);
                    this.SendPropertyChanging();
                    this._FileName = value;
                    this.SendPropertyChanged("FileName");
                    this.OnFileNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ContentType", DbType = "NVarChar(MAX)")]
        public string ContentType
        {
            get
            {
                return this._ContentType;
            }
            set
            {
                if ((this._ContentType != value))
                {
                    this.OnContentTypeChanging(value);
                    this.SendPropertyChanging();
                    this._ContentType = value;
                    this.SendPropertyChanged("ContentType");
                    this.OnContentTypeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DocData", DbType = "VarBinary(MAX)", UpdateCheck = UpdateCheck.Never)]
        public System.Data.Linq.Binary DocData
        {
            get
            {
                return this._DocData;
            }
            set
            {
                if ((this._DocData != value))
                {
                    this.OnDocDataChanging(value);
                    this.SendPropertyChanging();
                    this._DocData = value;
                    this.SendPropertyChanged("DocData");
                    this.OnDocDataChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.ComplaintPortalLogginLog")]
    public partial class ComplaintPortalLogginLog : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private long _Id;

        private bool _IsRegistered;

        private string _LoginName;

        private string _AccountNumber;

        private string _MobileNumber;

        private System.DateTime _LoggedInDate;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(long value);
        partial void OnIdChanged();
        partial void OnIsRegisteredChanging(bool value);
        partial void OnIsRegisteredChanged();
        partial void OnLoginNameChanging(string value);
        partial void OnLoginNameChanged();
        partial void OnAccountNumberChanging(string value);
        partial void OnAccountNumberChanged();
        partial void OnMobileNumberChanging(string value);
        partial void OnMobileNumberChanged();
        partial void OnLoggedInDateChanging(System.DateTime value);
        partial void OnLoggedInDateChanged();
        #endregion

        public ComplaintPortalLogginLog()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Id", AutoSync = AutoSync.OnInsert, DbType = "BigInt NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public long Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if ((this._Id != value))
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging();
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsRegistered", DbType = "Bit NOT NULL")]
        public bool IsRegistered
        {
            get
            {
                return this._IsRegistered;
            }
            set
            {
                if ((this._IsRegistered != value))
                {
                    this.OnIsRegisteredChanging(value);
                    this.SendPropertyChanging();
                    this._IsRegistered = value;
                    this.SendPropertyChanged("IsRegistered");
                    this.OnIsRegisteredChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LoginName", DbType = "NVarChar(50)")]
        public string LoginName
        {
            get
            {
                return this._LoginName;
            }
            set
            {
                if ((this._LoginName != value))
                {
                    this.OnLoginNameChanging(value);
                    this.SendPropertyChanging();
                    this._LoginName = value;
                    this.SendPropertyChanged("LoginName");
                    this.OnLoginNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AccountNumber", DbType = "NVarChar(50)")]
        public string AccountNumber
        {
            get
            {
                return this._AccountNumber;
            }
            set
            {
                if ((this._AccountNumber != value))
                {
                    this.OnAccountNumberChanging(value);
                    this.SendPropertyChanging();
                    this._AccountNumber = value;
                    this.SendPropertyChanged("AccountNumber");
                    this.OnAccountNumberChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MobileNumber", DbType = "NVarChar(50)")]
        public string MobileNumber
        {
            get
            {
                return this._MobileNumber;
            }
            set
            {
                if ((this._MobileNumber != value))
                {
                    this.OnMobileNumberChanging(value);
                    this.SendPropertyChanging();
                    this._MobileNumber = value;
                    this.SendPropertyChanged("MobileNumber");
                    this.OnMobileNumberChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LoggedInDate", DbType = "DateTime NOT NULL")]
        public System.DateTime LoggedInDate
        {
            get
            {
                return this._LoggedInDate;
            }
            set
            {
                if ((this._LoggedInDate != value))
                {
                    this.OnLoggedInDateChanging(value);
                    this.SendPropertyChanging();
                    this._LoggedInDate = value;
                    this.SendPropertyChanged("LoggedInDate");
                    this.OnLoggedInDateChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.ComplaintPortalCGRFZoneDivisionMaster")]
    public partial class ComplaintPortalCGRFZoneDivisionMaster : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _Id;

        private string _ZoneName;

        private string _DivisionName;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnZoneNameChanging(string value);
        partial void OnZoneNameChanged();
        partial void OnDivisionNameChanging(string value);
        partial void OnDivisionNameChanged();
        #endregion

        public ComplaintPortalCGRFZoneDivisionMaster()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Id", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if ((this._Id != value))
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging();
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ZoneName", DbType = "NVarChar(50) NOT NULL", CanBeNull = false)]
        public string ZoneName
        {
            get
            {
                return this._ZoneName;
            }
            set
            {
                if ((this._ZoneName != value))
                {
                    this.OnZoneNameChanging(value);
                    this.SendPropertyChanging();
                    this._ZoneName = value;
                    this.SendPropertyChanged("ZoneName");
                    this.OnZoneNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DivisionName", DbType = "NVarChar(50) NOT NULL", CanBeNull = false)]
        public string DivisionName
        {
            get
            {
                return this._DivisionName;
            }
            set
            {
                if ((this._DivisionName != value))
                {
                    this.OnDivisionNameChanging(value);
                    this.SendPropertyChanging();
                    this._DivisionName = value;
                    this.SendPropertyChanged("DivisionName");
                    this.OnDivisionNameChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.ComplaintPortalCGRFDocumentTypeMaster")]
    public partial class ComplaintPortalCGRFDocumentTypeMaster : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _Id;

        private string _DocumentType;

        private string _Decription;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnDocumentTypeChanging(string value);
        partial void OnDocumentTypeChanged();
        partial void OnDecriptionChanging(string value);
        partial void OnDecriptionChanged();
        #endregion

        public ComplaintPortalCGRFDocumentTypeMaster()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Id", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if ((this._Id != value))
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging();
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DocumentType", DbType = "NVarChar(50) NOT NULL", CanBeNull = false)]
        public string DocumentType
        {
            get
            {
                return this._DocumentType;
            }
            set
            {
                if ((this._DocumentType != value))
                {
                    this.OnDocumentTypeChanging(value);
                    this.SendPropertyChanging();
                    this._DocumentType = value;
                    this.SendPropertyChanged("DocumentType");
                    this.OnDocumentTypeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Decription", DbType = "NVarChar(500)")]
        public string Decription
        {
            get
            {
                return this._Decription;
            }
            set
            {
                if ((this._Decription != value))
                {
                    this.OnDecriptionChanging(value);
                    this.SendPropertyChanging();
                    this._Decription = value;
                    this.SendPropertyChanged("Decription");
                    this.OnDecriptionChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.ComplaintPortalCGRFComplaintHistory")]
    public partial class ComplaintPortalCGRFComplaintHistory : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private long _Id;

        private long _ComplaintId;

        private string _Description;

        private string _AdminRemarks;

        private string _Status;

        private System.DateTime _CreatedDate;

        private string _CreatedBy;

        private EntityRef<ComplaintPortalRegisteredComplaint> _ComplaintPortalRegisteredComplaint;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(long value);
        partial void OnIdChanged();
        partial void OnComplaintIdChanging(long value);
        partial void OnComplaintIdChanged();
        partial void OnDescriptionChanging(string value);
        partial void OnDescriptionChanged();
        partial void OnAdminRemarksChanging(string value);
        partial void OnAdminRemarksChanged();
        partial void OnStatusChanging(string value);
        partial void OnStatusChanged();
        partial void OnCreatedDateChanging(System.DateTime value);
        partial void OnCreatedDateChanged();
        partial void OnCreatedByChanging(string value);
        partial void OnCreatedByChanged();
        #endregion

        public ComplaintPortalCGRFComplaintHistory()
        {
            this._ComplaintPortalRegisteredComplaint = default(EntityRef<ComplaintPortalRegisteredComplaint>);
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Id", AutoSync = AutoSync.OnInsert, DbType = "BigInt NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public long Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if ((this._Id != value))
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging();
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ComplaintId", DbType = "BigInt NOT NULL")]
        public long ComplaintId
        {
            get
            {
                return this._ComplaintId;
            }
            set
            {
                if ((this._ComplaintId != value))
                {
                    if (this._ComplaintPortalRegisteredComplaint.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnComplaintIdChanging(value);
                    this.SendPropertyChanging();
                    this._ComplaintId = value;
                    this.SendPropertyChanged("ComplaintId");
                    this.OnComplaintIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Description", DbType = "NVarChar(MAX)")]
        public string Description
        {
            get
            {
                return this._Description;
            }
            set
            {
                if ((this._Description != value))
                {
                    this.OnDescriptionChanging(value);
                    this.SendPropertyChanging();
                    this._Description = value;
                    this.SendPropertyChanged("Description");
                    this.OnDescriptionChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AdminRemarks", DbType = "NVarChar(MAX)")]
        public string AdminRemarks
        {
            get
            {
                return this._AdminRemarks;
            }
            set
            {
                if ((this._AdminRemarks != value))
                {
                    this.OnAdminRemarksChanging(value);
                    this.SendPropertyChanging();
                    this._AdminRemarks = value;
                    this.SendPropertyChanged("AdminRemarks");
                    this.OnAdminRemarksChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Status", DbType = "NVarChar(50)")]
        public string Status
        {
            get
            {
                return this._Status;
            }
            set
            {
                if ((this._Status != value))
                {
                    this.OnStatusChanging(value);
                    this.SendPropertyChanging();
                    this._Status = value;
                    this.SendPropertyChanged("Status");
                    this.OnStatusChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CreatedDate", DbType = "DateTime NOT NULL")]
        public System.DateTime CreatedDate
        {
            get
            {
                return this._CreatedDate;
            }
            set
            {
                if ((this._CreatedDate != value))
                {
                    this.OnCreatedDateChanging(value);
                    this.SendPropertyChanging();
                    this._CreatedDate = value;
                    this.SendPropertyChanged("CreatedDate");
                    this.OnCreatedDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CreatedBy", DbType = "NVarChar(50) NOT NULL", CanBeNull = false)]
        public string CreatedBy
        {
            get
            {
                return this._CreatedBy;
            }
            set
            {
                if ((this._CreatedBy != value))
                {
                    this.OnCreatedByChanging(value);
                    this.SendPropertyChanging();
                    this._CreatedBy = value;
                    this.SendPropertyChanged("CreatedBy");
                    this.OnCreatedByChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "ComplaintPortalRegisteredComplaint_ComplaintPortalCGRFComplaintHistory", Storage = "_ComplaintPortalRegisteredComplaint", ThisKey = "ComplaintId", OtherKey = "Id", IsForeignKey = true)]
        public ComplaintPortalRegisteredComplaint ComplaintPortalRegisteredComplaint
        {
            get
            {
                return this._ComplaintPortalRegisteredComplaint.Entity;
            }
            set
            {
                ComplaintPortalRegisteredComplaint previousValue = this._ComplaintPortalRegisteredComplaint.Entity;
                if (((previousValue != value)
                            || (this._ComplaintPortalRegisteredComplaint.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._ComplaintPortalRegisteredComplaint.Entity = null;
                        previousValue.ComplaintPortalCGRFComplaintHistories.Remove(this);
                    }
                    this._ComplaintPortalRegisteredComplaint.Entity = value;
                    if ((value != null))
                    {
                        value.ComplaintPortalCGRFComplaintHistories.Add(this);
                        this._ComplaintId = value.Id;
                    }
                    else
                    {
                        this._ComplaintId = default(long);
                    }
                    this.SendPropertyChanged("ComplaintPortalRegisteredComplaint");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.ComplaintPortalCGRFComplaintStatusMaster")]
    public partial class ComplaintPortalCGRFComplaintStatusMaster : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private long _Id;

        private string _ComplaintStatusCode;

        private string _ComplaintStatusName;

        private string _ComplaintStatusDescription;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(long value);
        partial void OnIdChanged();
        partial void OnComplaintStatusCodeChanging(string value);
        partial void OnComplaintStatusCodeChanged();
        partial void OnComplaintStatusNameChanging(string value);
        partial void OnComplaintStatusNameChanged();
        partial void OnComplaintStatusDescriptionChanging(string value);
        partial void OnComplaintStatusDescriptionChanged();
        #endregion

        public ComplaintPortalCGRFComplaintStatusMaster()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Id", AutoSync = AutoSync.OnInsert, DbType = "BigInt NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public long Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if ((this._Id != value))
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging();
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ComplaintStatusCode", DbType = "NVarChar(50) NOT NULL", CanBeNull = false)]
        public string ComplaintStatusCode
        {
            get
            {
                return this._ComplaintStatusCode;
            }
            set
            {
                if ((this._ComplaintStatusCode != value))
                {
                    this.OnComplaintStatusCodeChanging(value);
                    this.SendPropertyChanging();
                    this._ComplaintStatusCode = value;
                    this.SendPropertyChanged("ComplaintStatusCode");
                    this.OnComplaintStatusCodeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ComplaintStatusName", DbType = "NVarChar(50) NOT NULL", CanBeNull = false)]
        public string ComplaintStatusName
        {
            get
            {
                return this._ComplaintStatusName;
            }
            set
            {
                if ((this._ComplaintStatusName != value))
                {
                    this.OnComplaintStatusNameChanging(value);
                    this.SendPropertyChanging();
                    this._ComplaintStatusName = value;
                    this.SendPropertyChanged("ComplaintStatusName");
                    this.OnComplaintStatusNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ComplaintStatusDescription", DbType = "NVarChar(500)")]
        public string ComplaintStatusDescription
        {
            get
            {
                return this._ComplaintStatusDescription;
            }
            set
            {
                if ((this._ComplaintStatusDescription != value))
                {
                    this.OnComplaintStatusDescriptionChanging(value);
                    this.SendPropertyChanging();
                    this._ComplaintStatusDescription = value;
                    this.SendPropertyChanged("ComplaintStatusDescription");
                    this.OnComplaintStatusDescriptionChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.ComplaintPortalCGRFAdminLogin")]
    public partial class ComplaintPortalCGRFAdminLogin : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _Id;

        private string _Username;

        private string _Password;

        private string _Role;

        private string _EmailId;

        private string _MobileNumber;

        private string _Name;

        private System.Nullable<bool> _IsActive;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnUsernameChanging(string value);
        partial void OnUsernameChanged();
        partial void OnPasswordChanging(string value);
        partial void OnPasswordChanged();
        partial void OnRoleChanging(string value);
        partial void OnRoleChanged();
        partial void OnEmailIdChanging(string value);
        partial void OnEmailIdChanged();
        partial void OnMobileNumberChanging(string value);
        partial void OnMobileNumberChanged();
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
        partial void OnIsActiveChanging(System.Nullable<bool> value);
        partial void OnIsActiveChanged();
        #endregion

        public ComplaintPortalCGRFAdminLogin()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Id", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if ((this._Id != value))
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging();
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Username", DbType = "NVarChar(50) NOT NULL", CanBeNull = false)]
        public string Username
        {
            get
            {
                return this._Username;
            }
            set
            {
                if ((this._Username != value))
                {
                    this.OnUsernameChanging(value);
                    this.SendPropertyChanging();
                    this._Username = value;
                    this.SendPropertyChanged("Username");
                    this.OnUsernameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Password", DbType = "NVarChar(50) NOT NULL", CanBeNull = false)]
        public string Password
        {
            get
            {
                return this._Password;
            }
            set
            {
                if ((this._Password != value))
                {
                    this.OnPasswordChanging(value);
                    this.SendPropertyChanging();
                    this._Password = value;
                    this.SendPropertyChanged("Password");
                    this.OnPasswordChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Role", DbType = "NVarChar(50) NOT NULL", CanBeNull = false)]
        public string Role
        {
            get
            {
                return this._Role;
            }
            set
            {
                if ((this._Role != value))
                {
                    this.OnRoleChanging(value);
                    this.SendPropertyChanging();
                    this._Role = value;
                    this.SendPropertyChanged("Role");
                    this.OnRoleChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EmailId", DbType = "NVarChar(50)")]
        public string EmailId
        {
            get
            {
                return this._EmailId;
            }
            set
            {
                if ((this._EmailId != value))
                {
                    this.OnEmailIdChanging(value);
                    this.SendPropertyChanging();
                    this._EmailId = value;
                    this.SendPropertyChanged("EmailId");
                    this.OnEmailIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MobileNumber", DbType = "NVarChar(50)")]
        public string MobileNumber
        {
            get
            {
                return this._MobileNumber;
            }
            set
            {
                if ((this._MobileNumber != value))
                {
                    this.OnMobileNumberChanging(value);
                    this.SendPropertyChanging();
                    this._MobileNumber = value;
                    this.SendPropertyChanged("MobileNumber");
                    this.OnMobileNumberChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Name", DbType = "NVarChar(50)")]
        public string Name
        {
            get
            {
                return this._Name;
            }
            set
            {
                if ((this._Name != value))
                {
                    this.OnNameChanging(value);
                    this.SendPropertyChanging();
                    this._Name = value;
                    this.SendPropertyChanged("Name");
                    this.OnNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsActive", DbType = "Bit")]
        public System.Nullable<bool> IsActive
        {
            get
            {
                return this._IsActive;
            }
            set
            {
                if ((this._IsActive != value))
                {
                    this.OnIsActiveChanging(value);
                    this.SendPropertyChanging();
                    this._IsActive = value;
                    this.SendPropertyChanged("IsActive");
                    this.OnIsActiveChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.ComplaintPortalCGRFForwardDetails")]
    public partial class ComplaintPortalCGRFForwardDetail : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private long _Id;

        private long _ComplainId;

        private string _EmailId;

        private System.Nullable<System.DateTime> _CreatedDate;

        private string _CreatedBy;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(long value);
        partial void OnIdChanged();
        partial void OnComplainIdChanging(long value);
        partial void OnComplainIdChanged();
        partial void OnEmailIdChanging(string value);
        partial void OnEmailIdChanged();
        partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
        partial void OnCreatedDateChanged();
        partial void OnCreatedByChanging(string value);
        partial void OnCreatedByChanged();
        #endregion

        public ComplaintPortalCGRFForwardDetail()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Id", AutoSync = AutoSync.OnInsert, DbType = "BigInt NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public long Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if ((this._Id != value))
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging();
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ComplainId", DbType = "BigInt NOT NULL")]
        public long ComplainId
        {
            get
            {
                return this._ComplainId;
            }
            set
            {
                if ((this._ComplainId != value))
                {
                    this.OnComplainIdChanging(value);
                    this.SendPropertyChanging();
                    this._ComplainId = value;
                    this.SendPropertyChanged("ComplainId");
                    this.OnComplainIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EmailId", DbType = "NVarChar(50)")]
        public string EmailId
        {
            get
            {
                return this._EmailId;
            }
            set
            {
                if ((this._EmailId != value))
                {
                    this.OnEmailIdChanging(value);
                    this.SendPropertyChanging();
                    this._EmailId = value;
                    this.SendPropertyChanged("EmailId");
                    this.OnEmailIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CreatedDate", DbType = "DateTime")]
        public System.Nullable<System.DateTime> CreatedDate
        {
            get
            {
                return this._CreatedDate;
            }
            set
            {
                if ((this._CreatedDate != value))
                {
                    this.OnCreatedDateChanging(value);
                    this.SendPropertyChanging();
                    this._CreatedDate = value;
                    this.SendPropertyChanged("CreatedDate");
                    this.OnCreatedDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CreatedBy", DbType = "NVarChar(50)")]
        public string CreatedBy
        {
            get
            {
                return this._CreatedBy;
            }
            set
            {
                if ((this._CreatedBy != value))
                {
                    this.OnCreatedByChanging(value);
                    this.SendPropertyChanging();
                    this._CreatedBy = value;
                    this.SendPropertyChanged("CreatedBy");
                    this.OnCreatedByChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.ComplaintPortalCGRFForwardDetails")]
    public partial class ComplaintPortalCGRFForwardDetail1 : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private long _Id;

        private long _ComplainId;

        private string _EmailId;

        private System.Nullable<System.DateTime> _CreatedDate;

        private string _CreatedBy;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(long value);
        partial void OnIdChanged();
        partial void OnComplainIdChanging(long value);
        partial void OnComplainIdChanged();
        partial void OnEmailIdChanging(string value);
        partial void OnEmailIdChanged();
        partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
        partial void OnCreatedDateChanged();
        partial void OnCreatedByChanging(string value);
        partial void OnCreatedByChanged();
        #endregion

        public ComplaintPortalCGRFForwardDetail1()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Id", AutoSync = AutoSync.OnInsert, DbType = "BigInt NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public long Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if ((this._Id != value))
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging();
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ComplainId", DbType = "BigInt NOT NULL")]
        public long ComplainId
        {
            get
            {
                return this._ComplainId;
            }
            set
            {
                if ((this._ComplainId != value))
                {
                    this.OnComplainIdChanging(value);
                    this.SendPropertyChanging();
                    this._ComplainId = value;
                    this.SendPropertyChanged("ComplainId");
                    this.OnComplainIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EmailId", DbType = "NVarChar(50)")]
        public string EmailId
        {
            get
            {
                return this._EmailId;
            }
            set
            {
                if ((this._EmailId != value))
                {
                    this.OnEmailIdChanging(value);
                    this.SendPropertyChanging();
                    this._EmailId = value;
                    this.SendPropertyChanged("EmailId");
                    this.OnEmailIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CreatedDate", DbType = "DateTime")]
        public System.Nullable<System.DateTime> CreatedDate
        {
            get
            {
                return this._CreatedDate;
            }
            set
            {
                if ((this._CreatedDate != value))
                {
                    this.OnCreatedDateChanging(value);
                    this.SendPropertyChanging();
                    this._CreatedDate = value;
                    this.SendPropertyChanged("CreatedDate");
                    this.OnCreatedDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CreatedBy", DbType = "NVarChar(50)")]
        public string CreatedBy
        {
            get
            {
                return this._CreatedBy;
            }
            set
            {
                if ((this._CreatedBy != value))
                {
                    this.OnCreatedByChanging(value);
                    this.SendPropertyChanging();
                    this._CreatedBy = value;
                    this.SendPropertyChanged("CreatedBy");
                    this.OnCreatedByChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.CGRFForwardMail")]
    public partial class CGRFForwardMail : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private System.Guid _Id;

        private long _ComplainId;

        private string _EmailId;

        private System.Nullable<System.DateTime> _CreatedDate;

        private string _CreatedBy;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(System.Guid value);
        partial void OnIdChanged();
        partial void OnComplainIdChanging(long value);
        partial void OnComplainIdChanged();
        partial void OnEmailIdChanging(string value);
        partial void OnEmailIdChanged();
        partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
        partial void OnCreatedDateChanged();
        partial void OnCreatedByChanging(string value);
        partial void OnCreatedByChanged();
        #endregion

        public CGRFForwardMail()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Id", DbType = "UniqueIdentifier NOT NULL", IsPrimaryKey = true)]
        public System.Guid Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if ((this._Id != value))
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging();
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ComplainId", DbType = "BigInt NOT NULL")]
        public long ComplainId
        {
            get
            {
                return this._ComplainId;
            }
            set
            {
                if ((this._ComplainId != value))
                {
                    this.OnComplainIdChanging(value);
                    this.SendPropertyChanging();
                    this._ComplainId = value;
                    this.SendPropertyChanged("ComplainId");
                    this.OnComplainIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EmailId", DbType = "NVarChar(MAX)")]
        public string EmailId
        {
            get
            {
                return this._EmailId;
            }
            set
            {
                if ((this._EmailId != value))
                {
                    this.OnEmailIdChanging(value);
                    this.SendPropertyChanging();
                    this._EmailId = value;
                    this.SendPropertyChanged("EmailId");
                    this.OnEmailIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CreatedDate", DbType = "DateTime")]
        public System.Nullable<System.DateTime> CreatedDate
        {
            get
            {
                return this._CreatedDate;
            }
            set
            {
                if ((this._CreatedDate != value))
                {
                    this.OnCreatedDateChanging(value);
                    this.SendPropertyChanging();
                    this._CreatedDate = value;
                    this.SendPropertyChanged("CreatedDate");
                    this.OnCreatedDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CreatedBy", DbType = "NVarChar(50)")]
        public string CreatedBy
        {
            get
            {
                return this._CreatedBy;
            }
            set
            {
                if ((this._CreatedBy != value))
                {
                    this.OnCreatedByChanging(value);
                    this.SendPropertyChanging();
                    this._CreatedBy = value;
                    this.SendPropertyChanged("CreatedBy");
                    this.OnCreatedByChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.ComplaintPortalRegisteredComplaintsOrderReviewRequest")]
    public partial class ComplaintPortalRegisteredComplaintsOrderReviewRequest : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private long _Id;

        private System.Nullable<long> _ComplaintId;

        private string _AccountNumber;

        private System.Nullable<bool> _IsAppliedWithin30Days;

        private System.Nullable<bool> _IsAppealPreferred;

        private System.Nullable<bool> _IsErrorApparent;

        private System.Nullable<bool> _IsImportantMatterDiscovery;

        private System.Nullable<System.DateTime> _CreatedDate;

        private string _CreatedBy;

        private string _StatusCode;

        private string _StatusName;

        private EntityRef<ComplaintPortalRegisteredComplaint> _ComplaintPortalRegisteredComplaint;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(long value);
        partial void OnIdChanged();
        partial void OnComplaintIdChanging(System.Nullable<long> value);
        partial void OnComplaintIdChanged();
        partial void OnAccountNumberChanging(string value);
        partial void OnAccountNumberChanged();
        partial void OnIsAppliedWithin30DaysChanging(System.Nullable<bool> value);
        partial void OnIsAppliedWithin30DaysChanged();
        partial void OnIsAppealPreferredChanging(System.Nullable<bool> value);
        partial void OnIsAppealPreferredChanged();
        partial void OnIsErrorApparentChanging(System.Nullable<bool> value);
        partial void OnIsErrorApparentChanged();
        partial void OnIsImportantMatterDiscoveryChanging(System.Nullable<bool> value);
        partial void OnIsImportantMatterDiscoveryChanged();
        partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
        partial void OnCreatedDateChanged();
        partial void OnCreatedByChanging(string value);
        partial void OnCreatedByChanged();
        partial void OnStatusCodeChanging(string value);
        partial void OnStatusCodeChanged();
        partial void OnStatusNameChanging(string value);
        partial void OnStatusNameChanged();
        #endregion

        public ComplaintPortalRegisteredComplaintsOrderReviewRequest()
        {
            this._ComplaintPortalRegisteredComplaint = default(EntityRef<ComplaintPortalRegisteredComplaint>);
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Id", AutoSync = AutoSync.OnInsert, DbType = "BigInt NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public long Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if ((this._Id != value))
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging();
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ComplaintId", DbType = "BigInt")]
        public System.Nullable<long> ComplaintId
        {
            get
            {
                return this._ComplaintId;
            }
            set
            {
                if ((this._ComplaintId != value))
                {
                    if (this._ComplaintPortalRegisteredComplaint.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnComplaintIdChanging(value);
                    this.SendPropertyChanging();
                    this._ComplaintId = value;
                    this.SendPropertyChanged("ComplaintId");
                    this.OnComplaintIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AccountNumber", DbType = "NVarChar(50)")]
        public string AccountNumber
        {
            get
            {
                return this._AccountNumber;
            }
            set
            {
                if ((this._AccountNumber != value))
                {
                    this.OnAccountNumberChanging(value);
                    this.SendPropertyChanging();
                    this._AccountNumber = value;
                    this.SendPropertyChanged("AccountNumber");
                    this.OnAccountNumberChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsAppliedWithin30Days", DbType = "Bit")]
        public System.Nullable<bool> IsAppliedWithin30Days
        {
            get
            {
                return this._IsAppliedWithin30Days;
            }
            set
            {
                if ((this._IsAppliedWithin30Days != value))
                {
                    this.OnIsAppliedWithin30DaysChanging(value);
                    this.SendPropertyChanging();
                    this._IsAppliedWithin30Days = value;
                    this.SendPropertyChanged("IsAppliedWithin30Days");
                    this.OnIsAppliedWithin30DaysChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsAppealPreferred", DbType = "Bit")]
        public System.Nullable<bool> IsAppealPreferred
        {
            get
            {
                return this._IsAppealPreferred;
            }
            set
            {
                if ((this._IsAppealPreferred != value))
                {
                    this.OnIsAppealPreferredChanging(value);
                    this.SendPropertyChanging();
                    this._IsAppealPreferred = value;
                    this.SendPropertyChanged("IsAppealPreferred");
                    this.OnIsAppealPreferredChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsErrorApparent", DbType = "Bit")]
        public System.Nullable<bool> IsErrorApparent
        {
            get
            {
                return this._IsErrorApparent;
            }
            set
            {
                if ((this._IsErrorApparent != value))
                {
                    this.OnIsErrorApparentChanging(value);
                    this.SendPropertyChanging();
                    this._IsErrorApparent = value;
                    this.SendPropertyChanged("IsErrorApparent");
                    this.OnIsErrorApparentChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsImportantMatterDiscovery", DbType = "Bit")]
        public System.Nullable<bool> IsImportantMatterDiscovery
        {
            get
            {
                return this._IsImportantMatterDiscovery;
            }
            set
            {
                if ((this._IsImportantMatterDiscovery != value))
                {
                    this.OnIsImportantMatterDiscoveryChanging(value);
                    this.SendPropertyChanging();
                    this._IsImportantMatterDiscovery = value;
                    this.SendPropertyChanged("IsImportantMatterDiscovery");
                    this.OnIsImportantMatterDiscoveryChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CreatedDate", DbType = "DateTime")]
        public System.Nullable<System.DateTime> CreatedDate
        {
            get
            {
                return this._CreatedDate;
            }
            set
            {
                if ((this._CreatedDate != value))
                {
                    this.OnCreatedDateChanging(value);
                    this.SendPropertyChanging();
                    this._CreatedDate = value;
                    this.SendPropertyChanged("CreatedDate");
                    this.OnCreatedDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CreatedBy", DbType = "NVarChar(50)")]
        public string CreatedBy
        {
            get
            {
                return this._CreatedBy;
            }
            set
            {
                if ((this._CreatedBy != value))
                {
                    this.OnCreatedByChanging(value);
                    this.SendPropertyChanging();
                    this._CreatedBy = value;
                    this.SendPropertyChanged("CreatedBy");
                    this.OnCreatedByChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_StatusCode", DbType = "NVarChar(50)")]
        public string StatusCode
        {
            get
            {
                return this._StatusCode;
            }
            set
            {
                if ((this._StatusCode != value))
                {
                    this.OnStatusCodeChanging(value);
                    this.SendPropertyChanging();
                    this._StatusCode = value;
                    this.SendPropertyChanged("StatusCode");
                    this.OnStatusCodeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_StatusName", DbType = "NVarChar(50)")]
        public string StatusName
        {
            get
            {
                return this._StatusName;
            }
            set
            {
                if ((this._StatusName != value))
                {
                    this.OnStatusNameChanging(value);
                    this.SendPropertyChanging();
                    this._StatusName = value;
                    this.SendPropertyChanged("StatusName");
                    this.OnStatusNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "ComplaintPortalRegisteredComplaint_ComplaintPortalRegisteredComplaintsOrderReview" +
            "Request", Storage = "_ComplaintPortalRegisteredComplaint", ThisKey = "ComplaintId", OtherKey = "Id", IsForeignKey = true)]
        public ComplaintPortalRegisteredComplaint ComplaintPortalRegisteredComplaint
        {
            get
            {
                return this._ComplaintPortalRegisteredComplaint.Entity;
            }
            set
            {
                ComplaintPortalRegisteredComplaint previousValue = this._ComplaintPortalRegisteredComplaint.Entity;
                if (((previousValue != value)
                            || (this._ComplaintPortalRegisteredComplaint.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._ComplaintPortalRegisteredComplaint.Entity = null;
                        previousValue.ComplaintPortalRegisteredComplaintsOrderReviewRequests.Remove(this);
                    }
                    this._ComplaintPortalRegisteredComplaint.Entity = value;
                    if ((value != null))
                    {
                        value.ComplaintPortalRegisteredComplaintsOrderReviewRequests.Add(this);
                        this._ComplaintId = value.Id;
                    }
                    else
                    {
                        this._ComplaintId = default(Nullable<long>);
                    }
                    this.SendPropertyChanged("ComplaintPortalRegisteredComplaint");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.ComplaintPortalCGRFComplaintHearingSchedule")]
    public partial class ComplaintPortalCGRFComplaintHearingSchedule : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private long _Id;

        private long _ComplaintId;

        private string _DateOfHearing;

        private System.Nullable<System.DateTime> _ScheduledDate;

        private string _MOMFileName;

        private System.Data.Linq.Binary _MOMDocumentData;

        private string _MOMDocumentContentType;

        private System.Nullable<System.DateTime> _MOMUploadDate;

        private System.Nullable<bool> _IsOrderReviewRequest;

        private EntityRef<ComplaintPortalRegisteredComplaint> _ComplaintPortalRegisteredComplaint;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(long value);
        partial void OnIdChanged();
        partial void OnComplaintIdChanging(long value);
        partial void OnComplaintIdChanged();
        partial void OnDateOfHearingChanging(string value);
        partial void OnDateOfHearingChanged();
        partial void OnScheduledDateChanging(System.Nullable<System.DateTime> value);
        partial void OnScheduledDateChanged();
        partial void OnMOMFileNameChanging(string value);
        partial void OnMOMFileNameChanged();
        partial void OnMOMDocumentDataChanging(System.Data.Linq.Binary value);
        partial void OnMOMDocumentDataChanged();
        partial void OnMOMDocumentContentTypeChanging(string value);
        partial void OnMOMDocumentContentTypeChanged();
        partial void OnMOMUploadDateChanging(System.Nullable<System.DateTime> value);
        partial void OnMOMUploadDateChanged();
        partial void OnIsOrderReviewRequestChanging(System.Nullable<bool> value);
        partial void OnIsOrderReviewRequestChanged();
        #endregion

        public ComplaintPortalCGRFComplaintHearingSchedule()
        {
            this._ComplaintPortalRegisteredComplaint = default(EntityRef<ComplaintPortalRegisteredComplaint>);
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Id", AutoSync = AutoSync.OnInsert, DbType = "BigInt NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public long Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if ((this._Id != value))
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging();
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ComplaintId", DbType = "BigInt NOT NULL")]
        public long ComplaintId
        {
            get
            {
                return this._ComplaintId;
            }
            set
            {
                if ((this._ComplaintId != value))
                {
                    if (this._ComplaintPortalRegisteredComplaint.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnComplaintIdChanging(value);
                    this.SendPropertyChanging();
                    this._ComplaintId = value;
                    this.SendPropertyChanged("ComplaintId");
                    this.OnComplaintIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DateOfHearing", DbType = "NVarChar(100)")]
        public string DateOfHearing
        {
            get
            {
                return this._DateOfHearing;
            }
            set
            {
                if ((this._DateOfHearing != value))
                {
                    this.OnDateOfHearingChanging(value);
                    this.SendPropertyChanging();
                    this._DateOfHearing = value;
                    this.SendPropertyChanged("DateOfHearing");
                    this.OnDateOfHearingChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ScheduledDate", DbType = "DateTime")]
        public System.Nullable<System.DateTime> ScheduledDate
        {
            get
            {
                return this._ScheduledDate;
            }
            set
            {
                if ((this._ScheduledDate != value))
                {
                    this.OnScheduledDateChanging(value);
                    this.SendPropertyChanging();
                    this._ScheduledDate = value;
                    this.SendPropertyChanged("ScheduledDate");
                    this.OnScheduledDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MOMFileName", DbType = "NVarChar(50)")]
        public string MOMFileName
        {
            get
            {
                return this._MOMFileName;
            }
            set
            {
                if ((this._MOMFileName != value))
                {
                    this.OnMOMFileNameChanging(value);
                    this.SendPropertyChanging();
                    this._MOMFileName = value;
                    this.SendPropertyChanged("MOMFileName");
                    this.OnMOMFileNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MOMDocumentData", DbType = "VarBinary(MAX)", UpdateCheck = UpdateCheck.Never)]
        public System.Data.Linq.Binary MOMDocumentData
        {
            get
            {
                return this._MOMDocumentData;
            }
            set
            {
                if ((this._MOMDocumentData != value))
                {
                    this.OnMOMDocumentDataChanging(value);
                    this.SendPropertyChanging();
                    this._MOMDocumentData = value;
                    this.SendPropertyChanged("MOMDocumentData");
                    this.OnMOMDocumentDataChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MOMDocumentContentType", DbType = "NVarChar(50)")]
        public string MOMDocumentContentType
        {
            get
            {
                return this._MOMDocumentContentType;
            }
            set
            {
                if ((this._MOMDocumentContentType != value))
                {
                    this.OnMOMDocumentContentTypeChanging(value);
                    this.SendPropertyChanging();
                    this._MOMDocumentContentType = value;
                    this.SendPropertyChanged("MOMDocumentContentType");
                    this.OnMOMDocumentContentTypeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MOMUploadDate", DbType = "DateTime")]
        public System.Nullable<System.DateTime> MOMUploadDate
        {
            get
            {
                return this._MOMUploadDate;
            }
            set
            {
                if ((this._MOMUploadDate != value))
                {
                    this.OnMOMUploadDateChanging(value);
                    this.SendPropertyChanging();
                    this._MOMUploadDate = value;
                    this.SendPropertyChanged("MOMUploadDate");
                    this.OnMOMUploadDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsOrderReviewRequest", DbType = "Bit")]
        public System.Nullable<bool> IsOrderReviewRequest
        {
            get
            {
                return this._IsOrderReviewRequest;
            }
            set
            {
                if ((this._IsOrderReviewRequest != value))
                {
                    this.OnIsOrderReviewRequestChanging(value);
                    this.SendPropertyChanging();
                    this._IsOrderReviewRequest = value;
                    this.SendPropertyChanged("IsOrderReviewRequest");
                    this.OnIsOrderReviewRequestChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "ComplaintPortalRegisteredComplaint_ComplaintPortalCGRFComplaintHearingSchedule", Storage = "_ComplaintPortalRegisteredComplaint", ThisKey = "ComplaintId", OtherKey = "Id", IsForeignKey = true)]
        public ComplaintPortalRegisteredComplaint ComplaintPortalRegisteredComplaint
        {
            get
            {
                return this._ComplaintPortalRegisteredComplaint.Entity;
            }
            set
            {
                ComplaintPortalRegisteredComplaint previousValue = this._ComplaintPortalRegisteredComplaint.Entity;
                if (((previousValue != value)
                            || (this._ComplaintPortalRegisteredComplaint.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._ComplaintPortalRegisteredComplaint.Entity = null;
                        previousValue.ComplaintPortalCGRFComplaintHearingSchedules.Remove(this);
                    }
                    this._ComplaintPortalRegisteredComplaint.Entity = value;
                    if ((value != null))
                    {
                        value.ComplaintPortalCGRFComplaintHearingSchedules.Add(this);
                        this._ComplaintId = value.Id;
                    }
                    else
                    {
                        this._ComplaintId = default(long);
                    }
                    this.SendPropertyChanged("ComplaintPortalRegisteredComplaint");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.ComplaintPortalCGRFComplaintDocuments")]
    public partial class ComplaintPortalCGRFComplaintDocument : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private long _Id;

        private long _ComplaintNumber;

        private string _DocumentType;

        private System.Nullable<int> _DocumenttypeCode;

        private string _DocumentName;

        private System.Data.Linq.Binary _DocumentData;

        private string _DocumentContentType;

        private string _DocumentDescription;

        private System.DateTime _CreatedDate;

        private System.Nullable<bool> _IsReviewRequestRaised;

        private EntityRef<ComplaintPortalRegisteredComplaint> _ComplaintPortalRegisteredComplaint;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(long value);
        partial void OnIdChanged();
        partial void OnComplaintNumberChanging(long value);
        partial void OnComplaintNumberChanged();
        partial void OnDocumentTypeChanging(string value);
        partial void OnDocumentTypeChanged();
        partial void OnDocumenttypeCodeChanging(System.Nullable<int> value);
        partial void OnDocumenttypeCodeChanged();
        partial void OnDocumentNameChanging(string value);
        partial void OnDocumentNameChanged();
        partial void OnDocumentDataChanging(System.Data.Linq.Binary value);
        partial void OnDocumentDataChanged();
        partial void OnDocumentContentTypeChanging(string value);
        partial void OnDocumentContentTypeChanged();
        partial void OnDocumentDescriptionChanging(string value);
        partial void OnDocumentDescriptionChanged();
        partial void OnCreatedDateChanging(System.DateTime value);
        partial void OnCreatedDateChanged();
        partial void OnIsReviewRequestRaisedChanging(System.Nullable<bool> value);
        partial void OnIsReviewRequestRaisedChanged();
        #endregion

        public ComplaintPortalCGRFComplaintDocument()
        {
            this._ComplaintPortalRegisteredComplaint = default(EntityRef<ComplaintPortalRegisteredComplaint>);
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Id", AutoSync = AutoSync.OnInsert, DbType = "BigInt NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public long Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if ((this._Id != value))
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging();
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ComplaintNumber", DbType = "BigInt NOT NULL")]
        public long ComplaintNumber
        {
            get
            {
                return this._ComplaintNumber;
            }
            set
            {
                if ((this._ComplaintNumber != value))
                {
                    if (this._ComplaintPortalRegisteredComplaint.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnComplaintNumberChanging(value);
                    this.SendPropertyChanging();
                    this._ComplaintNumber = value;
                    this.SendPropertyChanged("ComplaintNumber");
                    this.OnComplaintNumberChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DocumentType", DbType = "NVarChar(50) NOT NULL", CanBeNull = false)]
        public string DocumentType
        {
            get
            {
                return this._DocumentType;
            }
            set
            {
                if ((this._DocumentType != value))
                {
                    this.OnDocumentTypeChanging(value);
                    this.SendPropertyChanging();
                    this._DocumentType = value;
                    this.SendPropertyChanged("DocumentType");
                    this.OnDocumentTypeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DocumenttypeCode", DbType = "Int")]
        public System.Nullable<int> DocumenttypeCode
        {
            get
            {
                return this._DocumenttypeCode;
            }
            set
            {
                if ((this._DocumenttypeCode != value))
                {
                    this.OnDocumenttypeCodeChanging(value);
                    this.SendPropertyChanging();
                    this._DocumenttypeCode = value;
                    this.SendPropertyChanged("DocumenttypeCode");
                    this.OnDocumenttypeCodeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DocumentName", DbType = "NVarChar(200) NOT NULL", CanBeNull = false)]
        public string DocumentName
        {
            get
            {
                return this._DocumentName;
            }
            set
            {
                if ((this._DocumentName != value))
                {
                    this.OnDocumentNameChanging(value);
                    this.SendPropertyChanging();
                    this._DocumentName = value;
                    this.SendPropertyChanged("DocumentName");
                    this.OnDocumentNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DocumentData", DbType = "VarBinary(MAX) NOT NULL", CanBeNull = false, UpdateCheck = UpdateCheck.Never)]
        public System.Data.Linq.Binary DocumentData
        {
            get
            {
                return this._DocumentData;
            }
            set
            {
                if ((this._DocumentData != value))
                {
                    this.OnDocumentDataChanging(value);
                    this.SendPropertyChanging();
                    this._DocumentData = value;
                    this.SendPropertyChanged("DocumentData");
                    this.OnDocumentDataChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DocumentContentType", DbType = "NVarChar(200) NOT NULL", CanBeNull = false)]
        public string DocumentContentType
        {
            get
            {
                return this._DocumentContentType;
            }
            set
            {
                if ((this._DocumentContentType != value))
                {
                    this.OnDocumentContentTypeChanging(value);
                    this.SendPropertyChanging();
                    this._DocumentContentType = value;
                    this.SendPropertyChanged("DocumentContentType");
                    this.OnDocumentContentTypeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DocumentDescription", DbType = "NVarChar(500)")]
        public string DocumentDescription
        {
            get
            {
                return this._DocumentDescription;
            }
            set
            {
                if ((this._DocumentDescription != value))
                {
                    this.OnDocumentDescriptionChanging(value);
                    this.SendPropertyChanging();
                    this._DocumentDescription = value;
                    this.SendPropertyChanged("DocumentDescription");
                    this.OnDocumentDescriptionChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CreatedDate", DbType = "DateTime NOT NULL")]
        public System.DateTime CreatedDate
        {
            get
            {
                return this._CreatedDate;
            }
            set
            {
                if ((this._CreatedDate != value))
                {
                    this.OnCreatedDateChanging(value);
                    this.SendPropertyChanging();
                    this._CreatedDate = value;
                    this.SendPropertyChanged("CreatedDate");
                    this.OnCreatedDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsReviewRequestRaised", DbType = "Bit")]
        public System.Nullable<bool> IsReviewRequestRaised
        {
            get
            {
                return this._IsReviewRequestRaised;
            }
            set
            {
                if ((this._IsReviewRequestRaised != value))
                {
                    this.OnIsReviewRequestRaisedChanging(value);
                    this.SendPropertyChanging();
                    this._IsReviewRequestRaised = value;
                    this.SendPropertyChanged("IsReviewRequestRaised");
                    this.OnIsReviewRequestRaisedChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "ComplaintPortalRegisteredComplaint_ComplaintPortalCGRFComplaintDocument", Storage = "_ComplaintPortalRegisteredComplaint", ThisKey = "ComplaintNumber", OtherKey = "Id", IsForeignKey = true)]
        public ComplaintPortalRegisteredComplaint ComplaintPortalRegisteredComplaint
        {
            get
            {
                return this._ComplaintPortalRegisteredComplaint.Entity;
            }
            set
            {
                ComplaintPortalRegisteredComplaint previousValue = this._ComplaintPortalRegisteredComplaint.Entity;
                if (((previousValue != value)
                            || (this._ComplaintPortalRegisteredComplaint.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._ComplaintPortalRegisteredComplaint.Entity = null;
                        previousValue.ComplaintPortalCGRFComplaintDocuments.Remove(this);
                    }
                    this._ComplaintPortalRegisteredComplaint.Entity = value;
                    if ((value != null))
                    {
                        value.ComplaintPortalCGRFComplaintDocuments.Add(this);
                        this._ComplaintNumber = value.Id;
                    }
                    else
                    {
                        this._ComplaintNumber = default(long);
                    }
                    this.SendPropertyChanged("ComplaintPortalRegisteredComplaint");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.ComplaintPortalComplaintSubCategoryMaster")]
    public partial class ComplaintPortalComplaintSubCategoryMaster : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _Id;

        private int _CategoryId;

        private string _SubCategory;

        private System.Nullable<int> _SubCategoryId;

        private EntityRef<ComplaintPortalComplaintCategoryMaster> _ComplaintPortalComplaintCategoryMaster;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnCategoryIdChanging(int value);
        partial void OnCategoryIdChanged();
        partial void OnSubCategoryChanging(string value);
        partial void OnSubCategoryChanged();
        partial void OnSubCategoryIdChanging(System.Nullable<int> value);
        partial void OnSubCategoryIdChanged();
        #endregion

        public ComplaintPortalComplaintSubCategoryMaster()
        {
            this._ComplaintPortalComplaintCategoryMaster = default(EntityRef<ComplaintPortalComplaintCategoryMaster>);
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Id", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if ((this._Id != value))
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging();
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CategoryId", DbType = "Int NOT NULL")]
        public int CategoryId
        {
            get
            {
                return this._CategoryId;
            }
            set
            {
                if ((this._CategoryId != value))
                {
                    if (this._ComplaintPortalComplaintCategoryMaster.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnCategoryIdChanging(value);
                    this.SendPropertyChanging();
                    this._CategoryId = value;
                    this.SendPropertyChanged("CategoryId");
                    this.OnCategoryIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SubCategory", DbType = "NVarChar(50) NOT NULL", CanBeNull = false)]
        public string SubCategory
        {
            get
            {
                return this._SubCategory;
            }
            set
            {
                if ((this._SubCategory != value))
                {
                    this.OnSubCategoryChanging(value);
                    this.SendPropertyChanging();
                    this._SubCategory = value;
                    this.SendPropertyChanged("SubCategory");
                    this.OnSubCategoryChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SubCategoryId", DbType = "Int")]
        public System.Nullable<int> SubCategoryId
        {
            get
            {
                return this._SubCategoryId;
            }
            set
            {
                if ((this._SubCategoryId != value))
                {
                    this.OnSubCategoryIdChanging(value);
                    this.SendPropertyChanging();
                    this._SubCategoryId = value;
                    this.SendPropertyChanged("SubCategoryId");
                    this.OnSubCategoryIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "ComplaintPortalComplaintCategoryMaster_ComplaintPortalComplaintSubCategoryMaster", Storage = "_ComplaintPortalComplaintCategoryMaster", ThisKey = "CategoryId", OtherKey = "Id", IsForeignKey = true)]
        public ComplaintPortalComplaintCategoryMaster ComplaintPortalComplaintCategoryMaster
        {
            get
            {
                return this._ComplaintPortalComplaintCategoryMaster.Entity;
            }
            set
            {
                ComplaintPortalComplaintCategoryMaster previousValue = this._ComplaintPortalComplaintCategoryMaster.Entity;
                if (((previousValue != value)
                            || (this._ComplaintPortalComplaintCategoryMaster.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._ComplaintPortalComplaintCategoryMaster.Entity = null;
                        previousValue.ComplaintPortalComplaintSubCategoryMasters.Remove(this);
                    }
                    this._ComplaintPortalComplaintCategoryMaster.Entity = value;
                    if ((value != null))
                    {
                        value.ComplaintPortalComplaintSubCategoryMasters.Add(this);
                        this._CategoryId = value.Id;
                    }
                    else
                    {
                        this._CategoryId = default(int);
                    }
                    this.SendPropertyChanged("ComplaintPortalComplaintCategoryMaster");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.ComplaintPortalComplaintSubTypeMaster")]
    public partial class ComplaintPortalComplaintSubTypeMaster : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _Id;

        private string _SubTypeCode;

        private string _SubTypeDescription;

        private string _SubSubTypeCode;

        private string _SubSubTypeDescription;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnSubTypeCodeChanging(string value);
        partial void OnSubTypeCodeChanged();
        partial void OnSubTypeDescriptionChanging(string value);
        partial void OnSubTypeDescriptionChanged();
        partial void OnSubSubTypeCodeChanging(string value);
        partial void OnSubSubTypeCodeChanged();
        partial void OnSubSubTypeDescriptionChanging(string value);
        partial void OnSubSubTypeDescriptionChanged();
        #endregion

        public ComplaintPortalComplaintSubTypeMaster()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Id", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if ((this._Id != value))
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging();
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SubTypeCode", DbType = "NVarChar(50) NOT NULL", CanBeNull = false)]
        public string SubTypeCode
        {
            get
            {
                return this._SubTypeCode;
            }
            set
            {
                if ((this._SubTypeCode != value))
                {
                    this.OnSubTypeCodeChanging(value);
                    this.SendPropertyChanging();
                    this._SubTypeCode = value;
                    this.SendPropertyChanged("SubTypeCode");
                    this.OnSubTypeCodeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SubTypeDescription", DbType = "NVarChar(50) NOT NULL", CanBeNull = false)]
        public string SubTypeDescription
        {
            get
            {
                return this._SubTypeDescription;
            }
            set
            {
                if ((this._SubTypeDescription != value))
                {
                    this.OnSubTypeDescriptionChanging(value);
                    this.SendPropertyChanging();
                    this._SubTypeDescription = value;
                    this.SendPropertyChanged("SubTypeDescription");
                    this.OnSubTypeDescriptionChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SubSubTypeCode", DbType = "NVarChar(50) NOT NULL", CanBeNull = false)]
        public string SubSubTypeCode
        {
            get
            {
                return this._SubSubTypeCode;
            }
            set
            {
                if ((this._SubSubTypeCode != value))
                {
                    this.OnSubSubTypeCodeChanging(value);
                    this.SendPropertyChanging();
                    this._SubSubTypeCode = value;
                    this.SendPropertyChanged("SubSubTypeCode");
                    this.OnSubSubTypeCodeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SubSubTypeDescription", DbType = "NVarChar(100) NOT NULL", CanBeNull = false)]
        public string SubSubTypeDescription
        {
            get
            {
                return this._SubSubTypeDescription;
            }
            set
            {
                if ((this._SubSubTypeDescription != value))
                {
                    this.OnSubSubTypeDescriptionChanging(value);
                    this.SendPropertyChanging();
                    this._SubSubTypeDescription = value;
                    this.SendPropertyChanged("SubSubTypeDescription");
                    this.OnSubSubTypeDescriptionChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.ComplaintPortalCGRFApprovedComplaints")]
    public partial class ComplaintPortalCGRFApprovedComplaint : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private long _Id;

        private long _ComplaintId;

        private System.DateTime _ApprovedDate;

        private string _CaseNumber;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(long value);
        partial void OnIdChanged();
        partial void OnComplaintIdChanging(long value);
        partial void OnComplaintIdChanged();
        partial void OnApprovedDateChanging(System.DateTime value);
        partial void OnApprovedDateChanged();
        partial void OnCaseNumberChanging(string value);
        partial void OnCaseNumberChanged();
        #endregion

        public ComplaintPortalCGRFApprovedComplaint()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Id", AutoSync = AutoSync.OnInsert, DbType = "BigInt NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public long Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if ((this._Id != value))
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging();
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ComplaintId", DbType = "BigInt NOT NULL")]
        public long ComplaintId
        {
            get
            {
                return this._ComplaintId;
            }
            set
            {
                if ((this._ComplaintId != value))
                {
                    this.OnComplaintIdChanging(value);
                    this.SendPropertyChanging();
                    this._ComplaintId = value;
                    this.SendPropertyChanged("ComplaintId");
                    this.OnComplaintIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ApprovedDate", DbType = "DateTime NOT NULL")]
        public System.DateTime ApprovedDate
        {
            get
            {
                return this._ApprovedDate;
            }
            set
            {
                if ((this._ApprovedDate != value))
                {
                    this.OnApprovedDateChanging(value);
                    this.SendPropertyChanging();
                    this._ApprovedDate = value;
                    this.SendPropertyChanged("ApprovedDate");
                    this.OnApprovedDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CaseNumber", DbType = "NVarChar(50) NOT NULL", CanBeNull = false)]
        public string CaseNumber
        {
            get
            {
                return this._CaseNumber;
            }
            set
            {
                if ((this._CaseNumber != value))
                {
                    this.OnCaseNumberChanging(value);
                    this.SendPropertyChanging();
                    this._CaseNumber = value;
                    this.SendPropertyChanged("CaseNumber");
                    this.OnCaseNumberChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.SecurityDepositInstallmentOptIn")]
    public partial class SecurityDepositInstallmentOptIn : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private long _Id;

        private string _AccountNumber;

        private string _MobileNumber;

        private string _ConsumerName;

        private int _NumberOfInstallments;

        private string _SDAmount;

        private System.DateTime _CreatedDate;

        private string _Source;

        private string _CANumberEncrypted;

        private System.Nullable<bool> _IsPostToSAP;

        private string _SAPPostMessage;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(long value);
        partial void OnIdChanged();
        partial void OnAccountNumberChanging(string value);
        partial void OnAccountNumberChanged();
        partial void OnMobileNumberChanging(string value);
        partial void OnMobileNumberChanged();
        partial void OnConsumerNameChanging(string value);
        partial void OnConsumerNameChanged();
        partial void OnNumberOfInstallmentsChanging(int value);
        partial void OnNumberOfInstallmentsChanged();
        partial void OnSDAmountChanging(string value);
        partial void OnSDAmountChanged();
        partial void OnCreatedDateChanging(System.DateTime value);
        partial void OnCreatedDateChanged();
        partial void OnSourceChanging(string value);
        partial void OnSourceChanged();
        partial void OnCANumberEncryptedChanging(string value);
        partial void OnCANumberEncryptedChanged();
        partial void OnIsPostToSAPChanging(System.Nullable<bool> value);
        partial void OnIsPostToSAPChanged();
        partial void OnSAPPostMessageChanging(string value);
        partial void OnSAPPostMessageChanged();
        #endregion

        public SecurityDepositInstallmentOptIn()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Id", AutoSync = AutoSync.OnInsert, DbType = "BigInt NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public long Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if ((this._Id != value))
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging();
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AccountNumber", DbType = "NVarChar(50) NOT NULL", CanBeNull = false)]
        public string AccountNumber
        {
            get
            {
                return this._AccountNumber;
            }
            set
            {
                if ((this._AccountNumber != value))
                {
                    this.OnAccountNumberChanging(value);
                    this.SendPropertyChanging();
                    this._AccountNumber = value;
                    this.SendPropertyChanged("AccountNumber");
                    this.OnAccountNumberChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MobileNumber", DbType = "NVarChar(50) NOT NULL", CanBeNull = false)]
        public string MobileNumber
        {
            get
            {
                return this._MobileNumber;
            }
            set
            {
                if ((this._MobileNumber != value))
                {
                    this.OnMobileNumberChanging(value);
                    this.SendPropertyChanging();
                    this._MobileNumber = value;
                    this.SendPropertyChanged("MobileNumber");
                    this.OnMobileNumberChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ConsumerName", DbType = "NVarChar(80) NOT NULL", CanBeNull = false)]
        public string ConsumerName
        {
            get
            {
                return this._ConsumerName;
            }
            set
            {
                if ((this._ConsumerName != value))
                {
                    this.OnConsumerNameChanging(value);
                    this.SendPropertyChanging();
                    this._ConsumerName = value;
                    this.SendPropertyChanged("ConsumerName");
                    this.OnConsumerNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NumberOfInstallments", DbType = "Int NOT NULL")]
        public int NumberOfInstallments
        {
            get
            {
                return this._NumberOfInstallments;
            }
            set
            {
                if ((this._NumberOfInstallments != value))
                {
                    this.OnNumberOfInstallmentsChanging(value);
                    this.SendPropertyChanging();
                    this._NumberOfInstallments = value;
                    this.SendPropertyChanged("NumberOfInstallments");
                    this.OnNumberOfInstallmentsChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SDAmount", DbType = "NVarChar(50) NOT NULL", CanBeNull = false)]
        public string SDAmount
        {
            get
            {
                return this._SDAmount;
            }
            set
            {
                if ((this._SDAmount != value))
                {
                    this.OnSDAmountChanging(value);
                    this.SendPropertyChanging();
                    this._SDAmount = value;
                    this.SendPropertyChanged("SDAmount");
                    this.OnSDAmountChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CreatedDate", DbType = "DateTime NOT NULL")]
        public System.DateTime CreatedDate
        {
            get
            {
                return this._CreatedDate;
            }
            set
            {
                if ((this._CreatedDate != value))
                {
                    this.OnCreatedDateChanging(value);
                    this.SendPropertyChanging();
                    this._CreatedDate = value;
                    this.SendPropertyChanged("CreatedDate");
                    this.OnCreatedDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Source", DbType = "NVarChar(50)")]
        public string Source
        {
            get
            {
                return this._Source;
            }
            set
            {
                if ((this._Source != value))
                {
                    this.OnSourceChanging(value);
                    this.SendPropertyChanging();
                    this._Source = value;
                    this.SendPropertyChanged("Source");
                    this.OnSourceChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CANumberEncrypted", DbType = "NVarChar(MAX)")]
        public string CANumberEncrypted
        {
            get
            {
                return this._CANumberEncrypted;
            }
            set
            {
                if ((this._CANumberEncrypted != value))
                {
                    this.OnCANumberEncryptedChanging(value);
                    this.SendPropertyChanging();
                    this._CANumberEncrypted = value;
                    this.SendPropertyChanged("CANumberEncrypted");
                    this.OnCANumberEncryptedChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsPostToSAP", DbType = "Bit")]
        public System.Nullable<bool> IsPostToSAP
        {
            get
            {
                return this._IsPostToSAP;
            }
            set
            {
                if ((this._IsPostToSAP != value))
                {
                    this.OnIsPostToSAPChanging(value);
                    this.SendPropertyChanging();
                    this._IsPostToSAP = value;
                    this.SendPropertyChanged("IsPostToSAP");
                    this.OnIsPostToSAPChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SAPPostMessage", DbType = "NVarChar(1000)")]
        public string SAPPostMessage
        {
            get
            {
                return this._SAPPostMessage;
            }
            set
            {
                if ((this._SAPPostMessage != value))
                {
                    this.OnSAPPostMessageChanging(value);
                    this.SendPropertyChanging();
                    this._SAPPostMessage = value;
                    this.SendPropertyChanged("SAPPostMessage");
                    this.OnSAPPostMessageChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.GreenPowerOptIn")]
    public partial class GreenPowerOptIn : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private long _Id;

        private string _AccountNumber;

        private string _MobileNumber;

        private string _EmailId;

        private System.DateTime _CreatedDate;

        private string _TwitterId;

        private string _FacebookId;

        private bool _OptInFlagCurrentOrNextBilling;

        private System.Nullable<bool> _IPledge;

        private System.Nullable<bool> _IsPicCaptured;

        private System.Data.Linq.Binary _ImageDate;

        private string _ImageName;

        private string _ImageContentType;

        private string _ImageLink;

        private string _OptInBillingFrom;

        private string _PercentageOptIn;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(long value);
        partial void OnIdChanged();
        partial void OnAccountNumberChanging(string value);
        partial void OnAccountNumberChanged();
        partial void OnMobileNumberChanging(string value);
        partial void OnMobileNumberChanged();
        partial void OnEmailIdChanging(string value);
        partial void OnEmailIdChanged();
        partial void OnCreatedDateChanging(System.DateTime value);
        partial void OnCreatedDateChanged();
        partial void OnTwitterIdChanging(string value);
        partial void OnTwitterIdChanged();
        partial void OnFacebookIdChanging(string value);
        partial void OnFacebookIdChanged();
        partial void OnOptInFlagCurrentOrNextBillingChanging(bool value);
        partial void OnOptInFlagCurrentOrNextBillingChanged();
        partial void OnIPledgeChanging(System.Nullable<bool> value);
        partial void OnIPledgeChanged();
        partial void OnIsPicCapturedChanging(System.Nullable<bool> value);
        partial void OnIsPicCapturedChanged();
        partial void OnImageDateChanging(System.Data.Linq.Binary value);
        partial void OnImageDateChanged();
        partial void OnImageNameChanging(string value);
        partial void OnImageNameChanged();
        partial void OnImageContentTypeChanging(string value);
        partial void OnImageContentTypeChanged();
        partial void OnImageLinkChanging(string value);
        partial void OnImageLinkChanged();
        partial void OnOptInBillingFromChanging(string value);
        partial void OnOptInBillingFromChanged();
        partial void OnPercentageOptInChanging(string value);
        partial void OnPercentageOptInChanged();
        #endregion

        public GreenPowerOptIn()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Id", AutoSync = AutoSync.OnInsert, DbType = "BigInt NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public long Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if ((this._Id != value))
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging();
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AccountNumber", DbType = "NVarChar(50) NOT NULL", CanBeNull = false)]
        public string AccountNumber
        {
            get
            {
                return this._AccountNumber;
            }
            set
            {
                if ((this._AccountNumber != value))
                {
                    this.OnAccountNumberChanging(value);
                    this.SendPropertyChanging();
                    this._AccountNumber = value;
                    this.SendPropertyChanged("AccountNumber");
                    this.OnAccountNumberChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MobileNumber", DbType = "NVarChar(50) NOT NULL", CanBeNull = false)]
        public string MobileNumber
        {
            get
            {
                return this._MobileNumber;
            }
            set
            {
                if ((this._MobileNumber != value))
                {
                    this.OnMobileNumberChanging(value);
                    this.SendPropertyChanging();
                    this._MobileNumber = value;
                    this.SendPropertyChanged("MobileNumber");
                    this.OnMobileNumberChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EmailId", DbType = "NVarChar(50)")]
        public string EmailId
        {
            get
            {
                return this._EmailId;
            }
            set
            {
                if ((this._EmailId != value))
                {
                    this.OnEmailIdChanging(value);
                    this.SendPropertyChanging();
                    this._EmailId = value;
                    this.SendPropertyChanged("EmailId");
                    this.OnEmailIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CreatedDate", DbType = "DateTime NOT NULL")]
        public System.DateTime CreatedDate
        {
            get
            {
                return this._CreatedDate;
            }
            set
            {
                if ((this._CreatedDate != value))
                {
                    this.OnCreatedDateChanging(value);
                    this.SendPropertyChanging();
                    this._CreatedDate = value;
                    this.SendPropertyChanged("CreatedDate");
                    this.OnCreatedDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TwitterId", DbType = "NVarChar(500)")]
        public string TwitterId
        {
            get
            {
                return this._TwitterId;
            }
            set
            {
                if ((this._TwitterId != value))
                {
                    this.OnTwitterIdChanging(value);
                    this.SendPropertyChanging();
                    this._TwitterId = value;
                    this.SendPropertyChanged("TwitterId");
                    this.OnTwitterIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_FacebookId", DbType = "NVarChar(500)")]
        public string FacebookId
        {
            get
            {
                return this._FacebookId;
            }
            set
            {
                if ((this._FacebookId != value))
                {
                    this.OnFacebookIdChanging(value);
                    this.SendPropertyChanging();
                    this._FacebookId = value;
                    this.SendPropertyChanged("FacebookId");
                    this.OnFacebookIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_OptInFlagCurrentOrNextBilling", DbType = "Bit NOT NULL")]
        public bool OptInFlagCurrentOrNextBilling
        {
            get
            {
                return this._OptInFlagCurrentOrNextBilling;
            }
            set
            {
                if ((this._OptInFlagCurrentOrNextBilling != value))
                {
                    this.OnOptInFlagCurrentOrNextBillingChanging(value);
                    this.SendPropertyChanging();
                    this._OptInFlagCurrentOrNextBilling = value;
                    this.SendPropertyChanged("OptInFlagCurrentOrNextBilling");
                    this.OnOptInFlagCurrentOrNextBillingChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IPledge", DbType = "Bit")]
        public System.Nullable<bool> IPledge
        {
            get
            {
                return this._IPledge;
            }
            set
            {
                if ((this._IPledge != value))
                {
                    this.OnIPledgeChanging(value);
                    this.SendPropertyChanging();
                    this._IPledge = value;
                    this.SendPropertyChanged("IPledge");
                    this.OnIPledgeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsPicCaptured", DbType = "Bit")]
        public System.Nullable<bool> IsPicCaptured
        {
            get
            {
                return this._IsPicCaptured;
            }
            set
            {
                if ((this._IsPicCaptured != value))
                {
                    this.OnIsPicCapturedChanging(value);
                    this.SendPropertyChanging();
                    this._IsPicCaptured = value;
                    this.SendPropertyChanged("IsPicCaptured");
                    this.OnIsPicCapturedChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ImageDate", DbType = "VarBinary(MAX)", UpdateCheck = UpdateCheck.Never)]
        public System.Data.Linq.Binary ImageDate
        {
            get
            {
                return this._ImageDate;
            }
            set
            {
                if ((this._ImageDate != value))
                {
                    this.OnImageDateChanging(value);
                    this.SendPropertyChanging();
                    this._ImageDate = value;
                    this.SendPropertyChanged("ImageDate");
                    this.OnImageDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ImageName", DbType = "NVarChar(500)")]
        public string ImageName
        {
            get
            {
                return this._ImageName;
            }
            set
            {
                if ((this._ImageName != value))
                {
                    this.OnImageNameChanging(value);
                    this.SendPropertyChanging();
                    this._ImageName = value;
                    this.SendPropertyChanged("ImageName");
                    this.OnImageNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ImageContentType", DbType = "NVarChar(50)")]
        public string ImageContentType
        {
            get
            {
                return this._ImageContentType;
            }
            set
            {
                if ((this._ImageContentType != value))
                {
                    this.OnImageContentTypeChanging(value);
                    this.SendPropertyChanging();
                    this._ImageContentType = value;
                    this.SendPropertyChanged("ImageContentType");
                    this.OnImageContentTypeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ImageLink", DbType = "NVarChar(500)")]
        public string ImageLink
        {
            get
            {
                return this._ImageLink;
            }
            set
            {
                if ((this._ImageLink != value))
                {
                    this.OnImageLinkChanging(value);
                    this.SendPropertyChanging();
                    this._ImageLink = value;
                    this.SendPropertyChanged("ImageLink");
                    this.OnImageLinkChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_OptInBillingFrom", DbType = "NVarChar(50)")]
        public string OptInBillingFrom
        {
            get
            {
                return this._OptInBillingFrom;
            }
            set
            {
                if ((this._OptInBillingFrom != value))
                {
                    this.OnOptInBillingFromChanging(value);
                    this.SendPropertyChanging();
                    this._OptInBillingFrom = value;
                    this.SendPropertyChanged("OptInBillingFrom");
                    this.OnOptInBillingFromChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PercentageOptIn", DbType = "NVarChar(50)")]
        public string PercentageOptIn
        {
            get
            {
                return this._PercentageOptIn;
            }
            set
            {
                if ((this._PercentageOptIn != value))
                {
                    this.OnPercentageOptInChanging(value);
                    this.SendPropertyChanging();
                    this._PercentageOptIn = value;
                    this.SendPropertyChanged("PercentageOptIn");
                    this.OnPercentageOptInChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.NEWCON_MST_CONNECTION_TYPE")]
    public partial class NEWCON_MST_CONNECTION_TYPE
    {

        private int _CONNECTION_TYPE;

        private string _CONNECTION_TYPE_DESC;

        public NEWCON_MST_CONNECTION_TYPE()
        {
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CONNECTION_TYPE", DbType = "Int NOT NULL")]
        public int CONNECTION_TYPE
        {
            get
            {
                return this._CONNECTION_TYPE;
            }
            set
            {
                if ((this._CONNECTION_TYPE != value))
                {
                    this._CONNECTION_TYPE = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CONNECTION_TYPE_DESC", DbType = "NVarChar(200) NOT NULL", CanBeNull = false)]
        public string CONNECTION_TYPE_DESC
        {
            get
            {
                return this._CONNECTION_TYPE_DESC;
            }
            set
            {
                if ((this._CONNECTION_TYPE_DESC != value))
                {
                    this._CONNECTION_TYPE_DESC = value;
                }
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.NEWCON_MST_APPLICANT_TITLE")]
    public partial class NEWCON_MST_APPLICANT_TITLE
    {

        private int _ID;

        private string _APPLICANT_TITLE;

        private string _APPLICANT_TITLE_DESC;

        public NEWCON_MST_APPLICANT_TITLE()
        {
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", AutoSync = AutoSync.Always, DbType = "Int NOT NULL IDENTITY", IsDbGenerated = true)]
        public int ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ((this._ID != value))
                {
                    this._ID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_APPLICANT_TITLE", DbType = "NVarChar(5) NOT NULL", CanBeNull = false)]
        public string APPLICANT_TITLE
        {
            get
            {
                return this._APPLICANT_TITLE;
            }
            set
            {
                if ((this._APPLICANT_TITLE != value))
                {
                    this._APPLICANT_TITLE = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_APPLICANT_TITLE_DESC", DbType = "NVarChar(400)")]
        public string APPLICANT_TITLE_DESC
        {
            get
            {
                return this._APPLICANT_TITLE_DESC;
            }
            set
            {
                if ((this._APPLICANT_TITLE_DESC != value))
                {
                    this._APPLICANT_TITLE_DESC = value;
                }
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.NEWCON_MST_BILL_LANGUAGE")]
    public partial class NEWCON_MST_BILL_LANGUAGE
    {

        private string _ID;

        private string _DESCRIPTION;

        public NEWCON_MST_BILL_LANGUAGE()
        {
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", DbType = "NVarChar(5)")]
        public string ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ((this._ID != value))
                {
                    this._ID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DESCRIPTION", DbType = "NVarChar(100)")]
        public string DESCRIPTION
        {
            get
            {
                return this._DESCRIPTION;
            }
            set
            {
                if ((this._DESCRIPTION != value))
                {
                    this._DESCRIPTION = value;
                }
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.NEWCON_MST_METERLOAD_TYPE")]
    public partial class NEWCON_MST_METERLOAD_TYPE
    {

        private string _ZLTYP;

        private string _APPLIED_TARRIF;

        private string _PURPOSE_CONNECTION;

        private string _ZUNIT_KW;

        private string _ZUNIT_HP;

        private string _KWMANDATORY;

        private string _HPMANDATORY;

        private string _DESCRIPTION;

        public NEWCON_MST_METERLOAD_TYPE()
        {
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ZLTYP", DbType = "NVarChar(5)")]
        public string ZLTYP
        {
            get
            {
                return this._ZLTYP;
            }
            set
            {
                if ((this._ZLTYP != value))
                {
                    this._ZLTYP = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_APPLIED_TARRIF", DbType = "NVarChar(10)")]
        public string APPLIED_TARRIF
        {
            get
            {
                return this._APPLIED_TARRIF;
            }
            set
            {
                if ((this._APPLIED_TARRIF != value))
                {
                    this._APPLIED_TARRIF = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PURPOSE_CONNECTION", DbType = "NVarChar(10)")]
        public string PURPOSE_CONNECTION
        {
            get
            {
                return this._PURPOSE_CONNECTION;
            }
            set
            {
                if ((this._PURPOSE_CONNECTION != value))
                {
                    this._PURPOSE_CONNECTION = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ZUNIT_KW", DbType = "NVarChar(4)")]
        public string ZUNIT_KW
        {
            get
            {
                return this._ZUNIT_KW;
            }
            set
            {
                if ((this._ZUNIT_KW != value))
                {
                    this._ZUNIT_KW = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ZUNIT_HP", DbType = "NVarChar(5)")]
        public string ZUNIT_HP
        {
            get
            {
                return this._ZUNIT_HP;
            }
            set
            {
                if ((this._ZUNIT_HP != value))
                {
                    this._ZUNIT_HP = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_KWMANDATORY", DbType = "NVarChar(1)")]
        public string KWMANDATORY
        {
            get
            {
                return this._KWMANDATORY;
            }
            set
            {
                if ((this._KWMANDATORY != value))
                {
                    this._KWMANDATORY = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_HPMANDATORY", DbType = "NVarChar(4000)")]
        public string HPMANDATORY
        {
            get
            {
                return this._HPMANDATORY;
            }
            set
            {
                if ((this._HPMANDATORY != value))
                {
                    this._HPMANDATORY = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DESCRIPTION", DbType = "NVarChar(100)")]
        public string DESCRIPTION
        {
            get
            {
                return this._DESCRIPTION;
            }
            set
            {
                if ((this._DESCRIPTION != value))
                {
                    this._DESCRIPTION = value;
                }
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.CGRFComplaintsCounter")]
    public partial class CGRFComplaintsCounter : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _Id;

        private int _CGRFComplaintsCountValue;

        private string _FinancialYear;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnCGRFComplaintsCountValueChanging(int value);
        partial void OnCGRFComplaintsCountValueChanged();
        partial void OnFinancialYearChanging(string value);
        partial void OnFinancialYearChanged();
        #endregion

        public CGRFComplaintsCounter()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Id", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if ((this._Id != value))
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging();
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CGRFComplaintsCountValue", DbType = "Int NOT NULL")]
        public int CGRFComplaintsCountValue
        {
            get
            {
                return this._CGRFComplaintsCountValue;
            }
            set
            {
                if ((this._CGRFComplaintsCountValue != value))
                {
                    this.OnCGRFComplaintsCountValueChanging(value);
                    this.SendPropertyChanging();
                    this._CGRFComplaintsCountValue = value;
                    this.SendPropertyChanged("CGRFComplaintsCountValue");
                    this.OnCGRFComplaintsCountValueChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_FinancialYear", DbType = "NVarChar(20)")]
        public string FinancialYear
        {
            get
            {
                return this._FinancialYear;
            }
            set
            {
                if ((this._FinancialYear != value))
                {
                    this.OnFinancialYearChanging(value);
                    this.SendPropertyChanging();
                    this._FinancialYear = value;
                    this.SendPropertyChanged("FinancialYear");
                    this.OnFinancialYearChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.CityPayment")]
    public partial class CityPayment : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private long _Id;

        private string _TxnRefNo;

        private string _OrderNo;

        private string _NPCITxnId;

        private string _TimeStamp;

        private string _TranAuthDate;

        private string _StatusCode;

        private string _StatusDesc;

        private string _RespCode;

        private string _SettlementAmount;

        private string _SettlementCurrency;

        private System.Nullable<System.DateTime> _Created_Date;

        private string _Response_Msg;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(long value);
        partial void OnIdChanged();
        partial void OnTxnRefNoChanging(string value);
        partial void OnTxnRefNoChanged();
        partial void OnOrderNoChanging(string value);
        partial void OnOrderNoChanged();
        partial void OnNPCITxnIdChanging(string value);
        partial void OnNPCITxnIdChanged();
        partial void OnTimeStampChanging(string value);
        partial void OnTimeStampChanged();
        partial void OnTranAuthDateChanging(string value);
        partial void OnTranAuthDateChanged();
        partial void OnStatusCodeChanging(string value);
        partial void OnStatusCodeChanged();
        partial void OnStatusDescChanging(string value);
        partial void OnStatusDescChanged();
        partial void OnRespCodeChanging(string value);
        partial void OnRespCodeChanged();
        partial void OnSettlementAmountChanging(string value);
        partial void OnSettlementAmountChanged();
        partial void OnSettlementCurrencyChanging(string value);
        partial void OnSettlementCurrencyChanged();
        partial void OnCreated_DateChanging(System.Nullable<System.DateTime> value);
        partial void OnCreated_DateChanged();
        partial void OnResponse_MsgChanging(string value);
        partial void OnResponse_MsgChanged();
        #endregion

        public CityPayment()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Id", AutoSync = AutoSync.OnInsert, DbType = "BigInt NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public long Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if ((this._Id != value))
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging();
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TxnRefNo", DbType = "NVarChar(50)")]
        public string TxnRefNo
        {
            get
            {
                return this._TxnRefNo;
            }
            set
            {
                if ((this._TxnRefNo != value))
                {
                    this.OnTxnRefNoChanging(value);
                    this.SendPropertyChanging();
                    this._TxnRefNo = value;
                    this.SendPropertyChanged("TxnRefNo");
                    this.OnTxnRefNoChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_OrderNo", DbType = "NVarChar(50)")]
        public string OrderNo
        {
            get
            {
                return this._OrderNo;
            }
            set
            {
                if ((this._OrderNo != value))
                {
                    this.OnOrderNoChanging(value);
                    this.SendPropertyChanging();
                    this._OrderNo = value;
                    this.SendPropertyChanged("OrderNo");
                    this.OnOrderNoChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NPCITxnId", DbType = "NVarChar(50)")]
        public string NPCITxnId
        {
            get
            {
                return this._NPCITxnId;
            }
            set
            {
                if ((this._NPCITxnId != value))
                {
                    this.OnNPCITxnIdChanging(value);
                    this.SendPropertyChanging();
                    this._NPCITxnId = value;
                    this.SendPropertyChanged("NPCITxnId");
                    this.OnNPCITxnIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TimeStamp", DbType = "NVarChar(50)")]
        public string TimeStamp
        {
            get
            {
                return this._TimeStamp;
            }
            set
            {
                if ((this._TimeStamp != value))
                {
                    this.OnTimeStampChanging(value);
                    this.SendPropertyChanging();
                    this._TimeStamp = value;
                    this.SendPropertyChanged("TimeStamp");
                    this.OnTimeStampChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TranAuthDate", DbType = "NVarChar(50)")]
        public string TranAuthDate
        {
            get
            {
                return this._TranAuthDate;
            }
            set
            {
                if ((this._TranAuthDate != value))
                {
                    this.OnTranAuthDateChanging(value);
                    this.SendPropertyChanging();
                    this._TranAuthDate = value;
                    this.SendPropertyChanged("TranAuthDate");
                    this.OnTranAuthDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_StatusCode", DbType = "NVarChar(50)")]
        public string StatusCode
        {
            get
            {
                return this._StatusCode;
            }
            set
            {
                if ((this._StatusCode != value))
                {
                    this.OnStatusCodeChanging(value);
                    this.SendPropertyChanging();
                    this._StatusCode = value;
                    this.SendPropertyChanged("StatusCode");
                    this.OnStatusCodeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_StatusDesc", DbType = "NVarChar(50)")]
        public string StatusDesc
        {
            get
            {
                return this._StatusDesc;
            }
            set
            {
                if ((this._StatusDesc != value))
                {
                    this.OnStatusDescChanging(value);
                    this.SendPropertyChanging();
                    this._StatusDesc = value;
                    this.SendPropertyChanged("StatusDesc");
                    this.OnStatusDescChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_RespCode", DbType = "NVarChar(50)")]
        public string RespCode
        {
            get
            {
                return this._RespCode;
            }
            set
            {
                if ((this._RespCode != value))
                {
                    this.OnRespCodeChanging(value);
                    this.SendPropertyChanging();
                    this._RespCode = value;
                    this.SendPropertyChanged("RespCode");
                    this.OnRespCodeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SettlementAmount", DbType = "NVarChar(50)")]
        public string SettlementAmount
        {
            get
            {
                return this._SettlementAmount;
            }
            set
            {
                if ((this._SettlementAmount != value))
                {
                    this.OnSettlementAmountChanging(value);
                    this.SendPropertyChanging();
                    this._SettlementAmount = value;
                    this.SendPropertyChanged("SettlementAmount");
                    this.OnSettlementAmountChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SettlementCurrency", DbType = "NVarChar(50)")]
        public string SettlementCurrency
        {
            get
            {
                return this._SettlementCurrency;
            }
            set
            {
                if ((this._SettlementCurrency != value))
                {
                    this.OnSettlementCurrencyChanging(value);
                    this.SendPropertyChanging();
                    this._SettlementCurrency = value;
                    this.SendPropertyChanged("SettlementCurrency");
                    this.OnSettlementCurrencyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Created_Date", DbType = "DateTime")]
        public System.Nullable<System.DateTime> Created_Date
        {
            get
            {
                return this._Created_Date;
            }
            set
            {
                if ((this._Created_Date != value))
                {
                    this.OnCreated_DateChanging(value);
                    this.SendPropertyChanging();
                    this._Created_Date = value;
                    this.SendPropertyChanged("Created_Date");
                    this.OnCreated_DateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Response_Msg", DbType = "NVarChar(MAX)")]
        public string Response_Msg
        {
            get
            {
                return this._Response_Msg;
            }
            set
            {
                if ((this._Response_Msg != value))
                {
                    this.OnResponse_MsgChanging(value);
                    this.SendPropertyChanging();
                    this._Response_Msg = value;
                    this.SendPropertyChanged("Response_Msg");
                    this.OnResponse_MsgChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.NEWCON_MST_VOLTAGE_LEVEL")]
    public partial class NEWCON_MST_VOLTAGE_LEVEL
    {

        private string _VOLTAGE_LEVEL;

        private string _DESCRIPTION;

        private string _CONNECTION_TYPE;

        private string _OA;

        private string _MeterType;

        public NEWCON_MST_VOLTAGE_LEVEL()
        {
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_VOLTAGE_LEVEL", DbType = "NVarChar(2)")]
        public string VOLTAGE_LEVEL
        {
            get
            {
                return this._VOLTAGE_LEVEL;
            }
            set
            {
                if ((this._VOLTAGE_LEVEL != value))
                {
                    this._VOLTAGE_LEVEL = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DESCRIPTION", DbType = "NVarChar(10)")]
        public string DESCRIPTION
        {
            get
            {
                return this._DESCRIPTION;
            }
            set
            {
                if ((this._DESCRIPTION != value))
                {
                    this._DESCRIPTION = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CONNECTION_TYPE", DbType = "NVarChar(500)")]
        public string CONNECTION_TYPE
        {
            get
            {
                return this._CONNECTION_TYPE;
            }
            set
            {
                if ((this._CONNECTION_TYPE != value))
                {
                    this._CONNECTION_TYPE = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_OA", DbType = "NVarChar(2)")]
        public string OA
        {
            get
            {
                return this._OA;
            }
            set
            {
                if ((this._OA != value))
                {
                    this._OA = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MeterType", DbType = "NVarChar(500)")]
        public string MeterType
        {
            get
            {
                return this._MeterType;
            }
            set
            {
                if ((this._MeterType != value))
                {
                    this._MeterType = value;
                }
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.NEWCON_MST_PREMISE_TYPEs")]
    public partial class NEWCON_MST_PREMISE_TYPE
    {

        private string _PREMISE_TYPE;

        private string _TEXT;

        private string _ENABLE_SUB_APP1;

        private string _ENABLE_FLAG_SUB_APP2;

        private string _ENABLE_FLAG_SUB_APP3;

        private string _ENABLE_FLAG_SUB_APP4;

        private string _ENABLE_FLAG_SUB_APP5;

        private string _ENABLE_FLAG_SUB_APP6;

        private string _CHN_SEQ;

        public NEWCON_MST_PREMISE_TYPE()
        {
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PREMISE_TYPE", DbType = "NVarChar(500)")]
        public string PREMISE_TYPE
        {
            get
            {
                return this._PREMISE_TYPE;
            }
            set
            {
                if ((this._PREMISE_TYPE != value))
                {
                    this._PREMISE_TYPE = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TEXT", DbType = "NVarChar(500)")]
        public string TEXT
        {
            get
            {
                return this._TEXT;
            }
            set
            {
                if ((this._TEXT != value))
                {
                    this._TEXT = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ENABLE_SUB_APP1", DbType = "NVarChar(10)")]
        public string ENABLE_SUB_APP1
        {
            get
            {
                return this._ENABLE_SUB_APP1;
            }
            set
            {
                if ((this._ENABLE_SUB_APP1 != value))
                {
                    this._ENABLE_SUB_APP1 = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ENABLE_FLAG_SUB_APP2", DbType = "NVarChar(4000)")]
        public string ENABLE_FLAG_SUB_APP2
        {
            get
            {
                return this._ENABLE_FLAG_SUB_APP2;
            }
            set
            {
                if ((this._ENABLE_FLAG_SUB_APP2 != value))
                {
                    this._ENABLE_FLAG_SUB_APP2 = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ENABLE_FLAG_SUB_APP3", DbType = "NVarChar(4000)")]
        public string ENABLE_FLAG_SUB_APP3
        {
            get
            {
                return this._ENABLE_FLAG_SUB_APP3;
            }
            set
            {
                if ((this._ENABLE_FLAG_SUB_APP3 != value))
                {
                    this._ENABLE_FLAG_SUB_APP3 = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ENABLE_FLAG_SUB_APP4", DbType = "NVarChar(4000)")]
        public string ENABLE_FLAG_SUB_APP4
        {
            get
            {
                return this._ENABLE_FLAG_SUB_APP4;
            }
            set
            {
                if ((this._ENABLE_FLAG_SUB_APP4 != value))
                {
                    this._ENABLE_FLAG_SUB_APP4 = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ENABLE_FLAG_SUB_APP5", DbType = "NVarChar(4000)")]
        public string ENABLE_FLAG_SUB_APP5
        {
            get
            {
                return this._ENABLE_FLAG_SUB_APP5;
            }
            set
            {
                if ((this._ENABLE_FLAG_SUB_APP5 != value))
                {
                    this._ENABLE_FLAG_SUB_APP5 = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ENABLE_FLAG_SUB_APP6", DbType = "NVarChar(4000)")]
        public string ENABLE_FLAG_SUB_APP6
        {
            get
            {
                return this._ENABLE_FLAG_SUB_APP6;
            }
            set
            {
                if ((this._ENABLE_FLAG_SUB_APP6 != value))
                {
                    this._ENABLE_FLAG_SUB_APP6 = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CHN_SEQ", DbType = "NVarChar(4000)")]
        public string CHN_SEQ
        {
            get
            {
                return this._CHN_SEQ;
            }
            set
            {
                if ((this._CHN_SEQ != value))
                {
                    this._CHN_SEQ = value;
                }
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.NEW_CON_APPLICATION_DOCUMENT_DETAILS")]
    public partial class NEW_CON_APPLICATION_DOCUMENT_DETAIL : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private System.Guid _Id;

        private string _RegistrationSerialNumber;

        private string _DocumentType;

        private string _DocumentTypeCode;

        private string _DocumentChecklistSerialNumber;

        private string _DocumentName;

        private string _DocumentDescription;

        private string _DocumentNumber;

        private System.Nullable<System.DateTime> _CreatedDate;

        private string _CreatedBy;

        private System.Nullable<bool> _IsSentToSAP;

        private System.Nullable<System.DateTime> _SAPSentDate;

        private System.Data.Linq.Binary _DocumentData;

        private string _DocumentDataContenttype;

        private string _SAPReturnMsg;

        private System.Nullable<System.DateTime> _ModifiedDate;

        private string _ModifiedBy;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(System.Guid value);
        partial void OnIdChanged();
        partial void OnRegistrationSerialNumberChanging(string value);
        partial void OnRegistrationSerialNumberChanged();
        partial void OnDocumentTypeChanging(string value);
        partial void OnDocumentTypeChanged();
        partial void OnDocumentTypeCodeChanging(string value);
        partial void OnDocumentTypeCodeChanged();
        partial void OnDocumentChecklistSerialNumberChanging(string value);
        partial void OnDocumentChecklistSerialNumberChanged();
        partial void OnDocumentNameChanging(string value);
        partial void OnDocumentNameChanged();
        partial void OnDocumentDescriptionChanging(string value);
        partial void OnDocumentDescriptionChanged();
        partial void OnDocumentNumberChanging(string value);
        partial void OnDocumentNumberChanged();
        partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
        partial void OnCreatedDateChanged();
        partial void OnCreatedByChanging(string value);
        partial void OnCreatedByChanged();
        partial void OnIsSentToSAPChanging(System.Nullable<bool> value);
        partial void OnIsSentToSAPChanged();
        partial void OnSAPSentDateChanging(System.Nullable<System.DateTime> value);
        partial void OnSAPSentDateChanged();
        partial void OnDocumentDataChanging(System.Data.Linq.Binary value);
        partial void OnDocumentDataChanged();
        partial void OnDocumentDataContenttypeChanging(string value);
        partial void OnDocumentDataContenttypeChanged();
        partial void OnSAPReturnMsgChanging(string value);
        partial void OnSAPReturnMsgChanged();
        partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
        partial void OnModifiedDateChanged();
        partial void OnModifiedByChanging(string value);
        partial void OnModifiedByChanged();
        #endregion

        public NEW_CON_APPLICATION_DOCUMENT_DETAIL()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Id", DbType = "UniqueIdentifier NOT NULL", IsPrimaryKey = true)]
        public System.Guid Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if ((this._Id != value))
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging();
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_RegistrationSerialNumber", DbType = "NVarChar(50)")]
        public string RegistrationSerialNumber
        {
            get
            {
                return this._RegistrationSerialNumber;
            }
            set
            {
                if ((this._RegistrationSerialNumber != value))
                {
                    this.OnRegistrationSerialNumberChanging(value);
                    this.SendPropertyChanging();
                    this._RegistrationSerialNumber = value;
                    this.SendPropertyChanged("RegistrationSerialNumber");
                    this.OnRegistrationSerialNumberChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DocumentType", DbType = "NVarChar(50)")]
        public string DocumentType
        {
            get
            {
                return this._DocumentType;
            }
            set
            {
                if ((this._DocumentType != value))
                {
                    this.OnDocumentTypeChanging(value);
                    this.SendPropertyChanging();
                    this._DocumentType = value;
                    this.SendPropertyChanged("DocumentType");
                    this.OnDocumentTypeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DocumentTypeCode", DbType = "NVarChar(50)")]
        public string DocumentTypeCode
        {
            get
            {
                return this._DocumentTypeCode;
            }
            set
            {
                if ((this._DocumentTypeCode != value))
                {
                    this.OnDocumentTypeCodeChanging(value);
                    this.SendPropertyChanging();
                    this._DocumentTypeCode = value;
                    this.SendPropertyChanged("DocumentTypeCode");
                    this.OnDocumentTypeCodeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DocumentChecklistSerialNumber", DbType = "NVarChar(50)")]
        public string DocumentChecklistSerialNumber
        {
            get
            {
                return this._DocumentChecklistSerialNumber;
            }
            set
            {
                if ((this._DocumentChecklistSerialNumber != value))
                {
                    this.OnDocumentChecklistSerialNumberChanging(value);
                    this.SendPropertyChanging();
                    this._DocumentChecklistSerialNumber = value;
                    this.SendPropertyChanged("DocumentChecklistSerialNumber");
                    this.OnDocumentChecklistSerialNumberChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DocumentName", DbType = "NVarChar(200)")]
        public string DocumentName
        {
            get
            {
                return this._DocumentName;
            }
            set
            {
                if ((this._DocumentName != value))
                {
                    this.OnDocumentNameChanging(value);
                    this.SendPropertyChanging();
                    this._DocumentName = value;
                    this.SendPropertyChanged("DocumentName");
                    this.OnDocumentNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DocumentDescription", DbType = "NVarChar(MAX)")]
        public string DocumentDescription
        {
            get
            {
                return this._DocumentDescription;
            }
            set
            {
                if ((this._DocumentDescription != value))
                {
                    this.OnDocumentDescriptionChanging(value);
                    this.SendPropertyChanging();
                    this._DocumentDescription = value;
                    this.SendPropertyChanged("DocumentDescription");
                    this.OnDocumentDescriptionChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DocumentNumber", DbType = "NVarChar(50)")]
        public string DocumentNumber
        {
            get
            {
                return this._DocumentNumber;
            }
            set
            {
                if ((this._DocumentNumber != value))
                {
                    this.OnDocumentNumberChanging(value);
                    this.SendPropertyChanging();
                    this._DocumentNumber = value;
                    this.SendPropertyChanged("DocumentNumber");
                    this.OnDocumentNumberChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CreatedDate", DbType = "DateTime")]
        public System.Nullable<System.DateTime> CreatedDate
        {
            get
            {
                return this._CreatedDate;
            }
            set
            {
                if ((this._CreatedDate != value))
                {
                    this.OnCreatedDateChanging(value);
                    this.SendPropertyChanging();
                    this._CreatedDate = value;
                    this.SendPropertyChanged("CreatedDate");
                    this.OnCreatedDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CreatedBy", DbType = "NVarChar(50)")]
        public string CreatedBy
        {
            get
            {
                return this._CreatedBy;
            }
            set
            {
                if ((this._CreatedBy != value))
                {
                    this.OnCreatedByChanging(value);
                    this.SendPropertyChanging();
                    this._CreatedBy = value;
                    this.SendPropertyChanged("CreatedBy");
                    this.OnCreatedByChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsSentToSAP", DbType = "Bit")]
        public System.Nullable<bool> IsSentToSAP
        {
            get
            {
                return this._IsSentToSAP;
            }
            set
            {
                if ((this._IsSentToSAP != value))
                {
                    this.OnIsSentToSAPChanging(value);
                    this.SendPropertyChanging();
                    this._IsSentToSAP = value;
                    this.SendPropertyChanged("IsSentToSAP");
                    this.OnIsSentToSAPChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SAPSentDate", DbType = "DateTime")]
        public System.Nullable<System.DateTime> SAPSentDate
        {
            get
            {
                return this._SAPSentDate;
            }
            set
            {
                if ((this._SAPSentDate != value))
                {
                    this.OnSAPSentDateChanging(value);
                    this.SendPropertyChanging();
                    this._SAPSentDate = value;
                    this.SendPropertyChanged("SAPSentDate");
                    this.OnSAPSentDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DocumentData", DbType = "VarBinary(MAX)", UpdateCheck = UpdateCheck.Never)]
        public System.Data.Linq.Binary DocumentData
        {
            get
            {
                return this._DocumentData;
            }
            set
            {
                if ((this._DocumentData != value))
                {
                    this.OnDocumentDataChanging(value);
                    this.SendPropertyChanging();
                    this._DocumentData = value;
                    this.SendPropertyChanged("DocumentData");
                    this.OnDocumentDataChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DocumentDataContenttype", DbType = "NVarChar(100)")]
        public string DocumentDataContenttype
        {
            get
            {
                return this._DocumentDataContenttype;
            }
            set
            {
                if ((this._DocumentDataContenttype != value))
                {
                    this.OnDocumentDataContenttypeChanging(value);
                    this.SendPropertyChanging();
                    this._DocumentDataContenttype = value;
                    this.SendPropertyChanged("DocumentDataContenttype");
                    this.OnDocumentDataContenttypeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SAPReturnMsg", DbType = "NVarChar(MAX)")]
        public string SAPReturnMsg
        {
            get
            {
                return this._SAPReturnMsg;
            }
            set
            {
                if ((this._SAPReturnMsg != value))
                {
                    this.OnSAPReturnMsgChanging(value);
                    this.SendPropertyChanging();
                    this._SAPReturnMsg = value;
                    this.SendPropertyChanged("SAPReturnMsg");
                    this.OnSAPReturnMsgChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ModifiedDate", DbType = "DateTime")]
        public System.Nullable<System.DateTime> ModifiedDate
        {
            get
            {
                return this._ModifiedDate;
            }
            set
            {
                if ((this._ModifiedDate != value))
                {
                    this.OnModifiedDateChanging(value);
                    this.SendPropertyChanging();
                    this._ModifiedDate = value;
                    this.SendPropertyChanged("ModifiedDate");
                    this.OnModifiedDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ModifiedBy", DbType = "NVarChar(50)")]
        public string ModifiedBy
        {
            get
            {
                return this._ModifiedBy;
            }
            set
            {
                if ((this._ModifiedBy != value))
                {
                    this.OnModifiedByChanging(value);
                    this.SendPropertyChanging();
                    this._ModifiedBy = value;
                    this.SendPropertyChanged("ModifiedBy");
                    this.OnModifiedByChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.NEWCON_DOCUMENTMASTER")]
    public partial class NEWCON_DOCUMENTMASTER
    {

        private System.Nullable<System.Guid> _ID;

        private System.Nullable<int> _SRNO;

        private string _DOCTY;

        private System.Nullable<int> _DOCID;

        private string _APPLICATION_TYPE_CODE;

        private string _DESCRIPTION;

        private string _ZALSTYP;

        private string _DELETEFLAG;

        private string _FLAG_MANDATORY;

        private string _FLAG_DOCNO;

        private string _TITLE;

        private string _FLAG_INDUSTRY;

        private string _ALERT_MESSAGE;

        public NEWCON_DOCUMENTMASTER()
        {
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> ID
        {
            get
            {
                return this._ID;
            }
            set
            {
                if ((this._ID != value))
                {
                    this._ID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SRNO", DbType = "Int")]
        public System.Nullable<int> SRNO
        {
            get
            {
                return this._SRNO;
            }
            set
            {
                if ((this._SRNO != value))
                {
                    this._SRNO = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DOCTY", DbType = "NVarChar(3)")]
        public string DOCTY
        {
            get
            {
                return this._DOCTY;
            }
            set
            {
                if ((this._DOCTY != value))
                {
                    this._DOCTY = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DOCID", DbType = "Int")]
        public System.Nullable<int> DOCID
        {
            get
            {
                return this._DOCID;
            }
            set
            {
                if ((this._DOCID != value))
                {
                    this._DOCID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_APPLICATION_TYPE_CODE", DbType = "NVarChar(5)")]
        public string APPLICATION_TYPE_CODE
        {
            get
            {
                return this._APPLICATION_TYPE_CODE;
            }
            set
            {
                if ((this._APPLICATION_TYPE_CODE != value))
                {
                    this._APPLICATION_TYPE_CODE = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DESCRIPTION", DbType = "NVarChar(MAX)")]
        public string DESCRIPTION
        {
            get
            {
                return this._DESCRIPTION;
            }
            set
            {
                if ((this._DESCRIPTION != value))
                {
                    this._DESCRIPTION = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ZALSTYP", DbType = "NVarChar(2)")]
        public string ZALSTYP
        {
            get
            {
                return this._ZALSTYP;
            }
            set
            {
                if ((this._ZALSTYP != value))
                {
                    this._ZALSTYP = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DELETEFLAG", DbType = "NVarChar(1)")]
        public string DELETEFLAG
        {
            get
            {
                return this._DELETEFLAG;
            }
            set
            {
                if ((this._DELETEFLAG != value))
                {
                    this._DELETEFLAG = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_FLAG_MANDATORY", DbType = "NVarChar(2)")]
        public string FLAG_MANDATORY
        {
            get
            {
                return this._FLAG_MANDATORY;
            }
            set
            {
                if ((this._FLAG_MANDATORY != value))
                {
                    this._FLAG_MANDATORY = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_FLAG_DOCNO", DbType = "NVarChar(1)")]
        public string FLAG_DOCNO
        {
            get
            {
                return this._FLAG_DOCNO;
            }
            set
            {
                if ((this._FLAG_DOCNO != value))
                {
                    this._FLAG_DOCNO = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TITLE", DbType = "NVarChar(5) NOT NULL", CanBeNull = false)]
        public string TITLE
        {
            get
            {
                return this._TITLE;
            }
            set
            {
                if ((this._TITLE != value))
                {
                    this._TITLE = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_FLAG_INDUSTRY", DbType = "NVarChar(5)")]
        public string FLAG_INDUSTRY
        {
            get
            {
                return this._FLAG_INDUSTRY;
            }
            set
            {
                if ((this._FLAG_INDUSTRY != value))
                {
                    this._FLAG_INDUSTRY = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ALERT_MESSAGE", DbType = "NVarChar(MAX)")]
        public string ALERT_MESSAGE
        {
            get
            {
                return this._ALERT_MESSAGE;
            }
            set
            {
                if ((this._ALERT_MESSAGE != value))
                {
                    this._ALERT_MESSAGE = value;
                }
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.NEW_CON_APPLICATIONSUBTYPE")]
    public partial class NEW_CON_APPLICATIONSUBTYPE
    {

        private string _ApplicationSubtype;

        private string _ApplicationSubtypeDesc;

        private string _ApplicationType;

        public NEW_CON_APPLICATIONSUBTYPE()
        {
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ApplicationSubtype", DbType = "NVarChar(50)")]
        public string ApplicationSubtype
        {
            get
            {
                return this._ApplicationSubtype;
            }
            set
            {
                if ((this._ApplicationSubtype != value))
                {
                    this._ApplicationSubtype = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ApplicationSubtypeDesc", DbType = "NVarChar(500)")]
        public string ApplicationSubtypeDesc
        {
            get
            {
                return this._ApplicationSubtypeDesc;
            }
            set
            {
                if ((this._ApplicationSubtypeDesc != value))
                {
                    this._ApplicationSubtypeDesc = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ApplicationType", DbType = "NVarChar(500)")]
        public string ApplicationType
        {
            get
            {
                return this._ApplicationType;
            }
            set
            {
                if ((this._ApplicationType != value))
                {
                    this._ApplicationType = value;
                }
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.ComplaintPortalFeedback")]
    public partial class ComplaintPortalFeedback : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private long _Id;

        private string _ComplaintRegistrationNumber;

        private bool _IsFeedbackGiven;

        private string _FeedbackNumber;

        private string _OverallExperienceRating;

        private string _ConcernAddressedRating;

        private string _Remarks;

        private System.DateTime _CreatedDate;

        private string _CreatedBy;

        private string _Message;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(long value);
        partial void OnIdChanged();
        partial void OnComplaintRegistrationNumberChanging(string value);
        partial void OnComplaintRegistrationNumberChanged();
        partial void OnIsFeedbackGivenChanging(bool value);
        partial void OnIsFeedbackGivenChanged();
        partial void OnFeedbackNumberChanging(string value);
        partial void OnFeedbackNumberChanged();
        partial void OnOverallExperienceRatingChanging(string value);
        partial void OnOverallExperienceRatingChanged();
        partial void OnConcernAddressedRatingChanging(string value);
        partial void OnConcernAddressedRatingChanged();
        partial void OnRemarksChanging(string value);
        partial void OnRemarksChanged();
        partial void OnCreatedDateChanging(System.DateTime value);
        partial void OnCreatedDateChanged();
        partial void OnCreatedByChanging(string value);
        partial void OnCreatedByChanged();
        partial void OnMessageChanging(string value);
        partial void OnMessageChanged();
        #endregion

        public ComplaintPortalFeedback()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Id", AutoSync = AutoSync.OnInsert, DbType = "BigInt NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public long Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if ((this._Id != value))
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging();
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ComplaintRegistrationNumber", DbType = "NVarChar(50) NOT NULL", CanBeNull = false)]
        public string ComplaintRegistrationNumber
        {
            get
            {
                return this._ComplaintRegistrationNumber;
            }
            set
            {
                if ((this._ComplaintRegistrationNumber != value))
                {
                    this.OnComplaintRegistrationNumberChanging(value);
                    this.SendPropertyChanging();
                    this._ComplaintRegistrationNumber = value;
                    this.SendPropertyChanged("ComplaintRegistrationNumber");
                    this.OnComplaintRegistrationNumberChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsFeedbackGiven", DbType = "Bit NOT NULL")]
        public bool IsFeedbackGiven
        {
            get
            {
                return this._IsFeedbackGiven;
            }
            set
            {
                if ((this._IsFeedbackGiven != value))
                {
                    this.OnIsFeedbackGivenChanging(value);
                    this.SendPropertyChanging();
                    this._IsFeedbackGiven = value;
                    this.SendPropertyChanged("IsFeedbackGiven");
                    this.OnIsFeedbackGivenChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_FeedbackNumber", DbType = "NVarChar(50)")]
        public string FeedbackNumber
        {
            get
            {
                return this._FeedbackNumber;
            }
            set
            {
                if ((this._FeedbackNumber != value))
                {
                    this.OnFeedbackNumberChanging(value);
                    this.SendPropertyChanging();
                    this._FeedbackNumber = value;
                    this.SendPropertyChanged("FeedbackNumber");
                    this.OnFeedbackNumberChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_OverallExperienceRating", DbType = "NVarChar(50)")]
        public string OverallExperienceRating
        {
            get
            {
                return this._OverallExperienceRating;
            }
            set
            {
                if ((this._OverallExperienceRating != value))
                {
                    this.OnOverallExperienceRatingChanging(value);
                    this.SendPropertyChanging();
                    this._OverallExperienceRating = value;
                    this.SendPropertyChanged("OverallExperienceRating");
                    this.OnOverallExperienceRatingChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ConcernAddressedRating", DbType = "NVarChar(50)")]
        public string ConcernAddressedRating
        {
            get
            {
                return this._ConcernAddressedRating;
            }
            set
            {
                if ((this._ConcernAddressedRating != value))
                {
                    this.OnConcernAddressedRatingChanging(value);
                    this.SendPropertyChanging();
                    this._ConcernAddressedRating = value;
                    this.SendPropertyChanged("ConcernAddressedRating");
                    this.OnConcernAddressedRatingChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Remarks", DbType = "NVarChar(1000)")]
        public string Remarks
        {
            get
            {
                return this._Remarks;
            }
            set
            {
                if ((this._Remarks != value))
                {
                    this.OnRemarksChanging(value);
                    this.SendPropertyChanging();
                    this._Remarks = value;
                    this.SendPropertyChanged("Remarks");
                    this.OnRemarksChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CreatedDate", DbType = "DateTime NOT NULL")]
        public System.DateTime CreatedDate
        {
            get
            {
                return this._CreatedDate;
            }
            set
            {
                if ((this._CreatedDate != value))
                {
                    this.OnCreatedDateChanging(value);
                    this.SendPropertyChanging();
                    this._CreatedDate = value;
                    this.SendPropertyChanged("CreatedDate");
                    this.OnCreatedDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CreatedBy", DbType = "NVarChar(50) NOT NULL", CanBeNull = false)]
        public string CreatedBy
        {
            get
            {
                return this._CreatedBy;
            }
            set
            {
                if ((this._CreatedBy != value))
                {
                    this.OnCreatedByChanging(value);
                    this.SendPropertyChanging();
                    this._CreatedBy = value;
                    this.SendPropertyChanged("CreatedBy");
                    this.OnCreatedByChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Message", DbType = "NVarChar(500)")]
        public string Message
        {
            get
            {
                return this._Message;
            }
            set
            {
                if ((this._Message != value))
                {
                    this.OnMessageChanging(value);
                    this.SendPropertyChanging();
                    this._Message = value;
                    this.SendPropertyChanged("Message");
                    this.OnMessageChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.NEWCON_MST_PURPOSE_CONNECTION")]
    public partial class NEWCON_MST_PURPOSE_CONNECTION
    {

        private string _PURPOSE_OF_CONNECTION;

        private string _CONNECTION_DESCRIPTION;

        private string _APPLIED_TARIFF;

        private string _TARIFF_DESCRIPTION;

        private string _CONNECTION_TYPE;

        private string _ENABLE_FLAG_SUB_APP1;

        private string _ENABLE_FLAG_SUB_APP2;

        private string _ENABLE_FLAG_SUB_APP3;

        private string _ENABLE_FLAG_SUB_APP4;

        private string _ENABLE_FLAG_SUB_APP5;

        private string _ENABLE_FLAG_SUB_APP6;

        private string _APPLICANT_TYPE;

        private string _APPLICANT_SUB_TYPE;

        private string _IsAbove20;

        private string _PremiseType;

        public NEWCON_MST_PURPOSE_CONNECTION()
        {
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PURPOSE_OF_CONNECTION", DbType = "NVarChar(5) NOT NULL", CanBeNull = false)]
        public string PURPOSE_OF_CONNECTION
        {
            get
            {
                return this._PURPOSE_OF_CONNECTION;
            }
            set
            {
                if ((this._PURPOSE_OF_CONNECTION != value))
                {
                    this._PURPOSE_OF_CONNECTION = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CONNECTION_DESCRIPTION", DbType = "NVarChar(500)")]
        public string CONNECTION_DESCRIPTION
        {
            get
            {
                return this._CONNECTION_DESCRIPTION;
            }
            set
            {
                if ((this._CONNECTION_DESCRIPTION != value))
                {
                    this._CONNECTION_DESCRIPTION = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_APPLIED_TARIFF", DbType = "NVarChar(498)")]
        public string APPLIED_TARIFF
        {
            get
            {
                return this._APPLIED_TARIFF;
            }
            set
            {
                if ((this._APPLIED_TARIFF != value))
                {
                    this._APPLIED_TARIFF = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TARIFF_DESCRIPTION", DbType = "NVarChar(500)")]
        public string TARIFF_DESCRIPTION
        {
            get
            {
                return this._TARIFF_DESCRIPTION;
            }
            set
            {
                if ((this._TARIFF_DESCRIPTION != value))
                {
                    this._TARIFF_DESCRIPTION = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CONNECTION_TYPE", DbType = "NVarChar(500)")]
        public string CONNECTION_TYPE
        {
            get
            {
                return this._CONNECTION_TYPE;
            }
            set
            {
                if ((this._CONNECTION_TYPE != value))
                {
                    this._CONNECTION_TYPE = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ENABLE_FLAG_SUB_APP1", DbType = "NVarChar(4000)")]
        public string ENABLE_FLAG_SUB_APP1
        {
            get
            {
                return this._ENABLE_FLAG_SUB_APP1;
            }
            set
            {
                if ((this._ENABLE_FLAG_SUB_APP1 != value))
                {
                    this._ENABLE_FLAG_SUB_APP1 = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ENABLE_FLAG_SUB_APP2", DbType = "NVarChar(4000)")]
        public string ENABLE_FLAG_SUB_APP2
        {
            get
            {
                return this._ENABLE_FLAG_SUB_APP2;
            }
            set
            {
                if ((this._ENABLE_FLAG_SUB_APP2 != value))
                {
                    this._ENABLE_FLAG_SUB_APP2 = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ENABLE_FLAG_SUB_APP3", DbType = "NVarChar(4000)")]
        public string ENABLE_FLAG_SUB_APP3
        {
            get
            {
                return this._ENABLE_FLAG_SUB_APP3;
            }
            set
            {
                if ((this._ENABLE_FLAG_SUB_APP3 != value))
                {
                    this._ENABLE_FLAG_SUB_APP3 = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ENABLE_FLAG_SUB_APP4", DbType = "NVarChar(4000)")]
        public string ENABLE_FLAG_SUB_APP4
        {
            get
            {
                return this._ENABLE_FLAG_SUB_APP4;
            }
            set
            {
                if ((this._ENABLE_FLAG_SUB_APP4 != value))
                {
                    this._ENABLE_FLAG_SUB_APP4 = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ENABLE_FLAG_SUB_APP5", DbType = "NVarChar(4000)")]
        public string ENABLE_FLAG_SUB_APP5
        {
            get
            {
                return this._ENABLE_FLAG_SUB_APP5;
            }
            set
            {
                if ((this._ENABLE_FLAG_SUB_APP5 != value))
                {
                    this._ENABLE_FLAG_SUB_APP5 = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ENABLE_FLAG_SUB_APP6", DbType = "NVarChar(4000)")]
        public string ENABLE_FLAG_SUB_APP6
        {
            get
            {
                return this._ENABLE_FLAG_SUB_APP6;
            }
            set
            {
                if ((this._ENABLE_FLAG_SUB_APP6 != value))
                {
                    this._ENABLE_FLAG_SUB_APP6 = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_APPLICANT_TYPE", DbType = "NVarChar(500)")]
        public string APPLICANT_TYPE
        {
            get
            {
                return this._APPLICANT_TYPE;
            }
            set
            {
                if ((this._APPLICANT_TYPE != value))
                {
                    this._APPLICANT_TYPE = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_APPLICANT_SUB_TYPE", DbType = "NVarChar(500)")]
        public string APPLICANT_SUB_TYPE
        {
            get
            {
                return this._APPLICANT_SUB_TYPE;
            }
            set
            {
                if ((this._APPLICANT_SUB_TYPE != value))
                {
                    this._APPLICANT_SUB_TYPE = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsAbove20", DbType = "NVarChar(30)")]
        public string IsAbove20
        {
            get
            {
                return this._IsAbove20;
            }
            set
            {
                if ((this._IsAbove20 != value))
                {
                    this._IsAbove20 = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PremiseType", DbType = "NVarChar(4000)")]
        public string PremiseType
        {
            get
            {
                return this._PremiseType;
            }
            set
            {
                if ((this._PremiseType != value))
                {
                    this._PremiseType = value;
                }
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.NEWCON_LOAD_DETAIL")]
    public partial class NEWCON_LOAD_DETAIL : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private System.Guid _id;

        private string _AccountNumber;

        private string _ConnectedLoadHP;

        private string _ConnectedLoadKW;

        private string _TotalLoad;

        private string _ConnectionType;

        private string _ConnectionCode;

        private string _VoltageLevel;

        private string _PurposeOfSupply;

        private string _MeterLoad;

        private string _MeterType;

        private string _PremiseType;

        private string _ContractDemand;

        private System.Nullable<System.DateTime> _CreateDate;

        private System.Nullable<System.DateTime> _ModifiedDate;

        private string _LDPOrderNumber;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnidChanging(System.Guid value);
        partial void OnidChanged();
        partial void OnAccountNumberChanging(string value);
        partial void OnAccountNumberChanged();
        partial void OnConnectedLoadHPChanging(string value);
        partial void OnConnectedLoadHPChanged();
        partial void OnConnectedLoadKWChanging(string value);
        partial void OnConnectedLoadKWChanged();
        partial void OnTotalLoadChanging(string value);
        partial void OnTotalLoadChanged();
        partial void OnConnectionTypeChanging(string value);
        partial void OnConnectionTypeChanged();
        partial void OnConnectionCodeChanging(string value);
        partial void OnConnectionCodeChanged();
        partial void OnVoltageLevelChanging(string value);
        partial void OnVoltageLevelChanged();
        partial void OnPurposeOfSupplyChanging(string value);
        partial void OnPurposeOfSupplyChanged();
        partial void OnMeterLoadChanging(string value);
        partial void OnMeterLoadChanged();
        partial void OnMeterTypeChanging(string value);
        partial void OnMeterTypeChanged();
        partial void OnPremiseTypeChanging(string value);
        partial void OnPremiseTypeChanged();
        partial void OnContractDemandChanging(string value);
        partial void OnContractDemandChanged();
        partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
        partial void OnCreateDateChanged();
        partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
        partial void OnModifiedDateChanged();
        partial void OnLDPOrderNumberChanging(string value);
        partial void OnLDPOrderNumberChanged();
        #endregion

        public NEWCON_LOAD_DETAIL()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_id", DbType = "UniqueIdentifier NOT NULL", IsPrimaryKey = true)]
        public System.Guid id
        {
            get
            {
                return this._id;
            }
            set
            {
                if ((this._id != value))
                {
                    this.OnidChanging(value);
                    this.SendPropertyChanging();
                    this._id = value;
                    this.SendPropertyChanged("id");
                    this.OnidChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AccountNumber", DbType = "NVarChar(50)")]
        public string AccountNumber
        {
            get
            {
                return this._AccountNumber;
            }
            set
            {
                if ((this._AccountNumber != value))
                {
                    this.OnAccountNumberChanging(value);
                    this.SendPropertyChanging();
                    this._AccountNumber = value;
                    this.SendPropertyChanged("AccountNumber");
                    this.OnAccountNumberChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ConnectedLoadHP", DbType = "NVarChar(20)")]
        public string ConnectedLoadHP
        {
            get
            {
                return this._ConnectedLoadHP;
            }
            set
            {
                if ((this._ConnectedLoadHP != value))
                {
                    this.OnConnectedLoadHPChanging(value);
                    this.SendPropertyChanging();
                    this._ConnectedLoadHP = value;
                    this.SendPropertyChanged("ConnectedLoadHP");
                    this.OnConnectedLoadHPChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ConnectedLoadKW", DbType = "NVarChar(20)")]
        public string ConnectedLoadKW
        {
            get
            {
                return this._ConnectedLoadKW;
            }
            set
            {
                if ((this._ConnectedLoadKW != value))
                {
                    this.OnConnectedLoadKWChanging(value);
                    this.SendPropertyChanging();
                    this._ConnectedLoadKW = value;
                    this.SendPropertyChanged("ConnectedLoadKW");
                    this.OnConnectedLoadKWChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TotalLoad", DbType = "NVarChar(20)")]
        public string TotalLoad
        {
            get
            {
                return this._TotalLoad;
            }
            set
            {
                if ((this._TotalLoad != value))
                {
                    this.OnTotalLoadChanging(value);
                    this.SendPropertyChanging();
                    this._TotalLoad = value;
                    this.SendPropertyChanged("TotalLoad");
                    this.OnTotalLoadChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ConnectionType", DbType = "NVarChar(50)")]
        public string ConnectionType
        {
            get
            {
                return this._ConnectionType;
            }
            set
            {
                if ((this._ConnectionType != value))
                {
                    this.OnConnectionTypeChanging(value);
                    this.SendPropertyChanging();
                    this._ConnectionType = value;
                    this.SendPropertyChanged("ConnectionType");
                    this.OnConnectionTypeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ConnectionCode", DbType = "NVarChar(10)")]
        public string ConnectionCode
        {
            get
            {
                return this._ConnectionCode;
            }
            set
            {
                if ((this._ConnectionCode != value))
                {
                    this.OnConnectionCodeChanging(value);
                    this.SendPropertyChanging();
                    this._ConnectionCode = value;
                    this.SendPropertyChanged("ConnectionCode");
                    this.OnConnectionCodeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_VoltageLevel", DbType = "NVarChar(20)")]
        public string VoltageLevel
        {
            get
            {
                return this._VoltageLevel;
            }
            set
            {
                if ((this._VoltageLevel != value))
                {
                    this.OnVoltageLevelChanging(value);
                    this.SendPropertyChanging();
                    this._VoltageLevel = value;
                    this.SendPropertyChanged("VoltageLevel");
                    this.OnVoltageLevelChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PurposeOfSupply", DbType = "NVarChar(20)")]
        public string PurposeOfSupply
        {
            get
            {
                return this._PurposeOfSupply;
            }
            set
            {
                if ((this._PurposeOfSupply != value))
                {
                    this.OnPurposeOfSupplyChanging(value);
                    this.SendPropertyChanging();
                    this._PurposeOfSupply = value;
                    this.SendPropertyChanged("PurposeOfSupply");
                    this.OnPurposeOfSupplyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MeterLoad", DbType = "NVarChar(20)")]
        public string MeterLoad
        {
            get
            {
                return this._MeterLoad;
            }
            set
            {
                if ((this._MeterLoad != value))
                {
                    this.OnMeterLoadChanging(value);
                    this.SendPropertyChanging();
                    this._MeterLoad = value;
                    this.SendPropertyChanged("MeterLoad");
                    this.OnMeterLoadChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MeterType", DbType = "NVarChar(20)")]
        public string MeterType
        {
            get
            {
                return this._MeterType;
            }
            set
            {
                if ((this._MeterType != value))
                {
                    this.OnMeterTypeChanging(value);
                    this.SendPropertyChanging();
                    this._MeterType = value;
                    this.SendPropertyChanged("MeterType");
                    this.OnMeterTypeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PremiseType", DbType = "NVarChar(50)")]
        public string PremiseType
        {
            get
            {
                return this._PremiseType;
            }
            set
            {
                if ((this._PremiseType != value))
                {
                    this.OnPremiseTypeChanging(value);
                    this.SendPropertyChanging();
                    this._PremiseType = value;
                    this.SendPropertyChanged("PremiseType");
                    this.OnPremiseTypeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ContractDemand", DbType = "NVarChar(50)")]
        public string ContractDemand
        {
            get
            {
                return this._ContractDemand;
            }
            set
            {
                if ((this._ContractDemand != value))
                {
                    this.OnContractDemandChanging(value);
                    this.SendPropertyChanging();
                    this._ContractDemand = value;
                    this.SendPropertyChanged("ContractDemand");
                    this.OnContractDemandChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CreateDate", DbType = "DateTime")]
        public System.Nullable<System.DateTime> CreateDate
        {
            get
            {
                return this._CreateDate;
            }
            set
            {
                if ((this._CreateDate != value))
                {
                    this.OnCreateDateChanging(value);
                    this.SendPropertyChanging();
                    this._CreateDate = value;
                    this.SendPropertyChanged("CreateDate");
                    this.OnCreateDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ModifiedDate", DbType = "DateTime")]
        public System.Nullable<System.DateTime> ModifiedDate
        {
            get
            {
                return this._ModifiedDate;
            }
            set
            {
                if ((this._ModifiedDate != value))
                {
                    this.OnModifiedDateChanging(value);
                    this.SendPropertyChanging();
                    this._ModifiedDate = value;
                    this.SendPropertyChanged("ModifiedDate");
                    this.OnModifiedDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LDPOrderNumber", DbType = "NVarChar(50)")]
        public string LDPOrderNumber
        {
            get
            {
                return this._LDPOrderNumber;
            }
            set
            {
                if ((this._LDPOrderNumber != value))
                {
                    this.OnLDPOrderNumberChanging(value);
                    this.SendPropertyChanging();
                    this._LDPOrderNumber = value;
                    this.SendPropertyChanged("LDPOrderNumber");
                    this.OnLDPOrderNumberChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.NEW_CON_NormativeCharge")]
    public partial class NEW_CON_NormativeCharge
    {

        private string _PMActivity;

        private string _LoadUnit;

        private string _Phase;

        private string _LoadLow;

        private string _LoadHigh;

        private string _ServiceLineRate;

        private string _ApplicationCharge;

        public NEW_CON_NormativeCharge()
        {
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PMActivity", DbType = "NVarChar(500)")]
        public string PMActivity
        {
            get
            {
                return this._PMActivity;
            }
            set
            {
                if ((this._PMActivity != value))
                {
                    this._PMActivity = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LoadUnit", DbType = "NVarChar(500)")]
        public string LoadUnit
        {
            get
            {
                return this._LoadUnit;
            }
            set
            {
                if ((this._LoadUnit != value))
                {
                    this._LoadUnit = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Phase", DbType = "NVarChar(500)")]
        public string Phase
        {
            get
            {
                return this._Phase;
            }
            set
            {
                if ((this._Phase != value))
                {
                    this._Phase = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LoadLow", DbType = "NVarChar(500)")]
        public string LoadLow
        {
            get
            {
                return this._LoadLow;
            }
            set
            {
                if ((this._LoadLow != value))
                {
                    this._LoadLow = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LoadHigh", DbType = "NVarChar(500)")]
        public string LoadHigh
        {
            get
            {
                return this._LoadHigh;
            }
            set
            {
                if ((this._LoadHigh != value))
                {
                    this._LoadHigh = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ServiceLineRate", DbType = "NVarChar(500)")]
        public string ServiceLineRate
        {
            get
            {
                return this._ServiceLineRate;
            }
            set
            {
                if ((this._ServiceLineRate != value))
                {
                    this._ServiceLineRate = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ApplicationCharge", DbType = "NVarChar(500)")]
        public string ApplicationCharge
        {
            get
            {
                return this._ApplicationCharge;
            }
            set
            {
                if ((this._ApplicationCharge != value))
                {
                    this._ApplicationCharge = value;
                }
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.NEW_CON_APPLICATIONTYPE")]
    public partial class NEW_CON_APPLICATIONTYPE
    {

        private string _ApplicationId;

        private string _ApplicationType;

        public NEW_CON_APPLICATIONTYPE()
        {
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ApplicationId", DbType = "NVarChar(50)")]
        public string ApplicationId
        {
            get
            {
                return this._ApplicationId;
            }
            set
            {
                if ((this._ApplicationId != value))
                {
                    this._ApplicationId = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ApplicationType", DbType = "NVarChar(500)")]
        public string ApplicationType
        {
            get
            {
                return this._ApplicationType;
            }
            set
            {
                if ((this._ApplicationType != value))
                {
                    this._ApplicationType = value;
                }
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.NEWCON_MST_APPLICANT_TYPE")]
    public partial class NEWCON_MST_APPLICANT_TYPE
    {

        private int _APPLICANT_TYPE;

        private string _APPLICANT_TYPE_DESC;

        private string _APPLICANT_TYPE_GovernmentList;

        public NEWCON_MST_APPLICANT_TYPE()
        {
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_APPLICANT_TYPE", DbType = "Int NOT NULL")]
        public int APPLICANT_TYPE
        {
            get
            {
                return this._APPLICANT_TYPE;
            }
            set
            {
                if ((this._APPLICANT_TYPE != value))
                {
                    this._APPLICANT_TYPE = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_APPLICANT_TYPE_DESC", DbType = "NVarChar(400)")]
        public string APPLICANT_TYPE_DESC
        {
            get
            {
                return this._APPLICANT_TYPE_DESC;
            }
            set
            {
                if ((this._APPLICANT_TYPE_DESC != value))
                {
                    this._APPLICANT_TYPE_DESC = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_APPLICANT_TYPE_GovernmentList", DbType = "NVarChar(1000)")]
        public string APPLICANT_TYPE_GovernmentList
        {
            get
            {
                return this._APPLICANT_TYPE_GovernmentList;
            }
            set
            {
                if ((this._APPLICANT_TYPE_GovernmentList != value))
                {
                    this._APPLICANT_TYPE_GovernmentList = value;
                }
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.NEW_CON_CITY_PINCODE_MST")]
    public partial class NEW_CON_CITY_PINCODE_MST : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _Id;

        private string _City;

        private string _Area;

        private string _Pincode;

        private string _Division;

        private string _Unit;

        private string _WorkStation;

        private string _DummyLDP;

        private string _AreaSentToSAP;

        private System.DateTime _CreatedDate;

        private string _CreatedBy;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnCityChanging(string value);
        partial void OnCityChanged();
        partial void OnAreaChanging(string value);
        partial void OnAreaChanged();
        partial void OnPincodeChanging(string value);
        partial void OnPincodeChanged();
        partial void OnDivisionChanging(string value);
        partial void OnDivisionChanged();
        partial void OnUnitChanging(string value);
        partial void OnUnitChanged();
        partial void OnWorkStationChanging(string value);
        partial void OnWorkStationChanged();
        partial void OnDummyLDPChanging(string value);
        partial void OnDummyLDPChanged();
        partial void OnAreaSentToSAPChanging(string value);
        partial void OnAreaSentToSAPChanged();
        partial void OnCreatedDateChanging(System.DateTime value);
        partial void OnCreatedDateChanged();
        partial void OnCreatedByChanging(string value);
        partial void OnCreatedByChanged();
        #endregion

        public NEW_CON_CITY_PINCODE_MST()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Id", DbType = "Int NOT NULL", IsPrimaryKey = true)]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if ((this._Id != value))
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging();
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_City", DbType = "NVarChar(50) NOT NULL", CanBeNull = false)]
        public string City
        {
            get
            {
                return this._City;
            }
            set
            {
                if ((this._City != value))
                {
                    this.OnCityChanging(value);
                    this.SendPropertyChanging();
                    this._City = value;
                    this.SendPropertyChanged("City");
                    this.OnCityChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Area", DbType = "NVarChar(50) NOT NULL", CanBeNull = false)]
        public string Area
        {
            get
            {
                return this._Area;
            }
            set
            {
                if ((this._Area != value))
                {
                    this.OnAreaChanging(value);
                    this.SendPropertyChanging();
                    this._Area = value;
                    this.SendPropertyChanged("Area");
                    this.OnAreaChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Pincode", DbType = "NVarChar(50) NOT NULL", CanBeNull = false)]
        public string Pincode
        {
            get
            {
                return this._Pincode;
            }
            set
            {
                if ((this._Pincode != value))
                {
                    this.OnPincodeChanging(value);
                    this.SendPropertyChanging();
                    this._Pincode = value;
                    this.SendPropertyChanged("Pincode");
                    this.OnPincodeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Division", DbType = "NVarChar(500) NOT NULL", CanBeNull = false)]
        public string Division
        {
            get
            {
                return this._Division;
            }
            set
            {
                if ((this._Division != value))
                {
                    this.OnDivisionChanging(value);
                    this.SendPropertyChanging();
                    this._Division = value;
                    this.SendPropertyChanged("Division");
                    this.OnDivisionChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Unit", DbType = "NVarChar(500)")]
        public string Unit
        {
            get
            {
                return this._Unit;
            }
            set
            {
                if ((this._Unit != value))
                {
                    this.OnUnitChanging(value);
                    this.SendPropertyChanging();
                    this._Unit = value;
                    this.SendPropertyChanged("Unit");
                    this.OnUnitChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_WorkStation", DbType = "NVarChar(500) NOT NULL", CanBeNull = false)]
        public string WorkStation
        {
            get
            {
                return this._WorkStation;
            }
            set
            {
                if ((this._WorkStation != value))
                {
                    this.OnWorkStationChanging(value);
                    this.SendPropertyChanging();
                    this._WorkStation = value;
                    this.SendPropertyChanged("WorkStation");
                    this.OnWorkStationChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DummyLDP", DbType = "NVarChar(500) NOT NULL", CanBeNull = false)]
        public string DummyLDP
        {
            get
            {
                return this._DummyLDP;
            }
            set
            {
                if ((this._DummyLDP != value))
                {
                    this.OnDummyLDPChanging(value);
                    this.SendPropertyChanging();
                    this._DummyLDP = value;
                    this.SendPropertyChanged("DummyLDP");
                    this.OnDummyLDPChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AreaSentToSAP", DbType = "NVarChar(500) NOT NULL", CanBeNull = false)]
        public string AreaSentToSAP
        {
            get
            {
                return this._AreaSentToSAP;
            }
            set
            {
                if ((this._AreaSentToSAP != value))
                {
                    this.OnAreaSentToSAPChanging(value);
                    this.SendPropertyChanging();
                    this._AreaSentToSAP = value;
                    this.SendPropertyChanged("AreaSentToSAP");
                    this.OnAreaSentToSAPChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CreatedDate", DbType = "Date NOT NULL")]
        public System.DateTime CreatedDate
        {
            get
            {
                return this._CreatedDate;
            }
            set
            {
                if ((this._CreatedDate != value))
                {
                    this.OnCreatedDateChanging(value);
                    this.SendPropertyChanging();
                    this._CreatedDate = value;
                    this.SendPropertyChanged("CreatedDate");
                    this.OnCreatedDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CreatedBy", DbType = "NVarChar(500)")]
        public string CreatedBy
        {
            get
            {
                return this._CreatedBy;
            }
            set
            {
                if ((this._CreatedBy != value))
                {
                    this.OnCreatedByChanging(value);
                    this.SendPropertyChanging();
                    this._CreatedBy = value;
                    this.SendPropertyChanged("CreatedBy");
                    this.OnCreatedByChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.NEWCON_OTHER_DETAIL")]
    public partial class NEWCON_OTHER_DETAIL : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private System.Guid _id;

        private string _AccountNumber;

        private string _IsMeterConnectionCabinExist;

        private string _NearestConsumerAccountNo;

        private string _NearestConsumerMeterNo;

        private string _ExistingConnection;

        private string _ConsumerNo;

        private string _Utility;

        private string _WiringCompleted;

        private string _LECNumber;

        private string _NameOnLEC;

        private string _LECMobileNumber;

        private string _LECEmail;

        private string _LECLandline;

        private System.Nullable<System.DateTime> _CreateDate;

        private System.Nullable<System.DateTime> _ModifiedDate;

        private string _TR_NO;

        private System.Data.Linq.Binary _TR_DOCUMENT;

        private System.Nullable<bool> _IS_METER_SUPPLIER;

        private System.Nullable<bool> _Is_DDF;

        private string _DDFRs;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnidChanging(System.Guid value);
        partial void OnidChanged();
        partial void OnAccountNumberChanging(string value);
        partial void OnAccountNumberChanged();
        partial void OnIsMeterConnectionCabinExistChanging(string value);
        partial void OnIsMeterConnectionCabinExistChanged();
        partial void OnNearestConsumerAccountNoChanging(string value);
        partial void OnNearestConsumerAccountNoChanged();
        partial void OnNearestConsumerMeterNoChanging(string value);
        partial void OnNearestConsumerMeterNoChanged();
        partial void OnExistingConnectionChanging(string value);
        partial void OnExistingConnectionChanged();
        partial void OnConsumerNoChanging(string value);
        partial void OnConsumerNoChanged();
        partial void OnUtilityChanging(string value);
        partial void OnUtilityChanged();
        partial void OnWiringCompletedChanging(string value);
        partial void OnWiringCompletedChanged();
        partial void OnLECNumberChanging(string value);
        partial void OnLECNumberChanged();
        partial void OnNameOnLECChanging(string value);
        partial void OnNameOnLECChanged();
        partial void OnLECMobileNumberChanging(string value);
        partial void OnLECMobileNumberChanged();
        partial void OnLECEmailChanging(string value);
        partial void OnLECEmailChanged();
        partial void OnLECLandlineChanging(string value);
        partial void OnLECLandlineChanged();
        partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
        partial void OnCreateDateChanged();
        partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
        partial void OnModifiedDateChanged();
        partial void OnTR_NOChanging(string value);
        partial void OnTR_NOChanged();
        partial void OnTR_DOCUMENTChanging(System.Data.Linq.Binary value);
        partial void OnTR_DOCUMENTChanged();
        partial void OnIS_METER_SUPPLIERChanging(System.Nullable<bool> value);
        partial void OnIS_METER_SUPPLIERChanged();
        partial void OnIs_DDFChanging(System.Nullable<bool> value);
        partial void OnIs_DDFChanged();
        partial void OnDDFRsChanging(string value);
        partial void OnDDFRsChanged();
        #endregion

        public NEWCON_OTHER_DETAIL()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_id", DbType = "UniqueIdentifier NOT NULL", IsPrimaryKey = true)]
        public System.Guid id
        {
            get
            {
                return this._id;
            }
            set
            {
                if ((this._id != value))
                {
                    this.OnidChanging(value);
                    this.SendPropertyChanging();
                    this._id = value;
                    this.SendPropertyChanged("id");
                    this.OnidChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AccountNumber", DbType = "NVarChar(50)")]
        public string AccountNumber
        {
            get
            {
                return this._AccountNumber;
            }
            set
            {
                if ((this._AccountNumber != value))
                {
                    this.OnAccountNumberChanging(value);
                    this.SendPropertyChanging();
                    this._AccountNumber = value;
                    this.SendPropertyChanged("AccountNumber");
                    this.OnAccountNumberChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsMeterConnectionCabinExist", DbType = "NVarChar(10)")]
        public string IsMeterConnectionCabinExist
        {
            get
            {
                return this._IsMeterConnectionCabinExist;
            }
            set
            {
                if ((this._IsMeterConnectionCabinExist != value))
                {
                    this.OnIsMeterConnectionCabinExistChanging(value);
                    this.SendPropertyChanging();
                    this._IsMeterConnectionCabinExist = value;
                    this.SendPropertyChanged("IsMeterConnectionCabinExist");
                    this.OnIsMeterConnectionCabinExistChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NearestConsumerAccountNo", DbType = "NVarChar(50)")]
        public string NearestConsumerAccountNo
        {
            get
            {
                return this._NearestConsumerAccountNo;
            }
            set
            {
                if ((this._NearestConsumerAccountNo != value))
                {
                    this.OnNearestConsumerAccountNoChanging(value);
                    this.SendPropertyChanging();
                    this._NearestConsumerAccountNo = value;
                    this.SendPropertyChanged("NearestConsumerAccountNo");
                    this.OnNearestConsumerAccountNoChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NearestConsumerMeterNo", DbType = "NVarChar(50)")]
        public string NearestConsumerMeterNo
        {
            get
            {
                return this._NearestConsumerMeterNo;
            }
            set
            {
                if ((this._NearestConsumerMeterNo != value))
                {
                    this.OnNearestConsumerMeterNoChanging(value);
                    this.SendPropertyChanging();
                    this._NearestConsumerMeterNo = value;
                    this.SendPropertyChanged("NearestConsumerMeterNo");
                    this.OnNearestConsumerMeterNoChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ExistingConnection", DbType = "NVarChar(10)")]
        public string ExistingConnection
        {
            get
            {
                return this._ExistingConnection;
            }
            set
            {
                if ((this._ExistingConnection != value))
                {
                    this.OnExistingConnectionChanging(value);
                    this.SendPropertyChanging();
                    this._ExistingConnection = value;
                    this.SendPropertyChanged("ExistingConnection");
                    this.OnExistingConnectionChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ConsumerNo", DbType = "NVarChar(50)")]
        public string ConsumerNo
        {
            get
            {
                return this._ConsumerNo;
            }
            set
            {
                if ((this._ConsumerNo != value))
                {
                    this.OnConsumerNoChanging(value);
                    this.SendPropertyChanging();
                    this._ConsumerNo = value;
                    this.SendPropertyChanged("ConsumerNo");
                    this.OnConsumerNoChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Utility", DbType = "NVarChar(10)")]
        public string Utility
        {
            get
            {
                return this._Utility;
            }
            set
            {
                if ((this._Utility != value))
                {
                    this.OnUtilityChanging(value);
                    this.SendPropertyChanging();
                    this._Utility = value;
                    this.SendPropertyChanged("Utility");
                    this.OnUtilityChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_WiringCompleted", DbType = "NVarChar(10)")]
        public string WiringCompleted
        {
            get
            {
                return this._WiringCompleted;
            }
            set
            {
                if ((this._WiringCompleted != value))
                {
                    this.OnWiringCompletedChanging(value);
                    this.SendPropertyChanging();
                    this._WiringCompleted = value;
                    this.SendPropertyChanged("WiringCompleted");
                    this.OnWiringCompletedChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LECNumber", DbType = "NVarChar(50)")]
        public string LECNumber
        {
            get
            {
                return this._LECNumber;
            }
            set
            {
                if ((this._LECNumber != value))
                {
                    this.OnLECNumberChanging(value);
                    this.SendPropertyChanging();
                    this._LECNumber = value;
                    this.SendPropertyChanged("LECNumber");
                    this.OnLECNumberChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NameOnLEC", DbType = "NVarChar(100)")]
        public string NameOnLEC
        {
            get
            {
                return this._NameOnLEC;
            }
            set
            {
                if ((this._NameOnLEC != value))
                {
                    this.OnNameOnLECChanging(value);
                    this.SendPropertyChanging();
                    this._NameOnLEC = value;
                    this.SendPropertyChanged("NameOnLEC");
                    this.OnNameOnLECChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LECMobileNumber", DbType = "NVarChar(500)")]
        public string LECMobileNumber
        {
            get
            {
                return this._LECMobileNumber;
            }
            set
            {
                if ((this._LECMobileNumber != value))
                {
                    this.OnLECMobileNumberChanging(value);
                    this.SendPropertyChanging();
                    this._LECMobileNumber = value;
                    this.SendPropertyChanged("LECMobileNumber");
                    this.OnLECMobileNumberChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LECEmail", DbType = "NVarChar(500)")]
        public string LECEmail
        {
            get
            {
                return this._LECEmail;
            }
            set
            {
                if ((this._LECEmail != value))
                {
                    this.OnLECEmailChanging(value);
                    this.SendPropertyChanging();
                    this._LECEmail = value;
                    this.SendPropertyChanged("LECEmail");
                    this.OnLECEmailChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LECLandline", DbType = "NVarChar(500)")]
        public string LECLandline
        {
            get
            {
                return this._LECLandline;
            }
            set
            {
                if ((this._LECLandline != value))
                {
                    this.OnLECLandlineChanging(value);
                    this.SendPropertyChanging();
                    this._LECLandline = value;
                    this.SendPropertyChanged("LECLandline");
                    this.OnLECLandlineChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CreateDate", DbType = "DateTime")]
        public System.Nullable<System.DateTime> CreateDate
        {
            get
            {
                return this._CreateDate;
            }
            set
            {
                if ((this._CreateDate != value))
                {
                    this.OnCreateDateChanging(value);
                    this.SendPropertyChanging();
                    this._CreateDate = value;
                    this.SendPropertyChanged("CreateDate");
                    this.OnCreateDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ModifiedDate", DbType = "DateTime")]
        public System.Nullable<System.DateTime> ModifiedDate
        {
            get
            {
                return this._ModifiedDate;
            }
            set
            {
                if ((this._ModifiedDate != value))
                {
                    this.OnModifiedDateChanging(value);
                    this.SendPropertyChanging();
                    this._ModifiedDate = value;
                    this.SendPropertyChanged("ModifiedDate");
                    this.OnModifiedDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TR_NO", DbType = "NVarChar(50)")]
        public string TR_NO
        {
            get
            {
                return this._TR_NO;
            }
            set
            {
                if ((this._TR_NO != value))
                {
                    this.OnTR_NOChanging(value);
                    this.SendPropertyChanging();
                    this._TR_NO = value;
                    this.SendPropertyChanged("TR_NO");
                    this.OnTR_NOChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TR_DOCUMENT", DbType = "VarBinary(MAX)", UpdateCheck = UpdateCheck.Never)]
        public System.Data.Linq.Binary TR_DOCUMENT
        {
            get
            {
                return this._TR_DOCUMENT;
            }
            set
            {
                if ((this._TR_DOCUMENT != value))
                {
                    this.OnTR_DOCUMENTChanging(value);
                    this.SendPropertyChanging();
                    this._TR_DOCUMENT = value;
                    this.SendPropertyChanged("TR_DOCUMENT");
                    this.OnTR_DOCUMENTChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IS_METER_SUPPLIER", DbType = "Bit")]
        public System.Nullable<bool> IS_METER_SUPPLIER
        {
            get
            {
                return this._IS_METER_SUPPLIER;
            }
            set
            {
                if ((this._IS_METER_SUPPLIER != value))
                {
                    this.OnIS_METER_SUPPLIERChanging(value);
                    this.SendPropertyChanging();
                    this._IS_METER_SUPPLIER = value;
                    this.SendPropertyChanged("IS_METER_SUPPLIER");
                    this.OnIS_METER_SUPPLIERChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Is_DDF", DbType = "Bit")]
        public System.Nullable<bool> Is_DDF
        {
            get
            {
                return this._Is_DDF;
            }
            set
            {
                if ((this._Is_DDF != value))
                {
                    this.OnIs_DDFChanging(value);
                    this.SendPropertyChanging();
                    this._Is_DDF = value;
                    this.SendPropertyChanged("Is_DDF");
                    this.OnIs_DDFChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DDFRs", DbType = "NVarChar(100)")]
        public string DDFRs
        {
            get
            {
                return this._DDFRs;
            }
            set
            {
                if ((this._DDFRs != value))
                {
                    this.OnDDFRsChanging(value);
                    this.SendPropertyChanging();
                    this._DDFRs = value;
                    this.SendPropertyChanged("DDFRs");
                    this.OnDDFRsChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.UserLoginSessions")]
    public partial class UserLoginSession : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private long _Id;

        private string _UserName;

        private string _SessionId;

        private System.Nullable<System.DateTime> _CreatedDate;

        private System.Nullable<bool> _IsActive;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(long value);
        partial void OnIdChanged();
        partial void OnUserNameChanging(string value);
        partial void OnUserNameChanged();
        partial void OnSessionIdChanging(string value);
        partial void OnSessionIdChanged();
        partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
        partial void OnCreatedDateChanged();
        partial void OnIsActiveChanging(System.Nullable<bool> value);
        partial void OnIsActiveChanged();
        #endregion

        public UserLoginSession()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Id", AutoSync = AutoSync.OnInsert, DbType = "BigInt NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public long Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if ((this._Id != value))
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging();
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_UserName", DbType = "NVarChar(500)")]
        public string UserName
        {
            get
            {
                return this._UserName;
            }
            set
            {
                if ((this._UserName != value))
                {
                    this.OnUserNameChanging(value);
                    this.SendPropertyChanging();
                    this._UserName = value;
                    this.SendPropertyChanged("UserName");
                    this.OnUserNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SessionId", DbType = "NVarChar(500)")]
        public string SessionId
        {
            get
            {
                return this._SessionId;
            }
            set
            {
                if ((this._SessionId != value))
                {
                    this.OnSessionIdChanging(value);
                    this.SendPropertyChanging();
                    this._SessionId = value;
                    this.SendPropertyChanged("SessionId");
                    this.OnSessionIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CreatedDate", DbType = "DateTime")]
        public System.Nullable<System.DateTime> CreatedDate
        {
            get
            {
                return this._CreatedDate;
            }
            set
            {
                if ((this._CreatedDate != value))
                {
                    this.OnCreatedDateChanging(value);
                    this.SendPropertyChanging();
                    this._CreatedDate = value;
                    this.SendPropertyChanged("CreatedDate");
                    this.OnCreatedDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsActive", DbType = "Bit")]
        public System.Nullable<bool> IsActive
        {
            get
            {
                return this._IsActive;
            }
            set
            {
                if ((this._IsActive != value))
                {
                    this.OnIsActiveChanging(value);
                    this.SendPropertyChanging();
                    this._IsActive = value;
                    this.SendPropertyChanged("IsActive");
                    this.OnIsActiveChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.ComplaintPortalComplaintCategoryMaster")]
    public partial class ComplaintPortalComplaintCategoryMaster : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _Id;

        private string _CategoryName;

        private System.Nullable<bool> _IsVisibleToRegisteredOnly;

        private EntitySet<ComplaintPortalComplaintSubCategoryMaster> _ComplaintPortalComplaintSubCategoryMasters;

        private EntitySet<ComplaintPortalRegisteredComplaint> _ComplaintPortalRegisteredComplaints;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnCategoryNameChanging(string value);
        partial void OnCategoryNameChanged();
        partial void OnIsVisibleToRegisteredOnlyChanging(System.Nullable<bool> value);
        partial void OnIsVisibleToRegisteredOnlyChanged();
        #endregion

        public ComplaintPortalComplaintCategoryMaster()
        {
            this._ComplaintPortalComplaintSubCategoryMasters = new EntitySet<ComplaintPortalComplaintSubCategoryMaster>(new Action<ComplaintPortalComplaintSubCategoryMaster>(this.attach_ComplaintPortalComplaintSubCategoryMasters), new Action<ComplaintPortalComplaintSubCategoryMaster>(this.detach_ComplaintPortalComplaintSubCategoryMasters));
            this._ComplaintPortalRegisteredComplaints = new EntitySet<ComplaintPortalRegisteredComplaint>(new Action<ComplaintPortalRegisteredComplaint>(this.attach_ComplaintPortalRegisteredComplaints), new Action<ComplaintPortalRegisteredComplaint>(this.detach_ComplaintPortalRegisteredComplaints));
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Id", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if ((this._Id != value))
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging();
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CategoryName", DbType = "NVarChar(50) NOT NULL", CanBeNull = false)]
        public string CategoryName
        {
            get
            {
                return this._CategoryName;
            }
            set
            {
                if ((this._CategoryName != value))
                {
                    this.OnCategoryNameChanging(value);
                    this.SendPropertyChanging();
                    this._CategoryName = value;
                    this.SendPropertyChanged("CategoryName");
                    this.OnCategoryNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsVisibleToRegisteredOnly", DbType = "Bit")]
        public System.Nullable<bool> IsVisibleToRegisteredOnly
        {
            get
            {
                return this._IsVisibleToRegisteredOnly;
            }
            set
            {
                if ((this._IsVisibleToRegisteredOnly != value))
                {
                    this.OnIsVisibleToRegisteredOnlyChanging(value);
                    this.SendPropertyChanging();
                    this._IsVisibleToRegisteredOnly = value;
                    this.SendPropertyChanged("IsVisibleToRegisteredOnly");
                    this.OnIsVisibleToRegisteredOnlyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "ComplaintPortalComplaintCategoryMaster_ComplaintPortalComplaintSubCategoryMaster", Storage = "_ComplaintPortalComplaintSubCategoryMasters", ThisKey = "Id", OtherKey = "CategoryId")]
        public EntitySet<ComplaintPortalComplaintSubCategoryMaster> ComplaintPortalComplaintSubCategoryMasters
        {
            get
            {
                return this._ComplaintPortalComplaintSubCategoryMasters;
            }
            set
            {
                this._ComplaintPortalComplaintSubCategoryMasters.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "ComplaintPortalComplaintCategoryMaster_ComplaintPortalRegisteredComplaint", Storage = "_ComplaintPortalRegisteredComplaints", ThisKey = "Id", OtherKey = "ComplaintCategoryId")]
        public EntitySet<ComplaintPortalRegisteredComplaint> ComplaintPortalRegisteredComplaints
        {
            get
            {
                return this._ComplaintPortalRegisteredComplaints;
            }
            set
            {
                this._ComplaintPortalRegisteredComplaints.Assign(value);
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private void attach_ComplaintPortalComplaintSubCategoryMasters(ComplaintPortalComplaintSubCategoryMaster entity)
        {
            this.SendPropertyChanging();
            entity.ComplaintPortalComplaintCategoryMaster = this;
        }

        private void detach_ComplaintPortalComplaintSubCategoryMasters(ComplaintPortalComplaintSubCategoryMaster entity)
        {
            this.SendPropertyChanging();
            entity.ComplaintPortalComplaintCategoryMaster = null;
        }

        private void attach_ComplaintPortalRegisteredComplaints(ComplaintPortalRegisteredComplaint entity)
        {
            this.SendPropertyChanging();
            entity.ComplaintPortalComplaintCategoryMaster = this;
        }

        private void detach_ComplaintPortalRegisteredComplaints(ComplaintPortalRegisteredComplaint entity)
        {
            this.SendPropertyChanging();
            entity.ComplaintPortalComplaintCategoryMaster = null;
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.ComplaintPortalRegisteredComplaints")]
    public partial class ComplaintPortalRegisteredComplaint : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private long _Id;

        private string _AccountNumber;

        private string _MobileNumber;

        private bool _IsRegisteredUser;

        private string _UserName;

        private string _ConsumerName;

        private string _Address;

        private string _City;

        private string _Pincode;

        private string _Zone;

        private string _Email;

        private string _Mobile;

        private string _ConsumerCategory;

        private string _ComplaintCategory;

        private string _ComplaintSubCategory;

        private System.Nullable<int> _ComplaintCategoryId;

        private System.Nullable<int> _ComplaintSubCategoryId;

        private string _ComplaintDescription;

        private System.Data.Linq.Binary _DocumentData;

        private string _DocumentContentType;

        private string _DocumentFileName;

        private string _ComplaintStatusName;

        private string _ComplaintStatusCode;

        private string _ComplaintLevel;

        private System.DateTime _CreatedDate;

        private System.Nullable<System.DateTime> _ModifiedDate;

        private System.Nullable<int> _NumberOfVersion;

        private string _ComplaintIdSAP;

        private string _ComplaintCategoryOtherText;

        private string _CreatedBy;

        private string _ModifiedBy;

        private string _AdminRemarks;

        private System.Nullable<System.DateTime> _TentativeHearingDate;

        private string _ComplaintRegistrationNumber;

        private string _ComplaintNumberFromPerviousLevel;

        private string _ComplaintRemarksPerviousLevel;

        private string _CGRFCaseNumber;

        private string _ComplaintFromPerviousLevelAppliedDate;

        private string _ComplaintFromPerviousLevelDivision;

        private string _ReasonToApplyComplaint;

        private System.Nullable<System.DateTime> _NodalReplyTATDate;

        private System.Nullable<System.DateTime> _SecretaryTATDate;

        private System.Nullable<System.DateTime> _StartDate;

        private System.Nullable<System.DateTime> _ClosedDate;

        private System.Nullable<bool> _IsReviewRequestRaised;

        private System.Nullable<bool> _TransactionReceiptSentToSAP;

        private string _TransactionReceiptSentToSAPResponse;

        private System.Nullable<bool> _BankAccountStatementSentToSAP;

        private string _BankAccountStatementSentToSAPResponse;

        private EntitySet<ComplaintPortalCGRFComplaintHistory> _ComplaintPortalCGRFComplaintHistories;

        private EntitySet<ComplaintPortalRegisteredComplaintsOrderReviewRequest> _ComplaintPortalRegisteredComplaintsOrderReviewRequests;

        private EntitySet<ComplaintPortalCGRFComplaintHearingSchedule> _ComplaintPortalCGRFComplaintHearingSchedules;

        private EntitySet<ComplaintPortalCGRFComplaintDocument> _ComplaintPortalCGRFComplaintDocuments;

        private EntityRef<ComplaintPortalComplaintCategoryMaster> _ComplaintPortalComplaintCategoryMaster;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(long value);
        partial void OnIdChanged();
        partial void OnAccountNumberChanging(string value);
        partial void OnAccountNumberChanged();
        partial void OnMobileNumberChanging(string value);
        partial void OnMobileNumberChanged();
        partial void OnIsRegisteredUserChanging(bool value);
        partial void OnIsRegisteredUserChanged();
        partial void OnUserNameChanging(string value);
        partial void OnUserNameChanged();
        partial void OnConsumerNameChanging(string value);
        partial void OnConsumerNameChanged();
        partial void OnAddressChanging(string value);
        partial void OnAddressChanged();
        partial void OnCityChanging(string value);
        partial void OnCityChanged();
        partial void OnPincodeChanging(string value);
        partial void OnPincodeChanged();
        partial void OnZoneChanging(string value);
        partial void OnZoneChanged();
        partial void OnEmailChanging(string value);
        partial void OnEmailChanged();
        partial void OnMobileChanging(string value);
        partial void OnMobileChanged();
        partial void OnConsumerCategoryChanging(string value);
        partial void OnConsumerCategoryChanged();
        partial void OnComplaintCategoryChanging(string value);
        partial void OnComplaintCategoryChanged();
        partial void OnComplaintSubCategoryChanging(string value);
        partial void OnComplaintSubCategoryChanged();
        partial void OnComplaintCategoryIdChanging(System.Nullable<int> value);
        partial void OnComplaintCategoryIdChanged();
        partial void OnComplaintSubCategoryIdChanging(System.Nullable<int> value);
        partial void OnComplaintSubCategoryIdChanged();
        partial void OnComplaintDescriptionChanging(string value);
        partial void OnComplaintDescriptionChanged();
        partial void OnDocumentDataChanging(System.Data.Linq.Binary value);
        partial void OnDocumentDataChanged();
        partial void OnDocumentContentTypeChanging(string value);
        partial void OnDocumentContentTypeChanged();
        partial void OnDocumentFileNameChanging(string value);
        partial void OnDocumentFileNameChanged();
        partial void OnComplaintStatusNameChanging(string value);
        partial void OnComplaintStatusNameChanged();
        partial void OnComplaintStatusCodeChanging(string value);
        partial void OnComplaintStatusCodeChanged();
        partial void OnComplaintLevelChanging(string value);
        partial void OnComplaintLevelChanged();
        partial void OnCreatedDateChanging(System.DateTime value);
        partial void OnCreatedDateChanged();
        partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
        partial void OnModifiedDateChanged();
        partial void OnNumberOfVersionChanging(System.Nullable<int> value);
        partial void OnNumberOfVersionChanged();
        partial void OnComplaintIdSAPChanging(string value);
        partial void OnComplaintIdSAPChanged();
        partial void OnComplaintCategoryOtherTextChanging(string value);
        partial void OnComplaintCategoryOtherTextChanged();
        partial void OnCreatedByChanging(string value);
        partial void OnCreatedByChanged();
        partial void OnModifiedByChanging(string value);
        partial void OnModifiedByChanged();
        partial void OnAdminRemarksChanging(string value);
        partial void OnAdminRemarksChanged();
        partial void OnTentativeHearingDateChanging(System.Nullable<System.DateTime> value);
        partial void OnTentativeHearingDateChanged();
        partial void OnComplaintRegistrationNumberChanging(string value);
        partial void OnComplaintRegistrationNumberChanged();
        partial void OnComplaintNumberFromPerviousLevelChanging(string value);
        partial void OnComplaintNumberFromPerviousLevelChanged();
        partial void OnComplaintRemarksPerviousLevelChanging(string value);
        partial void OnComplaintRemarksPerviousLevelChanged();
        partial void OnCGRFCaseNumberChanging(string value);
        partial void OnCGRFCaseNumberChanged();
        partial void OnComplaintFromPerviousLevelAppliedDateChanging(string value);
        partial void OnComplaintFromPerviousLevelAppliedDateChanged();
        partial void OnComplaintFromPerviousLevelDivisionChanging(string value);
        partial void OnComplaintFromPerviousLevelDivisionChanged();
        partial void OnReasonToApplyComplaintChanging(string value);
        partial void OnReasonToApplyComplaintChanged();
        partial void OnNodalReplyTATDateChanging(System.Nullable<System.DateTime> value);
        partial void OnNodalReplyTATDateChanged();
        partial void OnSecretaryTATDateChanging(System.Nullable<System.DateTime> value);
        partial void OnSecretaryTATDateChanged();
        partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
        partial void OnStartDateChanged();
        partial void OnClosedDateChanging(System.Nullable<System.DateTime> value);
        partial void OnClosedDateChanged();
        partial void OnIsReviewRequestRaisedChanging(System.Nullable<bool> value);
        partial void OnIsReviewRequestRaisedChanged();
        partial void OnTransactionReceiptSentToSAPChanging(System.Nullable<bool> value);
        partial void OnTransactionReceiptSentToSAPChanged();
        partial void OnTransactionReceiptSentToSAPResponseChanging(string value);
        partial void OnTransactionReceiptSentToSAPResponseChanged();
        partial void OnBankAccountStatementSentToSAPChanging(System.Nullable<bool> value);
        partial void OnBankAccountStatementSentToSAPChanged();
        partial void OnBankAccountStatementSentToSAPResponseChanging(string value);
        partial void OnBankAccountStatementSentToSAPResponseChanged();
        #endregion

        public ComplaintPortalRegisteredComplaint()
        {
            this._ComplaintPortalCGRFComplaintHistories = new EntitySet<ComplaintPortalCGRFComplaintHistory>(new Action<ComplaintPortalCGRFComplaintHistory>(this.attach_ComplaintPortalCGRFComplaintHistories), new Action<ComplaintPortalCGRFComplaintHistory>(this.detach_ComplaintPortalCGRFComplaintHistories));
            this._ComplaintPortalRegisteredComplaintsOrderReviewRequests = new EntitySet<ComplaintPortalRegisteredComplaintsOrderReviewRequest>(new Action<ComplaintPortalRegisteredComplaintsOrderReviewRequest>(this.attach_ComplaintPortalRegisteredComplaintsOrderReviewRequests), new Action<ComplaintPortalRegisteredComplaintsOrderReviewRequest>(this.detach_ComplaintPortalRegisteredComplaintsOrderReviewRequests));
            this._ComplaintPortalCGRFComplaintHearingSchedules = new EntitySet<ComplaintPortalCGRFComplaintHearingSchedule>(new Action<ComplaintPortalCGRFComplaintHearingSchedule>(this.attach_ComplaintPortalCGRFComplaintHearingSchedules), new Action<ComplaintPortalCGRFComplaintHearingSchedule>(this.detach_ComplaintPortalCGRFComplaintHearingSchedules));
            this._ComplaintPortalCGRFComplaintDocuments = new EntitySet<ComplaintPortalCGRFComplaintDocument>(new Action<ComplaintPortalCGRFComplaintDocument>(this.attach_ComplaintPortalCGRFComplaintDocuments), new Action<ComplaintPortalCGRFComplaintDocument>(this.detach_ComplaintPortalCGRFComplaintDocuments));
            this._ComplaintPortalComplaintCategoryMaster = default(EntityRef<ComplaintPortalComplaintCategoryMaster>);
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Id", AutoSync = AutoSync.OnInsert, DbType = "BigInt NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public long Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if ((this._Id != value))
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging();
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AccountNumber", DbType = "NVarChar(50) NOT NULL", CanBeNull = false)]
        public string AccountNumber
        {
            get
            {
                return this._AccountNumber;
            }
            set
            {
                if ((this._AccountNumber != value))
                {
                    this.OnAccountNumberChanging(value);
                    this.SendPropertyChanging();
                    this._AccountNumber = value;
                    this.SendPropertyChanged("AccountNumber");
                    this.OnAccountNumberChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MobileNumber", DbType = "NVarChar(50)")]
        public string MobileNumber
        {
            get
            {
                return this._MobileNumber;
            }
            set
            {
                if ((this._MobileNumber != value))
                {
                    this.OnMobileNumberChanging(value);
                    this.SendPropertyChanging();
                    this._MobileNumber = value;
                    this.SendPropertyChanged("MobileNumber");
                    this.OnMobileNumberChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsRegisteredUser", DbType = "Bit NOT NULL")]
        public bool IsRegisteredUser
        {
            get
            {
                return this._IsRegisteredUser;
            }
            set
            {
                if ((this._IsRegisteredUser != value))
                {
                    this.OnIsRegisteredUserChanging(value);
                    this.SendPropertyChanging();
                    this._IsRegisteredUser = value;
                    this.SendPropertyChanged("IsRegisteredUser");
                    this.OnIsRegisteredUserChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_UserName", DbType = "NVarChar(200)")]
        public string UserName
        {
            get
            {
                return this._UserName;
            }
            set
            {
                if ((this._UserName != value))
                {
                    this.OnUserNameChanging(value);
                    this.SendPropertyChanging();
                    this._UserName = value;
                    this.SendPropertyChanged("UserName");
                    this.OnUserNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ConsumerName", DbType = "NVarChar(200)")]
        public string ConsumerName
        {
            get
            {
                return this._ConsumerName;
            }
            set
            {
                if ((this._ConsumerName != value))
                {
                    this.OnConsumerNameChanging(value);
                    this.SendPropertyChanging();
                    this._ConsumerName = value;
                    this.SendPropertyChanged("ConsumerName");
                    this.OnConsumerNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Address", DbType = "NVarChar(500)")]
        public string Address
        {
            get
            {
                return this._Address;
            }
            set
            {
                if ((this._Address != value))
                {
                    this.OnAddressChanging(value);
                    this.SendPropertyChanging();
                    this._Address = value;
                    this.SendPropertyChanged("Address");
                    this.OnAddressChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_City", DbType = "NVarChar(50)")]
        public string City
        {
            get
            {
                return this._City;
            }
            set
            {
                if ((this._City != value))
                {
                    this.OnCityChanging(value);
                    this.SendPropertyChanging();
                    this._City = value;
                    this.SendPropertyChanged("City");
                    this.OnCityChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Pincode", DbType = "NVarChar(50)")]
        public string Pincode
        {
            get
            {
                return this._Pincode;
            }
            set
            {
                if ((this._Pincode != value))
                {
                    this.OnPincodeChanging(value);
                    this.SendPropertyChanging();
                    this._Pincode = value;
                    this.SendPropertyChanged("Pincode");
                    this.OnPincodeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Zone", DbType = "NVarChar(50)")]
        public string Zone
        {
            get
            {
                return this._Zone;
            }
            set
            {
                if ((this._Zone != value))
                {
                    this.OnZoneChanging(value);
                    this.SendPropertyChanging();
                    this._Zone = value;
                    this.SendPropertyChanged("Zone");
                    this.OnZoneChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Email", DbType = "NVarChar(50)")]
        public string Email
        {
            get
            {
                return this._Email;
            }
            set
            {
                if ((this._Email != value))
                {
                    this.OnEmailChanging(value);
                    this.SendPropertyChanging();
                    this._Email = value;
                    this.SendPropertyChanged("Email");
                    this.OnEmailChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Mobile", DbType = "NVarChar(50)")]
        public string Mobile
        {
            get
            {
                return this._Mobile;
            }
            set
            {
                if ((this._Mobile != value))
                {
                    this.OnMobileChanging(value);
                    this.SendPropertyChanging();
                    this._Mobile = value;
                    this.SendPropertyChanged("Mobile");
                    this.OnMobileChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ConsumerCategory", DbType = "NVarChar(50)")]
        public string ConsumerCategory
        {
            get
            {
                return this._ConsumerCategory;
            }
            set
            {
                if ((this._ConsumerCategory != value))
                {
                    this.OnConsumerCategoryChanging(value);
                    this.SendPropertyChanging();
                    this._ConsumerCategory = value;
                    this.SendPropertyChanged("ConsumerCategory");
                    this.OnConsumerCategoryChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ComplaintCategory", DbType = "NVarChar(50)")]
        public string ComplaintCategory
        {
            get
            {
                return this._ComplaintCategory;
            }
            set
            {
                if ((this._ComplaintCategory != value))
                {
                    this.OnComplaintCategoryChanging(value);
                    this.SendPropertyChanging();
                    this._ComplaintCategory = value;
                    this.SendPropertyChanged("ComplaintCategory");
                    this.OnComplaintCategoryChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ComplaintSubCategory", DbType = "NVarChar(50)")]
        public string ComplaintSubCategory
        {
            get
            {
                return this._ComplaintSubCategory;
            }
            set
            {
                if ((this._ComplaintSubCategory != value))
                {
                    this.OnComplaintSubCategoryChanging(value);
                    this.SendPropertyChanging();
                    this._ComplaintSubCategory = value;
                    this.SendPropertyChanged("ComplaintSubCategory");
                    this.OnComplaintSubCategoryChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ComplaintCategoryId", DbType = "Int")]
        public System.Nullable<int> ComplaintCategoryId
        {
            get
            {
                return this._ComplaintCategoryId;
            }
            set
            {
                if ((this._ComplaintCategoryId != value))
                {
                    if (this._ComplaintPortalComplaintCategoryMaster.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnComplaintCategoryIdChanging(value);
                    this.SendPropertyChanging();
                    this._ComplaintCategoryId = value;
                    this.SendPropertyChanged("ComplaintCategoryId");
                    this.OnComplaintCategoryIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ComplaintSubCategoryId", DbType = "Int")]
        public System.Nullable<int> ComplaintSubCategoryId
        {
            get
            {
                return this._ComplaintSubCategoryId;
            }
            set
            {
                if ((this._ComplaintSubCategoryId != value))
                {
                    this.OnComplaintSubCategoryIdChanging(value);
                    this.SendPropertyChanging();
                    this._ComplaintSubCategoryId = value;
                    this.SendPropertyChanged("ComplaintSubCategoryId");
                    this.OnComplaintSubCategoryIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ComplaintDescription", DbType = "NVarChar(MAX)")]
        public string ComplaintDescription
        {
            get
            {
                return this._ComplaintDescription;
            }
            set
            {
                if ((this._ComplaintDescription != value))
                {
                    this.OnComplaintDescriptionChanging(value);
                    this.SendPropertyChanging();
                    this._ComplaintDescription = value;
                    this.SendPropertyChanged("ComplaintDescription");
                    this.OnComplaintDescriptionChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DocumentData", DbType = "VarBinary(MAX)", UpdateCheck = UpdateCheck.Never)]
        public System.Data.Linq.Binary DocumentData
        {
            get
            {
                return this._DocumentData;
            }
            set
            {
                if ((this._DocumentData != value))
                {
                    this.OnDocumentDataChanging(value);
                    this.SendPropertyChanging();
                    this._DocumentData = value;
                    this.SendPropertyChanged("DocumentData");
                    this.OnDocumentDataChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DocumentContentType", DbType = "NVarChar(200)")]
        public string DocumentContentType
        {
            get
            {
                return this._DocumentContentType;
            }
            set
            {
                if ((this._DocumentContentType != value))
                {
                    this.OnDocumentContentTypeChanging(value);
                    this.SendPropertyChanging();
                    this._DocumentContentType = value;
                    this.SendPropertyChanged("DocumentContentType");
                    this.OnDocumentContentTypeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DocumentFileName", DbType = "NVarChar(50)")]
        public string DocumentFileName
        {
            get
            {
                return this._DocumentFileName;
            }
            set
            {
                if ((this._DocumentFileName != value))
                {
                    this.OnDocumentFileNameChanging(value);
                    this.SendPropertyChanging();
                    this._DocumentFileName = value;
                    this.SendPropertyChanged("DocumentFileName");
                    this.OnDocumentFileNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ComplaintStatusName", DbType = "NVarChar(50) NOT NULL", CanBeNull = false)]
        public string ComplaintStatusName
        {
            get
            {
                return this._ComplaintStatusName;
            }
            set
            {
                if ((this._ComplaintStatusName != value))
                {
                    this.OnComplaintStatusNameChanging(value);
                    this.SendPropertyChanging();
                    this._ComplaintStatusName = value;
                    this.SendPropertyChanged("ComplaintStatusName");
                    this.OnComplaintStatusNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ComplaintStatusCode", DbType = "NVarChar(50) NOT NULL", CanBeNull = false)]
        public string ComplaintStatusCode
        {
            get
            {
                return this._ComplaintStatusCode;
            }
            set
            {
                if ((this._ComplaintStatusCode != value))
                {
                    this.OnComplaintStatusCodeChanging(value);
                    this.SendPropertyChanging();
                    this._ComplaintStatusCode = value;
                    this.SendPropertyChanged("ComplaintStatusCode");
                    this.OnComplaintStatusCodeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ComplaintLevel", DbType = "NVarChar(50) NOT NULL", CanBeNull = false)]
        public string ComplaintLevel
        {
            get
            {
                return this._ComplaintLevel;
            }
            set
            {
                if ((this._ComplaintLevel != value))
                {
                    this.OnComplaintLevelChanging(value);
                    this.SendPropertyChanging();
                    this._ComplaintLevel = value;
                    this.SendPropertyChanged("ComplaintLevel");
                    this.OnComplaintLevelChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CreatedDate", DbType = "DateTime NOT NULL")]
        public System.DateTime CreatedDate
        {
            get
            {
                return this._CreatedDate;
            }
            set
            {
                if ((this._CreatedDate != value))
                {
                    this.OnCreatedDateChanging(value);
                    this.SendPropertyChanging();
                    this._CreatedDate = value;
                    this.SendPropertyChanged("CreatedDate");
                    this.OnCreatedDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ModifiedDate", DbType = "DateTime")]
        public System.Nullable<System.DateTime> ModifiedDate
        {
            get
            {
                return this._ModifiedDate;
            }
            set
            {
                if ((this._ModifiedDate != value))
                {
                    this.OnModifiedDateChanging(value);
                    this.SendPropertyChanging();
                    this._ModifiedDate = value;
                    this.SendPropertyChanged("ModifiedDate");
                    this.OnModifiedDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NumberOfVersion", DbType = "Int")]
        public System.Nullable<int> NumberOfVersion
        {
            get
            {
                return this._NumberOfVersion;
            }
            set
            {
                if ((this._NumberOfVersion != value))
                {
                    this.OnNumberOfVersionChanging(value);
                    this.SendPropertyChanging();
                    this._NumberOfVersion = value;
                    this.SendPropertyChanged("NumberOfVersion");
                    this.OnNumberOfVersionChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ComplaintIdSAP", DbType = "NVarChar(50)")]
        public string ComplaintIdSAP
        {
            get
            {
                return this._ComplaintIdSAP;
            }
            set
            {
                if ((this._ComplaintIdSAP != value))
                {
                    this.OnComplaintIdSAPChanging(value);
                    this.SendPropertyChanging();
                    this._ComplaintIdSAP = value;
                    this.SendPropertyChanged("ComplaintIdSAP");
                    this.OnComplaintIdSAPChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ComplaintCategoryOtherText", DbType = "NVarChar(100)")]
        public string ComplaintCategoryOtherText
        {
            get
            {
                return this._ComplaintCategoryOtherText;
            }
            set
            {
                if ((this._ComplaintCategoryOtherText != value))
                {
                    this.OnComplaintCategoryOtherTextChanging(value);
                    this.SendPropertyChanging();
                    this._ComplaintCategoryOtherText = value;
                    this.SendPropertyChanged("ComplaintCategoryOtherText");
                    this.OnComplaintCategoryOtherTextChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CreatedBy", DbType = "NVarChar(50)")]
        public string CreatedBy
        {
            get
            {
                return this._CreatedBy;
            }
            set
            {
                if ((this._CreatedBy != value))
                {
                    this.OnCreatedByChanging(value);
                    this.SendPropertyChanging();
                    this._CreatedBy = value;
                    this.SendPropertyChanged("CreatedBy");
                    this.OnCreatedByChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ModifiedBy", DbType = "NVarChar(50)")]
        public string ModifiedBy
        {
            get
            {
                return this._ModifiedBy;
            }
            set
            {
                if ((this._ModifiedBy != value))
                {
                    this.OnModifiedByChanging(value);
                    this.SendPropertyChanging();
                    this._ModifiedBy = value;
                    this.SendPropertyChanged("ModifiedBy");
                    this.OnModifiedByChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AdminRemarks", DbType = "NVarChar(500)")]
        public string AdminRemarks
        {
            get
            {
                return this._AdminRemarks;
            }
            set
            {
                if ((this._AdminRemarks != value))
                {
                    this.OnAdminRemarksChanging(value);
                    this.SendPropertyChanging();
                    this._AdminRemarks = value;
                    this.SendPropertyChanged("AdminRemarks");
                    this.OnAdminRemarksChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TentativeHearingDate", DbType = "DateTime")]
        public System.Nullable<System.DateTime> TentativeHearingDate
        {
            get
            {
                return this._TentativeHearingDate;
            }
            set
            {
                if ((this._TentativeHearingDate != value))
                {
                    this.OnTentativeHearingDateChanging(value);
                    this.SendPropertyChanging();
                    this._TentativeHearingDate = value;
                    this.SendPropertyChanged("TentativeHearingDate");
                    this.OnTentativeHearingDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ComplaintRegistrationNumber", DbType = "NVarChar(50)")]
        public string ComplaintRegistrationNumber
        {
            get
            {
                return this._ComplaintRegistrationNumber;
            }
            set
            {
                if ((this._ComplaintRegistrationNumber != value))
                {
                    this.OnComplaintRegistrationNumberChanging(value);
                    this.SendPropertyChanging();
                    this._ComplaintRegistrationNumber = value;
                    this.SendPropertyChanged("ComplaintRegistrationNumber");
                    this.OnComplaintRegistrationNumberChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ComplaintNumberFromPerviousLevel", DbType = "NVarChar(50)")]
        public string ComplaintNumberFromPerviousLevel
        {
            get
            {
                return this._ComplaintNumberFromPerviousLevel;
            }
            set
            {
                if ((this._ComplaintNumberFromPerviousLevel != value))
                {
                    this.OnComplaintNumberFromPerviousLevelChanging(value);
                    this.SendPropertyChanging();
                    this._ComplaintNumberFromPerviousLevel = value;
                    this.SendPropertyChanged("ComplaintNumberFromPerviousLevel");
                    this.OnComplaintNumberFromPerviousLevelChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ComplaintRemarksPerviousLevel", DbType = "NVarChar(500)")]
        public string ComplaintRemarksPerviousLevel
        {
            get
            {
                return this._ComplaintRemarksPerviousLevel;
            }
            set
            {
                if ((this._ComplaintRemarksPerviousLevel != value))
                {
                    this.OnComplaintRemarksPerviousLevelChanging(value);
                    this.SendPropertyChanging();
                    this._ComplaintRemarksPerviousLevel = value;
                    this.SendPropertyChanged("ComplaintRemarksPerviousLevel");
                    this.OnComplaintRemarksPerviousLevelChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CGRFCaseNumber", DbType = "NVarChar(50)")]
        public string CGRFCaseNumber
        {
            get
            {
                return this._CGRFCaseNumber;
            }
            set
            {
                if ((this._CGRFCaseNumber != value))
                {
                    this.OnCGRFCaseNumberChanging(value);
                    this.SendPropertyChanging();
                    this._CGRFCaseNumber = value;
                    this.SendPropertyChanged("CGRFCaseNumber");
                    this.OnCGRFCaseNumberChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ComplaintFromPerviousLevelAppliedDate", DbType = "NVarChar(100)")]
        public string ComplaintFromPerviousLevelAppliedDate
        {
            get
            {
                return this._ComplaintFromPerviousLevelAppliedDate;
            }
            set
            {
                if ((this._ComplaintFromPerviousLevelAppliedDate != value))
                {
                    this.OnComplaintFromPerviousLevelAppliedDateChanging(value);
                    this.SendPropertyChanging();
                    this._ComplaintFromPerviousLevelAppliedDate = value;
                    this.SendPropertyChanged("ComplaintFromPerviousLevelAppliedDate");
                    this.OnComplaintFromPerviousLevelAppliedDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ComplaintFromPerviousLevelDivision", DbType = "NVarChar(50)")]
        public string ComplaintFromPerviousLevelDivision
        {
            get
            {
                return this._ComplaintFromPerviousLevelDivision;
            }
            set
            {
                if ((this._ComplaintFromPerviousLevelDivision != value))
                {
                    this.OnComplaintFromPerviousLevelDivisionChanging(value);
                    this.SendPropertyChanging();
                    this._ComplaintFromPerviousLevelDivision = value;
                    this.SendPropertyChanged("ComplaintFromPerviousLevelDivision");
                    this.OnComplaintFromPerviousLevelDivisionChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ReasonToApplyComplaint", DbType = "NVarChar(500)")]
        public string ReasonToApplyComplaint
        {
            get
            {
                return this._ReasonToApplyComplaint;
            }
            set
            {
                if ((this._ReasonToApplyComplaint != value))
                {
                    this.OnReasonToApplyComplaintChanging(value);
                    this.SendPropertyChanging();
                    this._ReasonToApplyComplaint = value;
                    this.SendPropertyChanged("ReasonToApplyComplaint");
                    this.OnReasonToApplyComplaintChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NodalReplyTATDate", DbType = "DateTime")]
        public System.Nullable<System.DateTime> NodalReplyTATDate
        {
            get
            {
                return this._NodalReplyTATDate;
            }
            set
            {
                if ((this._NodalReplyTATDate != value))
                {
                    this.OnNodalReplyTATDateChanging(value);
                    this.SendPropertyChanging();
                    this._NodalReplyTATDate = value;
                    this.SendPropertyChanged("NodalReplyTATDate");
                    this.OnNodalReplyTATDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SecretaryTATDate", DbType = "DateTime")]
        public System.Nullable<System.DateTime> SecretaryTATDate
        {
            get
            {
                return this._SecretaryTATDate;
            }
            set
            {
                if ((this._SecretaryTATDate != value))
                {
                    this.OnSecretaryTATDateChanging(value);
                    this.SendPropertyChanging();
                    this._SecretaryTATDate = value;
                    this.SendPropertyChanged("SecretaryTATDate");
                    this.OnSecretaryTATDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_StartDate", DbType = "DateTime")]
        public System.Nullable<System.DateTime> StartDate
        {
            get
            {
                return this._StartDate;
            }
            set
            {
                if ((this._StartDate != value))
                {
                    this.OnStartDateChanging(value);
                    this.SendPropertyChanging();
                    this._StartDate = value;
                    this.SendPropertyChanged("StartDate");
                    this.OnStartDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ClosedDate", DbType = "DateTime")]
        public System.Nullable<System.DateTime> ClosedDate
        {
            get
            {
                return this._ClosedDate;
            }
            set
            {
                if ((this._ClosedDate != value))
                {
                    this.OnClosedDateChanging(value);
                    this.SendPropertyChanging();
                    this._ClosedDate = value;
                    this.SendPropertyChanged("ClosedDate");
                    this.OnClosedDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsReviewRequestRaised", DbType = "Bit")]
        public System.Nullable<bool> IsReviewRequestRaised
        {
            get
            {
                return this._IsReviewRequestRaised;
            }
            set
            {
                if ((this._IsReviewRequestRaised != value))
                {
                    this.OnIsReviewRequestRaisedChanging(value);
                    this.SendPropertyChanging();
                    this._IsReviewRequestRaised = value;
                    this.SendPropertyChanged("IsReviewRequestRaised");
                    this.OnIsReviewRequestRaisedChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TransactionReceiptSentToSAP", DbType = "Bit")]
        public System.Nullable<bool> TransactionReceiptSentToSAP
        {
            get
            {
                return this._TransactionReceiptSentToSAP;
            }
            set
            {
                if ((this._TransactionReceiptSentToSAP != value))
                {
                    this.OnTransactionReceiptSentToSAPChanging(value);
                    this.SendPropertyChanging();
                    this._TransactionReceiptSentToSAP = value;
                    this.SendPropertyChanged("TransactionReceiptSentToSAP");
                    this.OnTransactionReceiptSentToSAPChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TransactionReceiptSentToSAPResponse", DbType = "NVarChar(200)")]
        public string TransactionReceiptSentToSAPResponse
        {
            get
            {
                return this._TransactionReceiptSentToSAPResponse;
            }
            set
            {
                if ((this._TransactionReceiptSentToSAPResponse != value))
                {
                    this.OnTransactionReceiptSentToSAPResponseChanging(value);
                    this.SendPropertyChanging();
                    this._TransactionReceiptSentToSAPResponse = value;
                    this.SendPropertyChanged("TransactionReceiptSentToSAPResponse");
                    this.OnTransactionReceiptSentToSAPResponseChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BankAccountStatementSentToSAP", DbType = "Bit")]
        public System.Nullable<bool> BankAccountStatementSentToSAP
        {
            get
            {
                return this._BankAccountStatementSentToSAP;
            }
            set
            {
                if ((this._BankAccountStatementSentToSAP != value))
                {
                    this.OnBankAccountStatementSentToSAPChanging(value);
                    this.SendPropertyChanging();
                    this._BankAccountStatementSentToSAP = value;
                    this.SendPropertyChanged("BankAccountStatementSentToSAP");
                    this.OnBankAccountStatementSentToSAPChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BankAccountStatementSentToSAPResponse", DbType = "NVarChar(200)")]
        public string BankAccountStatementSentToSAPResponse
        {
            get
            {
                return this._BankAccountStatementSentToSAPResponse;
            }
            set
            {
                if ((this._BankAccountStatementSentToSAPResponse != value))
                {
                    this.OnBankAccountStatementSentToSAPResponseChanging(value);
                    this.SendPropertyChanging();
                    this._BankAccountStatementSentToSAPResponse = value;
                    this.SendPropertyChanged("BankAccountStatementSentToSAPResponse");
                    this.OnBankAccountStatementSentToSAPResponseChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "ComplaintPortalRegisteredComplaint_ComplaintPortalCGRFComplaintHistory", Storage = "_ComplaintPortalCGRFComplaintHistories", ThisKey = "Id", OtherKey = "ComplaintId")]
        public EntitySet<ComplaintPortalCGRFComplaintHistory> ComplaintPortalCGRFComplaintHistories
        {
            get
            {
                return this._ComplaintPortalCGRFComplaintHistories;
            }
            set
            {
                this._ComplaintPortalCGRFComplaintHistories.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "ComplaintPortalRegisteredComplaint_ComplaintPortalRegisteredComplaintsOrderReview" +
            "Request", Storage = "_ComplaintPortalRegisteredComplaintsOrderReviewRequests", ThisKey = "Id", OtherKey = "ComplaintId")]
        public EntitySet<ComplaintPortalRegisteredComplaintsOrderReviewRequest> ComplaintPortalRegisteredComplaintsOrderReviewRequests
        {
            get
            {
                return this._ComplaintPortalRegisteredComplaintsOrderReviewRequests;
            }
            set
            {
                this._ComplaintPortalRegisteredComplaintsOrderReviewRequests.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "ComplaintPortalRegisteredComplaint_ComplaintPortalCGRFComplaintHearingSchedule", Storage = "_ComplaintPortalCGRFComplaintHearingSchedules", ThisKey = "Id", OtherKey = "ComplaintId")]
        public EntitySet<ComplaintPortalCGRFComplaintHearingSchedule> ComplaintPortalCGRFComplaintHearingSchedules
        {
            get
            {
                return this._ComplaintPortalCGRFComplaintHearingSchedules;
            }
            set
            {
                this._ComplaintPortalCGRFComplaintHearingSchedules.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "ComplaintPortalRegisteredComplaint_ComplaintPortalCGRFComplaintDocument", Storage = "_ComplaintPortalCGRFComplaintDocuments", ThisKey = "Id", OtherKey = "ComplaintNumber")]
        public EntitySet<ComplaintPortalCGRFComplaintDocument> ComplaintPortalCGRFComplaintDocuments
        {
            get
            {
                return this._ComplaintPortalCGRFComplaintDocuments;
            }
            set
            {
                this._ComplaintPortalCGRFComplaintDocuments.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "ComplaintPortalComplaintCategoryMaster_ComplaintPortalRegisteredComplaint", Storage = "_ComplaintPortalComplaintCategoryMaster", ThisKey = "ComplaintCategoryId", OtherKey = "Id", IsForeignKey = true)]
        public ComplaintPortalComplaintCategoryMaster ComplaintPortalComplaintCategoryMaster
        {
            get
            {
                return this._ComplaintPortalComplaintCategoryMaster.Entity;
            }
            set
            {
                ComplaintPortalComplaintCategoryMaster previousValue = this._ComplaintPortalComplaintCategoryMaster.Entity;
                if (((previousValue != value)
                            || (this._ComplaintPortalComplaintCategoryMaster.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._ComplaintPortalComplaintCategoryMaster.Entity = null;
                        previousValue.ComplaintPortalRegisteredComplaints.Remove(this);
                    }
                    this._ComplaintPortalComplaintCategoryMaster.Entity = value;
                    if ((value != null))
                    {
                        value.ComplaintPortalRegisteredComplaints.Add(this);
                        this._ComplaintCategoryId = value.Id;
                    }
                    else
                    {
                        this._ComplaintCategoryId = default(Nullable<int>);
                    }
                    this.SendPropertyChanged("ComplaintPortalComplaintCategoryMaster");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private void attach_ComplaintPortalCGRFComplaintHistories(ComplaintPortalCGRFComplaintHistory entity)
        {
            this.SendPropertyChanging();
            entity.ComplaintPortalRegisteredComplaint = this;
        }

        private void detach_ComplaintPortalCGRFComplaintHistories(ComplaintPortalCGRFComplaintHistory entity)
        {
            this.SendPropertyChanging();
            entity.ComplaintPortalRegisteredComplaint = null;
        }

        private void attach_ComplaintPortalRegisteredComplaintsOrderReviewRequests(ComplaintPortalRegisteredComplaintsOrderReviewRequest entity)
        {
            this.SendPropertyChanging();
            entity.ComplaintPortalRegisteredComplaint = this;
        }

        private void detach_ComplaintPortalRegisteredComplaintsOrderReviewRequests(ComplaintPortalRegisteredComplaintsOrderReviewRequest entity)
        {
            this.SendPropertyChanging();
            entity.ComplaintPortalRegisteredComplaint = null;
        }

        private void attach_ComplaintPortalCGRFComplaintHearingSchedules(ComplaintPortalCGRFComplaintHearingSchedule entity)
        {
            this.SendPropertyChanging();
            entity.ComplaintPortalRegisteredComplaint = this;
        }

        private void detach_ComplaintPortalCGRFComplaintHearingSchedules(ComplaintPortalCGRFComplaintHearingSchedule entity)
        {
            this.SendPropertyChanging();
            entity.ComplaintPortalRegisteredComplaint = null;
        }

        private void attach_ComplaintPortalCGRFComplaintDocuments(ComplaintPortalCGRFComplaintDocument entity)
        {
            this.SendPropertyChanging();
            entity.ComplaintPortalRegisteredComplaint = this;
        }

        private void detach_ComplaintPortalCGRFComplaintDocuments(ComplaintPortalCGRFComplaintDocument entity)
        {
            this.SendPropertyChanging();
            entity.ComplaintPortalRegisteredComplaint = null;
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.NEW_CON_APPLICATION_FORM")]
    public partial class NEW_CON_APPLICATION_FORM : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private System.Guid _Id;

        private string _ApplicationNumber;

        private string _AccountNumber;

        private string _ApplicationType;

        private System.Nullable<System.DateTime> _PeriodOfSupplyFrom;

        private System.Nullable<System.DateTime> _PeriodOfSupplyTo;

        private string _ApplicationTitle;

        private string _FirstName;

        private string _MiddleName;

        private string _LastName;

        private string _OrganizationName;

        private System.Nullable<System.DateTime> _DateOfBirth;

        private System.Nullable<System.DateTime> _DateOfBirthJoint1;

        private string _AddressOfSupply;

        private string _Pincode;

        private string _Surburb;

        private string _BillingAddressDifferentFromSupply;

        private string _BillingAddress;

        private string _BillingSuburb;

        private string _BillingPincode;

        private string _AddressIncaseOfRental;

        private string _AddressOfRental;

        private string _NameOfRental;

        private string _RentalContactNo;

        private string _RentalSuburb;

        private string _RentalPincode;

        private string _RentalOwnerEmail;

        private string _MobileNumber;

        private string _Email;

        private string _LandlineNumber;

        private string _BillLanguage;

        private string _BillingFormat;

        private string _MICR;

        private string _TypeOfAccount;

        private string _Bank;

        private string _Branch;

        private string _BankAccountNumber;

        private System.Nullable<System.DateTime> _CreatedDate;

        private string _FormName;

        private System.Nullable<System.DateTime> _ModifiedDate;

        private System.Nullable<int> _Status;

        private string _ApplicationModel;

        private System.Nullable<bool> _IsGreenTariffApplied;

        private string _GreenTariff;

        private string _ApplicationSubType;

        private string _IsExistingCustomer;

        private string _CANumber;

        private System.Nullable<bool> _IsJoint;

        private System.Nullable<bool> _ApplicantType;

        private string _GovernmentType;

        private System.Nullable<bool> _IsTermConditionAccepted;

        private System.Nullable<bool> _IsCopiedSelfAttested;

        private System.Nullable<bool> _IsSEZ;

        private string _BankHolderName;

        private System.Nullable<bool> _IsSAPSent;

        private string _SAPTempNumber;

        private System.Nullable<System.DateTime> _StartTempDate;

        private System.Nullable<System.DateTime> _EndTempTime;

        private string _Name1Joint;

        private string _Name2Joint;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(System.Guid value);
        partial void OnIdChanged();
        partial void OnApplicationNumberChanging(string value);
        partial void OnApplicationNumberChanged();
        partial void OnAccountNumberChanging(string value);
        partial void OnAccountNumberChanged();
        partial void OnApplicationTypeChanging(string value);
        partial void OnApplicationTypeChanged();
        partial void OnPeriodOfSupplyFromChanging(System.Nullable<System.DateTime> value);
        partial void OnPeriodOfSupplyFromChanged();
        partial void OnPeriodOfSupplyToChanging(System.Nullable<System.DateTime> value);
        partial void OnPeriodOfSupplyToChanged();
        partial void OnApplicationTitleChanging(string value);
        partial void OnApplicationTitleChanged();
        partial void OnFirstNameChanging(string value);
        partial void OnFirstNameChanged();
        partial void OnMiddleNameChanging(string value);
        partial void OnMiddleNameChanged();
        partial void OnLastNameChanging(string value);
        partial void OnLastNameChanged();
        partial void OnOrganizationNameChanging(string value);
        partial void OnOrganizationNameChanged();
        partial void OnDateOfBirthChanging(System.Nullable<System.DateTime> value);
        partial void OnDateOfBirthChanged();
        partial void OnDateOfBirthJoint1Changing(System.Nullable<System.DateTime> value);
        partial void OnDateOfBirthJoint1Changed();
        partial void OnAddressOfSupplyChanging(string value);
        partial void OnAddressOfSupplyChanged();
        partial void OnPincodeChanging(string value);
        partial void OnPincodeChanged();
        partial void OnSurburbChanging(string value);
        partial void OnSurburbChanged();
        partial void OnBillingAddressDifferentFromSupplyChanging(string value);
        partial void OnBillingAddressDifferentFromSupplyChanged();
        partial void OnBillingAddressChanging(string value);
        partial void OnBillingAddressChanged();
        partial void OnBillingSuburbChanging(string value);
        partial void OnBillingSuburbChanged();
        partial void OnBillingPincodeChanging(string value);
        partial void OnBillingPincodeChanged();
        partial void OnAddressIncaseOfRentalChanging(string value);
        partial void OnAddressIncaseOfRentalChanged();
        partial void OnAddressOfRentalChanging(string value);
        partial void OnAddressOfRentalChanged();
        partial void OnNameOfRentalChanging(string value);
        partial void OnNameOfRentalChanged();
        partial void OnRentalContactNoChanging(string value);
        partial void OnRentalContactNoChanged();
        partial void OnRentalSuburbChanging(string value);
        partial void OnRentalSuburbChanged();
        partial void OnRentalPincodeChanging(string value);
        partial void OnRentalPincodeChanged();
        partial void OnRentalOwnerEmailChanging(string value);
        partial void OnRentalOwnerEmailChanged();
        partial void OnMobileNumberChanging(string value);
        partial void OnMobileNumberChanged();
        partial void OnEmailChanging(string value);
        partial void OnEmailChanged();
        partial void OnLandlineNumberChanging(string value);
        partial void OnLandlineNumberChanged();
        partial void OnBillLanguageChanging(string value);
        partial void OnBillLanguageChanged();
        partial void OnBillingFormatChanging(string value);
        partial void OnBillingFormatChanged();
        partial void OnMICRChanging(string value);
        partial void OnMICRChanged();
        partial void OnTypeOfAccountChanging(string value);
        partial void OnTypeOfAccountChanged();
        partial void OnBankChanging(string value);
        partial void OnBankChanged();
        partial void OnBranchChanging(string value);
        partial void OnBranchChanged();
        partial void OnBankAccountNumberChanging(string value);
        partial void OnBankAccountNumberChanged();
        partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
        partial void OnCreatedDateChanged();
        partial void OnFormNameChanging(string value);
        partial void OnFormNameChanged();
        partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
        partial void OnModifiedDateChanged();
        partial void OnStatusChanging(System.Nullable<int> value);
        partial void OnStatusChanged();
        partial void OnApplicationModelChanging(string value);
        partial void OnApplicationModelChanged();
        partial void OnIsGreenTariffAppliedChanging(System.Nullable<bool> value);
        partial void OnIsGreenTariffAppliedChanged();
        partial void OnGreenTariffChanging(string value);
        partial void OnGreenTariffChanged();
        partial void OnApplicationSubTypeChanging(string value);
        partial void OnApplicationSubTypeChanged();
        partial void OnIsExistingCustomerChanging(string value);
        partial void OnIsExistingCustomerChanged();
        partial void OnCANumberChanging(string value);
        partial void OnCANumberChanged();
        partial void OnIsJointChanging(System.Nullable<bool> value);
        partial void OnIsJointChanged();
        partial void OnApplicantTypeChanging(System.Nullable<bool> value);
        partial void OnApplicantTypeChanged();
        partial void OnGovernmentTypeChanging(string value);
        partial void OnGovernmentTypeChanged();
        partial void OnIsTermConditionAcceptedChanging(System.Nullable<bool> value);
        partial void OnIsTermConditionAcceptedChanged();
        partial void OnIsCopiedSelfAttestedChanging(System.Nullable<bool> value);
        partial void OnIsCopiedSelfAttestedChanged();
        partial void OnIsSEZChanging(System.Nullable<bool> value);
        partial void OnIsSEZChanged();
        partial void OnBankHolderNameChanging(string value);
        partial void OnBankHolderNameChanged();
        partial void OnIsSAPSentChanging(System.Nullable<bool> value);
        partial void OnIsSAPSentChanged();
        partial void OnSAPTempNumberChanging(string value);
        partial void OnSAPTempNumberChanged();
        partial void OnStartTempDateChanging(System.Nullable<System.DateTime> value);
        partial void OnStartTempDateChanged();
        partial void OnEndTempTimeChanging(System.Nullable<System.DateTime> value);
        partial void OnEndTempTimeChanged();
        partial void OnName1JointChanging(string value);
        partial void OnName1JointChanged();
        partial void OnName2JointChanging(string value);
        partial void OnName2JointChanged();
        #endregion

        public NEW_CON_APPLICATION_FORM()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Id", DbType = "UniqueIdentifier NOT NULL", IsPrimaryKey = true)]
        public System.Guid Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if ((this._Id != value))
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging();
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ApplicationNumber", DbType = "NVarChar(500)")]
        public string ApplicationNumber
        {
            get
            {
                return this._ApplicationNumber;
            }
            set
            {
                if ((this._ApplicationNumber != value))
                {
                    this.OnApplicationNumberChanging(value);
                    this.SendPropertyChanging();
                    this._ApplicationNumber = value;
                    this.SendPropertyChanged("ApplicationNumber");
                    this.OnApplicationNumberChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AccountNumber", DbType = "NVarChar(500)")]
        public string AccountNumber
        {
            get
            {
                return this._AccountNumber;
            }
            set
            {
                if ((this._AccountNumber != value))
                {
                    this.OnAccountNumberChanging(value);
                    this.SendPropertyChanging();
                    this._AccountNumber = value;
                    this.SendPropertyChanged("AccountNumber");
                    this.OnAccountNumberChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ApplicationType", DbType = "NVarChar(400)")]
        public string ApplicationType
        {
            get
            {
                return this._ApplicationType;
            }
            set
            {
                if ((this._ApplicationType != value))
                {
                    this.OnApplicationTypeChanging(value);
                    this.SendPropertyChanging();
                    this._ApplicationType = value;
                    this.SendPropertyChanged("ApplicationType");
                    this.OnApplicationTypeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PeriodOfSupplyFrom", DbType = "DateTime")]
        public System.Nullable<System.DateTime> PeriodOfSupplyFrom
        {
            get
            {
                return this._PeriodOfSupplyFrom;
            }
            set
            {
                if ((this._PeriodOfSupplyFrom != value))
                {
                    this.OnPeriodOfSupplyFromChanging(value);
                    this.SendPropertyChanging();
                    this._PeriodOfSupplyFrom = value;
                    this.SendPropertyChanged("PeriodOfSupplyFrom");
                    this.OnPeriodOfSupplyFromChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PeriodOfSupplyTo", DbType = "DateTime")]
        public System.Nullable<System.DateTime> PeriodOfSupplyTo
        {
            get
            {
                return this._PeriodOfSupplyTo;
            }
            set
            {
                if ((this._PeriodOfSupplyTo != value))
                {
                    this.OnPeriodOfSupplyToChanging(value);
                    this.SendPropertyChanging();
                    this._PeriodOfSupplyTo = value;
                    this.SendPropertyChanged("PeriodOfSupplyTo");
                    this.OnPeriodOfSupplyToChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ApplicationTitle", DbType = "NVarChar(400)")]
        public string ApplicationTitle
        {
            get
            {
                return this._ApplicationTitle;
            }
            set
            {
                if ((this._ApplicationTitle != value))
                {
                    this.OnApplicationTitleChanging(value);
                    this.SendPropertyChanging();
                    this._ApplicationTitle = value;
                    this.SendPropertyChanged("ApplicationTitle");
                    this.OnApplicationTitleChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_FirstName", DbType = "NVarChar(400)")]
        public string FirstName
        {
            get
            {
                return this._FirstName;
            }
            set
            {
                if ((this._FirstName != value))
                {
                    this.OnFirstNameChanging(value);
                    this.SendPropertyChanging();
                    this._FirstName = value;
                    this.SendPropertyChanged("FirstName");
                    this.OnFirstNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MiddleName", DbType = "NVarChar(400)")]
        public string MiddleName
        {
            get
            {
                return this._MiddleName;
            }
            set
            {
                if ((this._MiddleName != value))
                {
                    this.OnMiddleNameChanging(value);
                    this.SendPropertyChanging();
                    this._MiddleName = value;
                    this.SendPropertyChanged("MiddleName");
                    this.OnMiddleNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LastName", DbType = "NVarChar(400)")]
        public string LastName
        {
            get
            {
                return this._LastName;
            }
            set
            {
                if ((this._LastName != value))
                {
                    this.OnLastNameChanging(value);
                    this.SendPropertyChanging();
                    this._LastName = value;
                    this.SendPropertyChanged("LastName");
                    this.OnLastNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_OrganizationName", DbType = "NVarChar(500)")]
        public string OrganizationName
        {
            get
            {
                return this._OrganizationName;
            }
            set
            {
                if ((this._OrganizationName != value))
                {
                    this.OnOrganizationNameChanging(value);
                    this.SendPropertyChanging();
                    this._OrganizationName = value;
                    this.SendPropertyChanged("OrganizationName");
                    this.OnOrganizationNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DateOfBirth", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DateOfBirth
        {
            get
            {
                return this._DateOfBirth;
            }
            set
            {
                if ((this._DateOfBirth != value))
                {
                    this.OnDateOfBirthChanging(value);
                    this.SendPropertyChanging();
                    this._DateOfBirth = value;
                    this.SendPropertyChanged("DateOfBirth");
                    this.OnDateOfBirthChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DateOfBirthJoint1", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DateOfBirthJoint1
        {
            get
            {
                return this._DateOfBirthJoint1;
            }
            set
            {
                if ((this._DateOfBirthJoint1 != value))
                {
                    this.OnDateOfBirthJoint1Changing(value);
                    this.SendPropertyChanging();
                    this._DateOfBirthJoint1 = value;
                    this.SendPropertyChanged("DateOfBirthJoint1");
                    this.OnDateOfBirthJoint1Changed();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AddressOfSupply", DbType = "NVarChar(MAX)")]
        public string AddressOfSupply
        {
            get
            {
                return this._AddressOfSupply;
            }
            set
            {
                if ((this._AddressOfSupply != value))
                {
                    this.OnAddressOfSupplyChanging(value);
                    this.SendPropertyChanging();
                    this._AddressOfSupply = value;
                    this.SendPropertyChanged("AddressOfSupply");
                    this.OnAddressOfSupplyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Pincode", DbType = "NVarChar(400)")]
        public string Pincode
        {
            get
            {
                return this._Pincode;
            }
            set
            {
                if ((this._Pincode != value))
                {
                    this.OnPincodeChanging(value);
                    this.SendPropertyChanging();
                    this._Pincode = value;
                    this.SendPropertyChanged("Pincode");
                    this.OnPincodeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Surburb", DbType = "NVarChar(400)")]
        public string Surburb
        {
            get
            {
                return this._Surburb;
            }
            set
            {
                if ((this._Surburb != value))
                {
                    this.OnSurburbChanging(value);
                    this.SendPropertyChanging();
                    this._Surburb = value;
                    this.SendPropertyChanged("Surburb");
                    this.OnSurburbChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BillingAddressDifferentFromSupply", DbType = "NVarChar(400)")]
        public string BillingAddressDifferentFromSupply
        {
            get
            {
                return this._BillingAddressDifferentFromSupply;
            }
            set
            {
                if ((this._BillingAddressDifferentFromSupply != value))
                {
                    this.OnBillingAddressDifferentFromSupplyChanging(value);
                    this.SendPropertyChanging();
                    this._BillingAddressDifferentFromSupply = value;
                    this.SendPropertyChanged("BillingAddressDifferentFromSupply");
                    this.OnBillingAddressDifferentFromSupplyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BillingAddress", DbType = "NVarChar(MAX)")]
        public string BillingAddress
        {
            get
            {
                return this._BillingAddress;
            }
            set
            {
                if ((this._BillingAddress != value))
                {
                    this.OnBillingAddressChanging(value);
                    this.SendPropertyChanging();
                    this._BillingAddress = value;
                    this.SendPropertyChanged("BillingAddress");
                    this.OnBillingAddressChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BillingSuburb", DbType = "NVarChar(400)")]
        public string BillingSuburb
        {
            get
            {
                return this._BillingSuburb;
            }
            set
            {
                if ((this._BillingSuburb != value))
                {
                    this.OnBillingSuburbChanging(value);
                    this.SendPropertyChanging();
                    this._BillingSuburb = value;
                    this.SendPropertyChanged("BillingSuburb");
                    this.OnBillingSuburbChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BillingPincode", DbType = "NVarChar(400)")]
        public string BillingPincode
        {
            get
            {
                return this._BillingPincode;
            }
            set
            {
                if ((this._BillingPincode != value))
                {
                    this.OnBillingPincodeChanging(value);
                    this.SendPropertyChanging();
                    this._BillingPincode = value;
                    this.SendPropertyChanged("BillingPincode");
                    this.OnBillingPincodeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AddressIncaseOfRental", DbType = "NVarChar(400)")]
        public string AddressIncaseOfRental
        {
            get
            {
                return this._AddressIncaseOfRental;
            }
            set
            {
                if ((this._AddressIncaseOfRental != value))
                {
                    this.OnAddressIncaseOfRentalChanging(value);
                    this.SendPropertyChanging();
                    this._AddressIncaseOfRental = value;
                    this.SendPropertyChanged("AddressIncaseOfRental");
                    this.OnAddressIncaseOfRentalChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AddressOfRental", DbType = "NVarChar(MAX)")]
        public string AddressOfRental
        {
            get
            {
                return this._AddressOfRental;
            }
            set
            {
                if ((this._AddressOfRental != value))
                {
                    this.OnAddressOfRentalChanging(value);
                    this.SendPropertyChanging();
                    this._AddressOfRental = value;
                    this.SendPropertyChanged("AddressOfRental");
                    this.OnAddressOfRentalChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NameOfRental", DbType = "NVarChar(400)")]
        public string NameOfRental
        {
            get
            {
                return this._NameOfRental;
            }
            set
            {
                if ((this._NameOfRental != value))
                {
                    this.OnNameOfRentalChanging(value);
                    this.SendPropertyChanging();
                    this._NameOfRental = value;
                    this.SendPropertyChanged("NameOfRental");
                    this.OnNameOfRentalChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_RentalContactNo", DbType = "NVarChar(400)")]
        public string RentalContactNo
        {
            get
            {
                return this._RentalContactNo;
            }
            set
            {
                if ((this._RentalContactNo != value))
                {
                    this.OnRentalContactNoChanging(value);
                    this.SendPropertyChanging();
                    this._RentalContactNo = value;
                    this.SendPropertyChanged("RentalContactNo");
                    this.OnRentalContactNoChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_RentalSuburb", DbType = "NVarChar(400)")]
        public string RentalSuburb
        {
            get
            {
                return this._RentalSuburb;
            }
            set
            {
                if ((this._RentalSuburb != value))
                {
                    this.OnRentalSuburbChanging(value);
                    this.SendPropertyChanging();
                    this._RentalSuburb = value;
                    this.SendPropertyChanged("RentalSuburb");
                    this.OnRentalSuburbChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_RentalPincode", DbType = "NVarChar(400)")]
        public string RentalPincode
        {
            get
            {
                return this._RentalPincode;
            }
            set
            {
                if ((this._RentalPincode != value))
                {
                    this.OnRentalPincodeChanging(value);
                    this.SendPropertyChanging();
                    this._RentalPincode = value;
                    this.SendPropertyChanged("RentalPincode");
                    this.OnRentalPincodeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_RentalOwnerEmail", DbType = "NVarChar(400)")]
        public string RentalOwnerEmail
        {
            get
            {
                return this._RentalOwnerEmail;
            }
            set
            {
                if ((this._RentalOwnerEmail != value))
                {
                    this.OnRentalOwnerEmailChanging(value);
                    this.SendPropertyChanging();
                    this._RentalOwnerEmail = value;
                    this.SendPropertyChanged("RentalOwnerEmail");
                    this.OnRentalOwnerEmailChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MobileNumber", DbType = "NVarChar(400)")]
        public string MobileNumber
        {
            get
            {
                return this._MobileNumber;
            }
            set
            {
                if ((this._MobileNumber != value))
                {
                    this.OnMobileNumberChanging(value);
                    this.SendPropertyChanging();
                    this._MobileNumber = value;
                    this.SendPropertyChanged("MobileNumber");
                    this.OnMobileNumberChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Email", DbType = "NVarChar(400)")]
        public string Email
        {
            get
            {
                return this._Email;
            }
            set
            {
                if ((this._Email != value))
                {
                    this.OnEmailChanging(value);
                    this.SendPropertyChanging();
                    this._Email = value;
                    this.SendPropertyChanged("Email");
                    this.OnEmailChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LandlineNumber", DbType = "NVarChar(400)")]
        public string LandlineNumber
        {
            get
            {
                return this._LandlineNumber;
            }
            set
            {
                if ((this._LandlineNumber != value))
                {
                    this.OnLandlineNumberChanging(value);
                    this.SendPropertyChanging();
                    this._LandlineNumber = value;
                    this.SendPropertyChanged("LandlineNumber");
                    this.OnLandlineNumberChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BillLanguage", DbType = "NVarChar(400)")]
        public string BillLanguage
        {
            get
            {
                return this._BillLanguage;
            }
            set
            {
                if ((this._BillLanguage != value))
                {
                    this.OnBillLanguageChanging(value);
                    this.SendPropertyChanging();
                    this._BillLanguage = value;
                    this.SendPropertyChanged("BillLanguage");
                    this.OnBillLanguageChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BillingFormat", DbType = "NVarChar(400)")]
        public string BillingFormat
        {
            get
            {
                return this._BillingFormat;
            }
            set
            {
                if ((this._BillingFormat != value))
                {
                    this.OnBillingFormatChanging(value);
                    this.SendPropertyChanging();
                    this._BillingFormat = value;
                    this.SendPropertyChanged("BillingFormat");
                    this.OnBillingFormatChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MICR", DbType = "NVarChar(400)")]
        public string MICR
        {
            get
            {
                return this._MICR;
            }
            set
            {
                if ((this._MICR != value))
                {
                    this.OnMICRChanging(value);
                    this.SendPropertyChanging();
                    this._MICR = value;
                    this.SendPropertyChanged("MICR");
                    this.OnMICRChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TypeOfAccount", DbType = "NVarChar(400)")]
        public string TypeOfAccount
        {
            get
            {
                return this._TypeOfAccount;
            }
            set
            {
                if ((this._TypeOfAccount != value))
                {
                    this.OnTypeOfAccountChanging(value);
                    this.SendPropertyChanging();
                    this._TypeOfAccount = value;
                    this.SendPropertyChanged("TypeOfAccount");
                    this.OnTypeOfAccountChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Bank", DbType = "NVarChar(400)")]
        public string Bank
        {
            get
            {
                return this._Bank;
            }
            set
            {
                if ((this._Bank != value))
                {
                    this.OnBankChanging(value);
                    this.SendPropertyChanging();
                    this._Bank = value;
                    this.SendPropertyChanged("Bank");
                    this.OnBankChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Branch", DbType = "NVarChar(400)")]
        public string Branch
        {
            get
            {
                return this._Branch;
            }
            set
            {
                if ((this._Branch != value))
                {
                    this.OnBranchChanging(value);
                    this.SendPropertyChanging();
                    this._Branch = value;
                    this.SendPropertyChanged("Branch");
                    this.OnBranchChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BankAccountNumber", DbType = "NVarChar(400)")]
        public string BankAccountNumber
        {
            get
            {
                return this._BankAccountNumber;
            }
            set
            {
                if ((this._BankAccountNumber != value))
                {
                    this.OnBankAccountNumberChanging(value);
                    this.SendPropertyChanging();
                    this._BankAccountNumber = value;
                    this.SendPropertyChanged("BankAccountNumber");
                    this.OnBankAccountNumberChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CreatedDate", DbType = "DateTime")]
        public System.Nullable<System.DateTime> CreatedDate
        {
            get
            {
                return this._CreatedDate;
            }
            set
            {
                if ((this._CreatedDate != value))
                {
                    this.OnCreatedDateChanging(value);
                    this.SendPropertyChanging();
                    this._CreatedDate = value;
                    this.SendPropertyChanged("CreatedDate");
                    this.OnCreatedDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_FormName", DbType = "NVarChar(400)")]
        public string FormName
        {
            get
            {
                return this._FormName;
            }
            set
            {
                if ((this._FormName != value))
                {
                    this.OnFormNameChanging(value);
                    this.SendPropertyChanging();
                    this._FormName = value;
                    this.SendPropertyChanged("FormName");
                    this.OnFormNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ModifiedDate", DbType = "DateTime")]
        public System.Nullable<System.DateTime> ModifiedDate
        {
            get
            {
                return this._ModifiedDate;
            }
            set
            {
                if ((this._ModifiedDate != value))
                {
                    this.OnModifiedDateChanging(value);
                    this.SendPropertyChanging();
                    this._ModifiedDate = value;
                    this.SendPropertyChanged("ModifiedDate");
                    this.OnModifiedDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Status", DbType = "Int")]
        public System.Nullable<int> Status
        {
            get
            {
                return this._Status;
            }
            set
            {
                if ((this._Status != value))
                {
                    this.OnStatusChanging(value);
                    this.SendPropertyChanging();
                    this._Status = value;
                    this.SendPropertyChanged("Status");
                    this.OnStatusChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ApplicationModel", DbType = "NVarChar(500)")]
        public string ApplicationModel
        {
            get
            {
                return this._ApplicationModel;
            }
            set
            {
                if ((this._ApplicationModel != value))
                {
                    this.OnApplicationModelChanging(value);
                    this.SendPropertyChanging();
                    this._ApplicationModel = value;
                    this.SendPropertyChanged("ApplicationModel");
                    this.OnApplicationModelChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsGreenTariffApplied", DbType = "Bit")]
        public System.Nullable<bool> IsGreenTariffApplied
        {
            get
            {
                return this._IsGreenTariffApplied;
            }
            set
            {
                if ((this._IsGreenTariffApplied != value))
                {
                    this.OnIsGreenTariffAppliedChanging(value);
                    this.SendPropertyChanging();
                    this._IsGreenTariffApplied = value;
                    this.SendPropertyChanged("IsGreenTariffApplied");
                    this.OnIsGreenTariffAppliedChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_GreenTariff", DbType = "NVarChar(20)")]
        public string GreenTariff
        {
            get
            {
                return this._GreenTariff;
            }
            set
            {
                if ((this._GreenTariff != value))
                {
                    this.OnGreenTariffChanging(value);
                    this.SendPropertyChanging();
                    this._GreenTariff = value;
                    this.SendPropertyChanged("GreenTariff");
                    this.OnGreenTariffChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ApplicationSubType", DbType = "NVarChar(50)")]
        public string ApplicationSubType
        {
            get
            {
                return this._ApplicationSubType;
            }
            set
            {
                if ((this._ApplicationSubType != value))
                {
                    this.OnApplicationSubTypeChanging(value);
                    this.SendPropertyChanging();
                    this._ApplicationSubType = value;
                    this.SendPropertyChanged("ApplicationSubType");
                    this.OnApplicationSubTypeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsExistingCustomer", DbType = "NVarChar(10)")]
        public string IsExistingCustomer
        {
            get
            {
                return this._IsExistingCustomer;
            }
            set
            {
                if ((this._IsExistingCustomer != value))
                {
                    this.OnIsExistingCustomerChanging(value);
                    this.SendPropertyChanging();
                    this._IsExistingCustomer = value;
                    this.SendPropertyChanged("IsExistingCustomer");
                    this.OnIsExistingCustomerChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CANumber", DbType = "NVarChar(500)")]
        public string CANumber
        {
            get
            {
                return this._CANumber;
            }
            set
            {
                if ((this._CANumber != value))
                {
                    this.OnCANumberChanging(value);
                    this.SendPropertyChanging();
                    this._CANumber = value;
                    this.SendPropertyChanged("CANumber");
                    this.OnCANumberChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsJoint", DbType = "Bit")]
        public System.Nullable<bool> IsJoint
        {
            get
            {
                return this._IsJoint;
            }
            set
            {
                if ((this._IsJoint != value))
                {
                    this.OnIsJointChanging(value);
                    this.SendPropertyChanging();
                    this._IsJoint = value;
                    this.SendPropertyChanged("IsJoint");
                    this.OnIsJointChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ApplicantType", DbType = "Bit")]
        public System.Nullable<bool> ApplicantType
        {
            get
            {
                return this._ApplicantType;
            }
            set
            {
                if ((this._ApplicantType != value))
                {
                    this.OnApplicantTypeChanging(value);
                    this.SendPropertyChanging();
                    this._ApplicantType = value;
                    this.SendPropertyChanged("ApplicantType");
                    this.OnApplicantTypeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_GovernmentType", DbType = "NVarChar(500)")]
        public string GovernmentType
        {
            get
            {
                return this._GovernmentType;
            }
            set
            {
                if ((this._GovernmentType != value))
                {
                    this.OnGovernmentTypeChanging(value);
                    this.SendPropertyChanging();
                    this._GovernmentType = value;
                    this.SendPropertyChanged("GovernmentType");
                    this.OnGovernmentTypeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsTermConditionAccepted", DbType = "Bit")]
        public System.Nullable<bool> IsTermConditionAccepted
        {
            get
            {
                return this._IsTermConditionAccepted;
            }
            set
            {
                if ((this._IsTermConditionAccepted != value))
                {
                    this.OnIsTermConditionAcceptedChanging(value);
                    this.SendPropertyChanging();
                    this._IsTermConditionAccepted = value;
                    this.SendPropertyChanged("IsTermConditionAccepted");
                    this.OnIsTermConditionAcceptedChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsCopiedSelfAttested", DbType = "Bit")]
        public System.Nullable<bool> IsCopiedSelfAttested
        {
            get
            {
                return this._IsCopiedSelfAttested;
            }
            set
            {
                if ((this._IsCopiedSelfAttested != value))
                {
                    this.OnIsCopiedSelfAttestedChanging(value);
                    this.SendPropertyChanging();
                    this._IsCopiedSelfAttested = value;
                    this.SendPropertyChanged("IsCopiedSelfAttested");
                    this.OnIsCopiedSelfAttestedChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsSEZ", DbType = "Bit")]
        public System.Nullable<bool> IsSEZ
        {
            get
            {
                return this._IsSEZ;
            }
            set
            {
                if ((this._IsSEZ != value))
                {
                    this.OnIsSEZChanging(value);
                    this.SendPropertyChanging();
                    this._IsSEZ = value;
                    this.SendPropertyChanged("IsSEZ");
                    this.OnIsSEZChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BankHolderName", DbType = "NVarChar(100)")]
        public string BankHolderName
        {
            get
            {
                return this._BankHolderName;
            }
            set
            {
                if ((this._BankHolderName != value))
                {
                    this.OnBankHolderNameChanging(value);
                    this.SendPropertyChanging();
                    this._BankHolderName = value;
                    this.SendPropertyChanged("BankHolderName");
                    this.OnBankHolderNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsSAPSent", DbType = "Bit")]
        public System.Nullable<bool> IsSAPSent
        {
            get
            {
                return this._IsSAPSent;
            }
            set
            {
                if ((this._IsSAPSent != value))
                {
                    this.OnIsSAPSentChanging(value);
                    this.SendPropertyChanging();
                    this._IsSAPSent = value;
                    this.SendPropertyChanged("IsSAPSent");
                    this.OnIsSAPSentChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SAPTempNumber", DbType = "NVarChar(500)")]
        public string SAPTempNumber
        {
            get
            {
                return this._SAPTempNumber;
            }
            set
            {
                if ((this._SAPTempNumber != value))
                {
                    this.OnSAPTempNumberChanging(value);
                    this.SendPropertyChanging();
                    this._SAPTempNumber = value;
                    this.SendPropertyChanged("SAPTempNumber");
                    this.OnSAPTempNumberChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_StartTempDate", DbType = "DateTime")]
        public System.Nullable<System.DateTime> StartTempDate
        {
            get
            {
                return this._StartTempDate;
            }
            set
            {
                if ((this._StartTempDate != value))
                {
                    this.OnStartTempDateChanging(value);
                    this.SendPropertyChanging();
                    this._StartTempDate = value;
                    this.SendPropertyChanged("StartTempDate");
                    this.OnStartTempDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EndTempTime", DbType = "DateTime")]
        public System.Nullable<System.DateTime> EndTempTime
        {
            get
            {
                return this._EndTempTime;
            }
            set
            {
                if ((this._EndTempTime != value))
                {
                    this.OnEndTempTimeChanging(value);
                    this.SendPropertyChanging();
                    this._EndTempTime = value;
                    this.SendPropertyChanged("EndTempTime");
                    this.OnEndTempTimeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Name1Joint", DbType = "NVarChar(500)")]
        public string Name1Joint
        {
            get
            {
                return this._Name1Joint;
            }
            set
            {
                if ((this._Name1Joint != value))
                {
                    this.OnName1JointChanging(value);
                    this.SendPropertyChanging();
                    this._Name1Joint = value;
                    this.SendPropertyChanged("Name1Joint");
                    this.OnName1JointChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Name2Joint", DbType = "NVarChar(500)")]
        public string Name2Joint
        {
            get
            {
                return this._Name2Joint;
            }
            set
            {
                if ((this._Name2Joint != value))
                {
                    this.OnName2JointChanging(value);
                    this.SendPropertyChanging();
                    this._Name2Joint = value;
                    this.SendPropertyChanged("Name2Joint");
                    this.OnName2JointChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.RatusRevamp")]
    public partial class RatusRevamp : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private long _Id;

        private string _CANumber;

        private string _CategoryName;

        private string _Rating;

        private string _AppreciationNote;

        private System.Nullable<System.DateTime> _CreatedDate;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(long value);
        partial void OnIdChanged();
        partial void OnCANumberChanging(string value);
        partial void OnCANumberChanged();
        partial void OnCategoryNameChanging(string value);
        partial void OnCategoryNameChanged();
        partial void OnRatingChanging(string value);
        partial void OnRatingChanged();
        partial void OnAppreciationNoteChanging(string value);
        partial void OnAppreciationNoteChanged();
        partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
        partial void OnCreatedDateChanged();
        #endregion

        public RatusRevamp()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Id", DbType = "BigInt NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public long Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if ((this._Id != value))
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging();
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CANumber", DbType = "NVarChar(10)")]
        public string CANumber
        {
            get
            {
                return this._CANumber;
            }
            set
            {
                if ((this._CANumber != value))
                {
                    this.OnCANumberChanging(value);
                    this.SendPropertyChanging();
                    this._CANumber = value;
                    this.SendPropertyChanged("CANumber");
                    this.OnCANumberChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CategoryName", DbType = "NVarChar(20)")]
        public string CategoryName
        {
            get
            {
                return this._CategoryName;
            }
            set
            {
                if ((this._CategoryName != value))
                {
                    this.OnCategoryNameChanging(value);
                    this.SendPropertyChanging();
                    this._CategoryName = value;
                    this.SendPropertyChanged("CategoryName");
                    this.OnCategoryNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Rating", DbType = "NVarChar(2)")]
        public string Rating
        {
            get
            {
                return this._Rating;
            }
            set
            {
                if ((this._Rating != value))
                {
                    this.OnRatingChanging(value);
                    this.SendPropertyChanging();
                    this._Rating = value;
                    this.SendPropertyChanged("Rating");
                    this.OnRatingChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AppreciationNote", DbType = "NVarChar(500)")]
        public string AppreciationNote
        {
            get
            {
                return this._AppreciationNote;
            }
            set
            {
                if ((this._AppreciationNote != value))
                {
                    this.OnAppreciationNoteChanging(value);
                    this.SendPropertyChanging();
                    this._AppreciationNote = value;
                    this.SendPropertyChanged("AppreciationNote");
                    this.OnAppreciationNoteChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CreatedDate", DbType = "DateTime")]
        public System.Nullable<System.DateTime> CreatedDate
        {
            get
            {
                return this._CreatedDate;
            }
            set
            {
                if ((this._CreatedDate != value))
                {
                    this.OnCreatedDateChanging(value);
                    this.SendPropertyChanging();
                    this._CreatedDate = value;
                    this.SendPropertyChanged("CreatedDate");
                    this.OnCreatedDateChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.CashFreeOrderDetails")]
    public partial class CashFreeOrderDetail : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private long _Id;

        private string _OrderNo;

        private string _OrderToken;

        private string _AccountNo;

        private string _TimeStamp;

        private string _TranAuthDate;

        private string _StatusCode;

        private string _StatusDesc;

        private string _RespCode;

        private string _PaymentLink;

        private string _SettlementAmount;

        private string _SettlementCurrency;

        private System.Nullable<System.DateTime> _Created_Date;

        private string _Response_Msg;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(long value);
        partial void OnIdChanged();
        partial void OnOrderNoChanging(string value);
        partial void OnOrderNoChanged();
        partial void OnOrderTokenChanging(string value);
        partial void OnOrderTokenChanged();
        partial void OnAccountNoChanging(string value);
        partial void OnAccountNoChanged();
        partial void OnTimeStampChanging(string value);
        partial void OnTimeStampChanged();
        partial void OnTranAuthDateChanging(string value);
        partial void OnTranAuthDateChanged();
        partial void OnStatusCodeChanging(string value);
        partial void OnStatusCodeChanged();
        partial void OnStatusDescChanging(string value);
        partial void OnStatusDescChanged();
        partial void OnRespCodeChanging(string value);
        partial void OnRespCodeChanged();
        partial void OnPaymentLinkChanging(string value);
        partial void OnPaymentLinkChanged();
        partial void OnSettlementAmountChanging(string value);
        partial void OnSettlementAmountChanged();
        partial void OnSettlementCurrencyChanging(string value);
        partial void OnSettlementCurrencyChanged();
        partial void OnCreated_DateChanging(System.Nullable<System.DateTime> value);
        partial void OnCreated_DateChanged();
        partial void OnResponse_MsgChanging(string value);
        partial void OnResponse_MsgChanged();
        #endregion

        public CashFreeOrderDetail()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Id", AutoSync = AutoSync.OnInsert, DbType = "BigInt NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public long Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if ((this._Id != value))
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging();
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_OrderNo", DbType = "NVarChar(50)")]
        public string OrderNo
        {
            get
            {
                return this._OrderNo;
            }
            set
            {
                if ((this._OrderNo != value))
                {
                    this.OnOrderNoChanging(value);
                    this.SendPropertyChanging();
                    this._OrderNo = value;
                    this.SendPropertyChanged("OrderNo");
                    this.OnOrderNoChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_OrderToken", DbType = "NVarChar(50)")]
        public string OrderToken
        {
            get
            {
                return this._OrderToken;
            }
            set
            {
                if ((this._OrderToken != value))
                {
                    this.OnOrderTokenChanging(value);
                    this.SendPropertyChanging();
                    this._OrderToken = value;
                    this.SendPropertyChanged("OrderToken");
                    this.OnOrderTokenChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AccountNo", DbType = "NVarChar(50)")]
        public string AccountNo
        {
            get
            {
                return this._AccountNo;
            }
            set
            {
                if ((this._AccountNo != value))
                {
                    this.OnAccountNoChanging(value);
                    this.SendPropertyChanging();
                    this._AccountNo = value;
                    this.SendPropertyChanged("AccountNo");
                    this.OnAccountNoChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TimeStamp", DbType = "NVarChar(50)")]
        public string TimeStamp
        {
            get
            {
                return this._TimeStamp;
            }
            set
            {
                if ((this._TimeStamp != value))
                {
                    this.OnTimeStampChanging(value);
                    this.SendPropertyChanging();
                    this._TimeStamp = value;
                    this.SendPropertyChanged("TimeStamp");
                    this.OnTimeStampChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TranAuthDate", DbType = "NVarChar(50)")]
        public string TranAuthDate
        {
            get
            {
                return this._TranAuthDate;
            }
            set
            {
                if ((this._TranAuthDate != value))
                {
                    this.OnTranAuthDateChanging(value);
                    this.SendPropertyChanging();
                    this._TranAuthDate = value;
                    this.SendPropertyChanged("TranAuthDate");
                    this.OnTranAuthDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_StatusCode", DbType = "NVarChar(50)")]
        public string StatusCode
        {
            get
            {
                return this._StatusCode;
            }
            set
            {
                if ((this._StatusCode != value))
                {
                    this.OnStatusCodeChanging(value);
                    this.SendPropertyChanging();
                    this._StatusCode = value;
                    this.SendPropertyChanged("StatusCode");
                    this.OnStatusCodeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_StatusDesc", DbType = "NVarChar(50)")]
        public string StatusDesc
        {
            get
            {
                return this._StatusDesc;
            }
            set
            {
                if ((this._StatusDesc != value))
                {
                    this.OnStatusDescChanging(value);
                    this.SendPropertyChanging();
                    this._StatusDesc = value;
                    this.SendPropertyChanged("StatusDesc");
                    this.OnStatusDescChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_RespCode", DbType = "NVarChar(50)")]
        public string RespCode
        {
            get
            {
                return this._RespCode;
            }
            set
            {
                if ((this._RespCode != value))
                {
                    this.OnRespCodeChanging(value);
                    this.SendPropertyChanging();
                    this._RespCode = value;
                    this.SendPropertyChanged("RespCode");
                    this.OnRespCodeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PaymentLink", DbType = "NVarChar(200)")]
        public string PaymentLink
        {
            get
            {
                return this._PaymentLink;
            }
            set
            {
                if ((this._PaymentLink != value))
                {
                    this.OnPaymentLinkChanging(value);
                    this.SendPropertyChanging();
                    this._PaymentLink = value;
                    this.SendPropertyChanged("PaymentLink");
                    this.OnPaymentLinkChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SettlementAmount", DbType = "NVarChar(50)")]
        public string SettlementAmount
        {
            get
            {
                return this._SettlementAmount;
            }
            set
            {
                if ((this._SettlementAmount != value))
                {
                    this.OnSettlementAmountChanging(value);
                    this.SendPropertyChanging();
                    this._SettlementAmount = value;
                    this.SendPropertyChanged("SettlementAmount");
                    this.OnSettlementAmountChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SettlementCurrency", DbType = "NVarChar(50)")]
        public string SettlementCurrency
        {
            get
            {
                return this._SettlementCurrency;
            }
            set
            {
                if ((this._SettlementCurrency != value))
                {
                    this.OnSettlementCurrencyChanging(value);
                    this.SendPropertyChanging();
                    this._SettlementCurrency = value;
                    this.SendPropertyChanged("SettlementCurrency");
                    this.OnSettlementCurrencyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Created_Date", DbType = "DateTime")]
        public System.Nullable<System.DateTime> Created_Date
        {
            get
            {
                return this._Created_Date;
            }
            set
            {
                if ((this._Created_Date != value))
                {
                    this.OnCreated_DateChanging(value);
                    this.SendPropertyChanging();
                    this._Created_Date = value;
                    this.SendPropertyChanged("Created_Date");
                    this.OnCreated_DateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Response_Msg", DbType = "NVarChar(MAX)")]
        public string Response_Msg
        {
            get
            {
                return this._Response_Msg;
            }
            set
            {
                if ((this._Response_Msg != value))
                {
                    this.OnResponse_MsgChanging(value);
                    this.SendPropertyChanging();
                    this._Response_Msg = value;
                    this.SendPropertyChanged("Response_Msg");
                    this.OnResponse_MsgChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }
    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.SubmityourQuery")]
    public partial class SubmityourQuery : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _Id;

        private string _CategoryName;

        private string _Discription;

        private string _CompanyName;

        private string _SubCategory;

        private string _Name;

        private string _EmailId;

        private string _MobileNo;

        private string _Address;

        private string _Area;

        private string _City;

        private System.Nullable<System.DateTime> _CreatedDate;

        private string _Createdby;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnCategoryNameChanging(string value);
        partial void OnCategoryNameChanged();
        partial void OnDiscriptionChanging(string value);
        partial void OnDiscriptionChanged();
        partial void OnCompanyNameChanging(string value);
        partial void OnCompanyNameChanged();
        partial void OnSubCategoryChanging(string value);
        partial void OnSubCategoryChanged();
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
        partial void OnEmailIdChanging(string value);
        partial void OnEmailIdChanged();
        partial void OnMobileNoChanging(string value);
        partial void OnMobileNoChanged();
        partial void OnAddressChanging(string value);
        partial void OnAddressChanged();
        partial void OnAreaChanging(string value);
        partial void OnAreaChanged();
        partial void OnCityChanging(string value);
        partial void OnCityChanged();
        partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
        partial void OnCreatedDateChanged();
        partial void OnCreatedbyChanging(string value);
        partial void OnCreatedbyChanged();
        #endregion

        public SubmityourQuery()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Id", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if ((this._Id != value))
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging();
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CategoryName", DbType = "NVarChar(200)")]
        public string CategoryName
        {
            get
            {
                return this._CategoryName;
            }
            set
            {
                if ((this._CategoryName != value))
                {
                    this.OnCategoryNameChanging(value);
                    this.SendPropertyChanging();
                    this._CategoryName = value;
                    this.SendPropertyChanged("CategoryName");
                    this.OnCategoryNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Discription", DbType = "NVarChar(2000)")]
        public string Discription
        {
            get
            {
                return this._Discription;
            }
            set
            {
                if ((this._Discription != value))
                {
                    this.OnDiscriptionChanging(value);
                    this.SendPropertyChanging();
                    this._Discription = value;
                    this.SendPropertyChanged("Discription");
                    this.OnDiscriptionChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CompanyName", DbType = "NVarChar(200)")]
        public string CompanyName
        {
            get
            {
                return this._CompanyName;
            }
            set
            {
                if ((this._CompanyName != value))
                {
                    this.OnCompanyNameChanging(value);
                    this.SendPropertyChanging();
                    this._CompanyName = value;
                    this.SendPropertyChanged("CompanyName");
                    this.OnCompanyNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SubCategory", DbType = "NVarChar(200)")]
        public string SubCategory
        {
            get
            {
                return this._SubCategory;
            }
            set
            {
                if ((this._SubCategory != value))
                {
                    this.OnSubCategoryChanging(value);
                    this.SendPropertyChanging();
                    this._SubCategory = value;
                    this.SendPropertyChanged("SubCategory");
                    this.OnSubCategoryChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Name", DbType = "NVarChar(200)")]
        public string Name
        {
            get
            {
                return this._Name;
            }
            set
            {
                if ((this._Name != value))
                {
                    this.OnNameChanging(value);
                    this.SendPropertyChanging();
                    this._Name = value;
                    this.SendPropertyChanged("Name");
                    this.OnNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EmailId", DbType = "NVarChar(300)")]
        public string EmailId
        {
            get
            {
                return this._EmailId;
            }
            set
            {
                if ((this._EmailId != value))
                {
                    this.OnEmailIdChanging(value);
                    this.SendPropertyChanging();
                    this._EmailId = value;
                    this.SendPropertyChanged("EmailId");
                    this.OnEmailIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MobileNo", DbType = "NVarChar(100)")]
        public string MobileNo
        {
            get
            {
                return this._MobileNo;
            }
            set
            {
                if ((this._MobileNo != value))
                {
                    this.OnMobileNoChanging(value);
                    this.SendPropertyChanging();
                    this._MobileNo = value;
                    this.SendPropertyChanged("MobileNo");
                    this.OnMobileNoChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Address", DbType = "NVarChar(2000)")]
        public string Address
        {
            get
            {
                return this._Address;
            }
            set
            {
                if ((this._Address != value))
                {
                    this.OnAddressChanging(value);
                    this.SendPropertyChanging();
                    this._Address = value;
                    this.SendPropertyChanged("Address");
                    this.OnAddressChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Area", DbType = "NVarChar(100)")]
        public string Area
        {
            get
            {
                return this._Area;
            }
            set
            {
                if ((this._Area != value))
                {
                    this.OnAreaChanging(value);
                    this.SendPropertyChanging();
                    this._Area = value;
                    this.SendPropertyChanged("Area");
                    this.OnAreaChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_City", DbType = "NVarChar(100)")]
        public string City
        {
            get
            {
                return this._City;
            }
            set
            {
                if ((this._City != value))
                {
                    this.OnCityChanging(value);
                    this.SendPropertyChanging();
                    this._City = value;
                    this.SendPropertyChanged("City");
                    this.OnCityChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CreatedDate", DbType = "DateTime")]
        public System.Nullable<System.DateTime> CreatedDate
        {
            get
            {
                return this._CreatedDate;
            }
            set
            {
                if ((this._CreatedDate != value))
                {
                    this.OnCreatedDateChanging(value);
                    this.SendPropertyChanging();
                    this._CreatedDate = value;
                    this.SendPropertyChanged("CreatedDate");
                    this.OnCreatedDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Createdby", DbType = "NVarChar(100)")]
        public string Createdby
        {
            get
            {
                return this._Createdby;
            }
            set
            {
                if ((this._Createdby != value))
                {
                    this.OnCreatedbyChanging(value);
                    this.SendPropertyChanging();
                    this._Createdby = value;
                    this.SendPropertyChanged("Createdby");
                    this.OnCreatedbyChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }
}
#pragma warning restore 1591
