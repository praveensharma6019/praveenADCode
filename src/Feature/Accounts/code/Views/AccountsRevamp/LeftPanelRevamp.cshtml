@using Sitecore.Foundation.Dictionary.Extensions
@using Sitecore.Feature.Accounts.SessionHelper
@using Sitecore.Foundation.SitecoreExtensions.Extensions
@using Sitecore.Mvc.Configuration

@{
    var Elemodel = Session["UserLogin"] as Sitecore.Feature.Accounts.Models.DashboardModel;
    Sitecore.Data.Items.Item LeftPanelFolderItem = Sitecore.Context.Database.GetItem("{E954284E-DC50-4F21-9550-DF364760084B}");
    string[] itemsToShow = { "{0FC4B417-99EE-4A71-9262-22019F092A2D}", // MyAccount
                                "{1487286A-16E0-40E8-922B-5B0B1E09E7AE}", //NewConnection
                                "{5E2803EE-6029-49AC-BD21-BCAEBFFF7CFF}", //BillingAndPayments
                                "{176323A4-E2FC-4A85-8A81-B1BAB50798D7}" //Services
                               };
}

@if (LeftPanelFolderItem != null)
{
    using (Html.BeginRouteForm(MvcSettings.SitecoreRouteName, FormMethod.Post, new { }))
    {
        <div class="side-nav hide-on-med-and-down">
            @if (LeftPanelFolderItem.HasChildren)
            {
                <ul class="collapsible expandable z-depth-0" id="leftPanelNav">
                    @foreach (Sitecore.Data.Items.Item parentItem in LeftPanelFolderItem.GetChildren().Where(p => !string.IsNullOrEmpty(p["Title"]) && itemsToShow.Contains(p.ID.ToString())))
                    {
                        <li>
                            @if (parentItem != null)
                            {
                                Sitecore.Data.Fields.LinkField parentlinkfld = parentItem.Fields["LinkUrl"];
                                var parenturl = parentlinkfld != null && !string.IsNullOrEmpty(parentlinkfld.GetFriendlyUrl()) ? parentlinkfld.GetFriendlyUrl() : "javascript:void(0)";

                                <div class="collapsible-header items brand-gradient-left brand-gradient-thin outlined">
                                    <a href="@parenturl"><i class="@parentItem["Class"]"></i> @Html.Raw(parentItem["Title"])</a>
                                </div>
                                <div class="collapsible-body">
                                    @if (parentItem.HasChildren)
                                    {
                                        <div class="submenu" id="leftPanelSubMenu">
                                            @foreach (Sitecore.Data.Items.Item childItem in parentItem.GetChildren().Where(p => !string.IsNullOrEmpty(p["Title"])))
                                            {
                                                Sitecore.Data.Fields.LinkField childlinkfld = childItem.Fields["LinkUrl"];
                                                Sitecore.Data.Fields.LinkField childLoggedOutlinkfld = childItem.Fields["LoggedOutLink"];
                                                if (Elemodel != null)
                                                {
                                                    childlinkfld = childItem.Fields["LinkUrl"];
                                                }
                                                else if (childLoggedOutlinkfld != null && !string.IsNullOrEmpty(childLoggedOutlinkfld.GetFriendlyUrl()))
                                                {
                                                    childlinkfld = childItem.Fields["LoggedOutLink"];
                                                }
                                                var childurl = childlinkfld != null && !string.IsNullOrEmpty(childlinkfld.GetFriendlyUrl()) ? childlinkfld.GetFriendlyUrl() : "#";
                                                var childTarget = childlinkfld != null ? childlinkfld.Target : "";
                                                <a href="@childurl" target="@childTarget"
                                                   data-gaevent="side_pannel_interaction"
                                                   data-gaeventCategory="User Interaction"
                                                   data-gaeventAction="Side Pannel Interaction"
                                                   data-gaeventLabel="@Html.Raw(parentItem["Title"])| @Html.Raw(childItem["Title"])">
                                                    @Html.Raw(childItem["Title"])
                                                </a>
                                            }
                                        </div>
                                    }

                                </div>
                            }

                        </li>
                    }

                </ul>
            }

        </div>
    }
}

<script type="text/javascript">
    $(document).ready(function () {

        //$('.main-header').removeAttr('id');

        $('#leftPanelNav li').removeClass('active');

        //last part of current url using regrex
        //var currentUrl = location.pathname.replace(/.*\/(\w+)\/?$/, '$1').toLowerCase();
        var currentUrl = location.pathname.split('/');
        currentUrl = currentUrl[currentUrl.length - 1].toLowerCase();
        $('#leftPanelSubMenu a').each(function () {
            var elementUrl = $(this).attr('href').split('/');
            elementUrl = elementUrl[elementUrl.length - 1].toLowerCase();
            if (elementUrl != undefined) {
                elementUrl = elementUrl.replace(/.*\/(\w+)\/?$/, '$1').toLowerCase();
                if (elementUrl == currentUrl) {
                    $(this).addClass('active brand-gradient-parent brand-gradient-left brand-gradient-thin outlined');
                    $(this).closest('li').addClass('active');
                    //$(this).attr("href", "javascript:void(0)");
                    $(this).attr("disabled", "disabled");
                }
            }
        })
    })
</script>
