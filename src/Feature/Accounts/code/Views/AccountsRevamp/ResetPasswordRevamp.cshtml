@using Sitecore.Foundation.Dictionary.Extensions
@using Sitecore.Foundation.SitecoreExtensions.Extensions
@using Sitecore.Mvc.Configuration
@using CaptchaMvc;
@using CaptchaMvc.HtmlHelpers;
@model Sitecore.Feature.Accounts.Models.ResetPasswordInfo


@{
    Sitecore.Data.Items.Item contextItem = Sitecore.Context.Item;
}

@if (contextItem != null)
{
    var info = Session.GetAndRemove("UpdateMessage") as Sitecore.Foundation.Alerts.Models.InfoMessage;
    if (info != null)
    {
        Html.RenderPartial(Sitecore.Foundation.Alerts.Constants.InfoMessageViewElectricityRevamp, info);
    }

    <div class="col l6 s12 offset-l3">
        <div>
            <h1>@Html.Raw(contextItem["Title"])</h1>
            @using (Html.BeginRouteForm(MvcSettings.SitecoreRouteName, FormMethod.Post, new { @class = "form-signin", id = "frmResetPassword" }))
            {
                @Html.AddUniqueFormId()
                @Html.AntiForgeryToken()
                @Html.HiddenFor(x => x.UserID)
                @Html.HiddenFor(x => x.Token)
                <div class="card-with-form login-wrap section-container">
                    <div class="input-field custom input-has-icon">
                        @Html.PasswordFor(x => x.Password, new { @class = "form-control", @autocomplete = "off" })
                        <label class="active" for="ForgotUserName">@Html.Sitecore().Dictionary("Accounts/Reset Password/NewPassword", "Enter New Password")</label>
                        <div class="input-icon">
                            <span class="icon-holder waves-effect waves-light show-pass">
                                <i class="vi-show-password"></i>
                                <i class="vi-hide-password"></i>
                            </span>
                        </div>
                        @Html.ValidationMessageFor(x => x.Password, "", new { @class = "help-block" }, "p")
                        <p class="field-validation-error" id="Passworderror" style="display:none"></p>
                    </div>
                    <div class="input-field custom input-has-icon">
                        @Html.PasswordFor(x => x.ConfirmPassword, new { @class = "form-control", @autocomplete = "off" })
                        <label class="active" for="ForgotEmailAddress">@Html.Sitecore().Dictionary("Accounts/Reset Password/ConfirmPassword", "Re-type New Password")</label>
                        <div class="input-icon">
                            <span class="icon-holder waves-effect waves-light show-pass">
                                <i class="vi-show-password"></i>
                                <i class="vi-hide-password"></i>
                            </span>
                        </div>
                        @Html.ValidationMessageFor(x => x.ConfirmPassword, "", new { @class = "help-block" }, "p")
                        <p class="field-validation-error" id="ConfirmPassworderror" style="display:none"></p>
                    </div>
                    <div class="input-field custom">
                        <div class="captcha_box" id="resetPasswordPageCaptcha">
                            <div class="form-group pt-md-2 @Html.ValidationErrorFor(x => x.Captcha, "has-error")">
                                <label for="" class="">@Html.Sitecore().Dictionary("/Common/Captcha", "Captcha") <span class="required">*</span></label>
                                <div class="row captcha_box" style="padding-left:10px;">
                                    <div class="col-lg-12">
                                        <div class="g-recaptcha" data-sitekey="@Html.Sitecore().Dictionary("/Common/CaptchaKey", "6LdYFWgUAAAAALdZf_sC8BRN2uLPzcsxb2p192rf")"></div>
                                        @Html.ValidationMessageFor(x => x.Captcha, "", new { @class = "help-block" }, "p")
                                        <p class="field-validation-error" id="Captchaerror" style="display:none"></p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="h-right btn-group">
                        <button type="submit" class="waves-effect btn btn-continue login-btn resetPasswordSubmit">
                            @Html.Sitecore().Dictionary("/Accounts/Reset Password/Button/Submit", "Submit")
                        </button>
                    </div>
                </div>
            }
        </div>
    </div>
    <script src="@Html.Sitecore().Dictionary("/Common/CaptchaURL", "https://www.google.com/recaptcha/api.js")"></script>
    <script type="text/javascript">
        var resetPasswordPageCaptcha;
        var onloadCallback = function () {
            resetPasswordPageCaptcha = grecaptcha.render('resetPasswordPageCaptcha', {
                'sitekey': '6LdYFWgUAAAAALdZf_sC8BRN2uLPzcsxb2p192rf',
                'theme': 'light'
            });
        };

        $('.resetPasswordSubmit').click(function () {
            var isValid = true;
            if ($('#Password').val().trim() == '') {
                isValid = false;
                $('#Passworderror').show().html('Please enter a value for Password');
            } else {
                $('#Passworderror').hide().html('');
            }
            if ($('#ConfirmPassword').val().trim() == '') {
                isValid = false;
                $('#ConfirmPassworderror').show().html('Please enter a value for Confirm Password');
            } else {
                $('#ConfirmPassworderror').hide().html('');
            }

            var rpcaptcharesponse = grecaptcha.getResponse(resetPasswordPageCaptcha);  //changePassWordCaptcha
            if (!rpcaptcharesponse) {
                $('#Captchaerror').show().html('Please validate captcha to continue');
                isValid = false;
            }
            else {
                $('#Captchaerror').hide().html('');
            }
            return isValid;
        });
    </script>
}

