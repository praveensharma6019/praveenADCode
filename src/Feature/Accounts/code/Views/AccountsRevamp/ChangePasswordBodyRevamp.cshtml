@using Sitecore.Foundation.Dictionary.Extensions
@using Sitecore.Foundation.SitecoreExtensions.Extensions
@using Sitecore.Mvc.Configuration
@model Sitecore.Feature.Accounts.Models.ChangePassword

@if (Session["Passwordchangesuccess"] != null && Session["Passwordchangesuccess"].ToString() == "2")
{
    Session["Passwordchangesuccess"] = null;
    <script type="text/javascript">
        $(document).ready(function () {
            //debugger;
            dataLayer.push({
                'event': "my_profile_section_password_change",
                'eventCategory': "My Account",
                'eventAction': "My Profile Section Password Change",
                'eventLabel': "Submit",
                'business_user_id': $('#BusinessUserId').val(),
                'login_status': $('#login_status').val(),
                'ca_number': $('#GACANumber').val(),
                'page_type': $('head title').text()
            });
        });
    </script>
}

<div class="card brand-gradient section-inner-wrapper outlined card-with-form login-wrap">
    @using (Html.BeginRouteForm(MvcSettings.SitecoreRouteName, FormMethod.Post, new { id = "frmChnagePassword" }))
    {
        @Html.AddUniqueFormId()
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)
        <div class="submit-new-request">
            <div class="input-field custom" style="display:none;">
                @*@Html.DisplayTextFor(x => x.AccountNumber)*@
                @Html.TextBoxFor(x => x.AccountNumber, new { @class = "", id = "Accountnumber", @readonly = "readonly" })
                <label class="active" for="Accountnumber">
                    @Html.Sitecore().Dictionary("/Accounts/My Account/Profile/Change Password/Account Number", "Account Number")
                </label>
            </div>
            <div class="input-field custom" style="display:none;">
                @*@Html.DisplayTextFor(x => x.LoginName)*@
                @Html.TextBoxFor(x => x.LoginName, new { @class = "", id = "LoginName", @readonly = "readonly" })
                <label class="active" for="LoginName">
                    @Html.Sitecore().Dictionary("/Accounts/My Account/Profile/Change Password/Login Name", "Login Name")
                </label>
            </div>
            <div class="input-field custom input-has-icon @Html.ValidationErrorFor(x => x.OldPassword, "has-error")">
                @Html.PasswordFor(x => x.OldPassword, new { @class = "form-control reset-control", id = "OldPassword", @autocomplete = "off"})
                <label class="active" for="OldPassword">
                    @Html.Sitecore().Dictionary("/Accounts/My Account/Profile/Change Password/OldPassword", "Old Password")
                </label>
                <div class="input-icon">
                    <span class="icon-holder waves-effect waves-light show-pass">
                        <i class="vi-show-password"></i>
                        <i class="vi-hide-password"></i>
                    </span>
                </div>
                @Html.ValidationMessageFor(x => x.OldPassword, "", new { @class = "help-block" }, "p")
            <p class="field-validation-error" id="OldValidation" style="display:none"></p>
            </div>
            <div class="input-field custom input-has-icon @Html.ValidationErrorFor(x => x.Password, "has-error")">
                @Html.PasswordFor(x => x.Password, new { @class = "form-control reset-control", id = "Password", @autocomplete = "off" })


                <label class="active" for="Password">
                    @Html.Sitecore().Dictionary("/Accounts/My Account/Profile/Change Password/NewPassword", "New Password")
                </label>
                <div class="input-icon">
                    <span class="icon-holder waves-effect waves-light show-pass">
                        <i class="vi-show-password"></i>
                        <i class="vi-hide-password"></i>
                    </span>
                </div>
                @Html.ValidationMessageFor(x => x.Password, "", new { @class = "help-block" }, "p")
                <p class="field-validation-error" id="PasswordValidation" style="display:none"></p>
            </div>
            <div class="input-field custom input-has-icon @Html.ValidationErrorFor(x => x.ConfirmPassword, "has-error")">
                @Html.PasswordFor(x => x.ConfirmPassword, new { @class = "form-control reset-control", id = "ConfirmPassword", @autocomplete = "off" })

                <label class="active" for="ConfirmPassword">
                    @Html.Sitecore().Dictionary("/Accounts/My Account/Profile/Change Password/Confirm Password", "Re-type Password")
                </label>
                <div class="input-icon">
                    <span class="icon-holder waves-effect waves-light show-pass">
                        <i class="vi-show-password"></i>
                        <i class="vi-hide-password"></i>
                    </span>
                </div>
                @Html.ValidationMessageFor(x => x.ConfirmPassword, "", new { @class = "help-block" }, "p")
                <p class="field-validation-error" id="ConfirmValidation" style="display:none"></p>
            </div>
            <div class="input-field custom">
                <div class="captcha_box" id="changePassWordCaptcha">
                    <div class="form-group pt-md-2 @Html.ValidationErrorFor(x => x.Captcha, "has-error")">
                        <label for="" class="">@Html.Sitecore().Dictionary("/Common/Captcha", "Captcha") <span class="required">*</span></label>
                        <div class="row captcha_box" style="padding-left:10px;">
                            <div class="col-lg-12">
                                <div class="g-recaptcha" data-callback="changePassWordCaptcha" data-sitekey="6LdYFWgUAAAAALdZf_sC8BRN2uLPzcsxb2p192rf"></div>
                                @Html.ValidationMessageFor(x => x.Captcha, "", new { @class = "help-block" }, "p")
                                <p class="field-validation-error" id="ChangeCaptchaerror" style="display:none"></p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="h-right btn-group">
                <button type="button"
                        data-gaevent="my_profile_section_password_change"
                        data-gaeventCategory="My Account"
                        data-gaeventAction="My Profile Section Password Change"
                        data-gaeventLabel="Reset"
                        class="waves-effect waves-light btn-flat" id="btnReset" value="Reset" name="Reset" onclick="ResetElement('frmChnagePassword')">
                    @Html.Sitecore().Dictionary("/Accounts/My Account/Profile/Change Password/Button/Reset", "Reset")
                </button>
                <button type="submit" id="Submit" value="Submit" name="Submit" class="waves-effect waves-light btn frmChangePassword">
                    @Html.Sitecore().Dictionary("/Accounts/My Account/Profile/Change Password/Button/Submit", "Submit")
                </button>
            </div>
        </div>
    }
</div>

<script type="text/javascript">
    var changePassWordCaptcha;
    var onloadCallback = function () {
        changePassWordCaptcha = grecaptcha.render('changePassWordCaptcha', {
            'sitekey': '6LdYFWgUAAAAALdZf_sC8BRN2uLPzcsxb2p192rf',
            'theme': 'light'
        });
    };

    function ResetElement(formId) {
        var FormIdWithPrefix = jQuery("#" + formId);
        var resetInputField = FormIdWithPrefix.find(".reset-control");
        resetInputField.val("");
    }

    $('.frmChangePassword').click(function () {

        var isValid = true;
        var cpcaptcharesponse = grecaptcha.getResponse(1);  //changePassWordCaptcha

        if ($("#OldPassword").val() == "") {
            $('#OldValidation').show().html('Please enter a value for Old Password');
            isValid = false;
        }
        else {
            $('#OldValidation').hide().html('');
        }
        if ($("#Password").val() == "") {
            $('#PasswordValidation').show().html('Please enter a value for Current Password');
            isValid = false;
        }
        else {
            $('#PasswordValidation').hide().html('');
        }
        if ($("#ConfirmPassword").val() == "") {
            $('#ConfirmValidation').show().html('Please enter a value for Confirm Password');
            isValid = false;
        }
        else {
            $('#ConfirmValidation').hide().html('');
        }

        if (!cpcaptcharesponse) {
            $('#ChangeCaptchaerror').show().html('Please validate captcha to continue');
            isValid = false;
        }
        else {
            $('#ChangeCaptchaerror').hide().html('');
        }

       
        return isValid;
    });

</script>