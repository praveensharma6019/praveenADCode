@using Sitecore.Feature.Accounts
@using Sitecore.Feature.Accounts.Services
@using Sitecore.Foundation.Dictionary.Extensions
@using Sitecore.Foundation.SitecoreExtensions.Extensions
@using Sitecore.Mvc.Configuration
@using CaptchaMvc;
@using CaptchaMvc.HtmlHelpers;
@model Sitecore.Feature.Accounts.Models.LoginInfoComplaint

@{
    Sitecore.Data.Items.Item contextItem = Sitecore.Context.Item;

}

@if (contextItem != null)
{
    <div class="col l6 s12 offset-l3">
        <div>
            <h1>@Html.Raw(contextItem["Title"])</h1>
            @using (Html.BeginRouteForm(MvcSettings.SitecoreRouteName, FormMethod.Post, new { @class = "form-signin", ReturnUrl = Request.QueryString["ReturnUrl"] }))
            {
                @Html.AddUniqueFormId()
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true)
                @Html.HiddenFor(x => x.ReturnUrl)
                <div class="card-with-form login-wrap section-container">
                    <div class="input-field custom">
                        @Html.TextBoxFor(x => x.LoginName, new { @class = "validate", @autocomplete = "off", id = "LoginUserName", required = "required" })
                        <label class="active" for="LoginUserName">@Html.Sitecore().Dictionary("/Accounts/Login/Enter User Name", "Username")</label>
                        @Html.ValidationMessageFor(x => x.LoginName, "", new { @class = "help-block" }, "p")
                    </div>
                    <div class="input-field custom input-has-icon">
                        @Html.PasswordFor(x => x.Password, new { @class = "validate", id = "LoginPassword", @autocomplete = "off", required = "required" })
                        <label class="active" for="LoginPassword">@Html.Sitecore().Dictionary("/Accounts/Login/Password", "Password")</label>
                        <div class="input-icon">
                            <span class="icon-holder waves-effect waves-light show-pass">
                                <i class="vi-show-password"></i>

                                <i class="vi-hide-password"></i>
                            </span>
                        </div>
                        @Html.ValidationMessageFor(x => x.Password, "", new { @class = "help-block" }, "p")
                    </div>

                    <a class="forgot-pass" href="@Html.Sitecore().Dictionary("/sitecore/content/ElectricityNew/Global/Dictionary/Other Redirect URL/Login/Forgot Password URL", "/Forgot Password")">
                        @Html.Sitecore().Dictionary("/Accounts/Login/Forgot Password", "Forgot Username / Password?")
                    </a>
                    <div class="input-field custom">
                        <div class="captcha_box">
                            <div class="form-group pt-md-2 @Html.ValidationErrorFor(x => x.Captcha, "has-error")">
                                <label for="" class="">@Html.Sitecore().Dictionary("/Common/Captcha", "Captcha") <span class="required">*</span></label>
                                <div class="row captcha_box" style="padding-left:10px;">
                                    <div class="col-lg-12">
                                        <div class="g-recaptcha" data-sitekey="6LdYFWgUAAAAALdZf_sC8BRN2uLPzcsxb2p192rf"></div>
                                        @Html.ValidationMessageFor(x => x.Captcha, "", new { @class = "help-block" }, "p")
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>


                    <div class="h-right btn-group">
                        <input type="submit" name="loginWithCredentials" class="btn btn-continue full" value="@Html.Sitecore().Dictionary("/Accounts/Login/Login", "Login")">
                    </div>
                </div>
            }
            <div class="bordered-items section-container">
                <ul>
                    @if (Request.QueryString["afterpayment"] != null && Request.QueryString["afterpayment"] == "1")
                    {
                        <li>
                            @Html.Raw(Html.Sitecore().Dictionary("/Accounts/Login/AfterPaymentMessage", "Log in to access all the services, or continue with <a href='/' class='bold'>Quick Bill Payment</a> without logging in"))
                        </li>
                    }
                    <li>
                        @Html.Sitecore().Dictionary("/Accounts/Login/Not Yet Signed Up", "Not Yet Signed Up?")
                        <a href="@Html.Sitecore().Dictionary("/Other Redirect URL/Login/Registration URL", "/registration-validateotp")" class="bold">
                            @Html.Sitecore().Dictionary("/Accounts/Login/Button/Register Now", "Register Now")
                        </a>
                    </li>
                    <li>
                        @Html.Sitecore().Dictionary("/Common/Need some help", "Need some help?")
                        <a href="javascript:void(0)" 
                           data-gaevent="chat_now_cta_click"
                           data-gaeventCategory="CTA Click"
                           data-gaeventAction="Chat Now CTA Click"
                           data-gaeventLabel= "NA"
                           onclick="OpenElektra();" class="bold">@Html.Sitecore().Dictionary("/Common/Chat Now", "Chat Now")</a> @Html.Sitecore().Dictionary("/Common/or call", "or call")
                        <span class="ff-rb">@Html.Sitecore().Dictionary("/Common/PhoneNo", "19122")</span>
                    </li>
                </ul>
            </div>
        </div>
        @Html.Sitecore().Placeholder("divBenefitsContent")
    </div>
    <script src="@Html.Sitecore().Dictionary("/Common/CaptchaURL", "https://www.google.com/recaptcha/api.js")"></script>
}