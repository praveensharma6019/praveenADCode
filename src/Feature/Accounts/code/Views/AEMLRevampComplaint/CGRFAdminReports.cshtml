@using Sitecore.Foundation.Dictionary.Extensions
@using Sitecore.Foundation.SitecoreExtensions.Extensions
@using Sitecore.Mvc.Configuration
@using Sitecore.Feature.Accounts
@using Sitecore.Feature.Accounts.SessionHelper
@using CaptchaMvc;
@using CaptchaMvc.HtmlHelpers;
@model Sitecore.Feature.Accounts.Models.ComplaintReportModel
@{
    var complaintPortalHomePage = Sitecore.Context.Database.GetItem(Templates.ComplaintPortal.ComplaintPortalHomePageRevamp).Url();
    var ComplaintPortalFileCGRFComplaintPage = (Sitecore.Context.Database.GetItem(Templates.ComplaintPortal.ComplaintPortalAdminFileCGRFComplaintPageRevamp)).Url();
}

@if (Session["Message"] != null && !string.IsNullOrEmpty(Session["Message"].ToString()))
{
    <div class="form-group row">
        <input id="message" type="hidden" value="@Session["Message"].ToString()" />
    </div>
}
<section class="py-5" style="margin-top: -2rem;">
    <div class="container">
        @using (Html.BeginForm("Logout", "Accounts", FormMethod.Post))
        {
            <div class="row">
                <div class="col-sm-8 pb-3 text-left">
                    <p><span><b>Welcome, </b></span><b class="txt-orange">@UserSession.AEMLComplaintUserSessionContext.LoginName <span class="fa fa-user ml-2 mr-1"></span></b></p>
                </div>
                <div class="col-sm-4 pb-3">
                    <div class="text-right">
                        <button class="btn btn-primary" type="submit">
                            @Html.Sitecore().Dictionary("/ComplaintRegistration/Logout", "Logout")
                        </button>
                    </div>
                    <div class="clearfix"></div>
                </div>
            </div>
        }
        <hr />

        <div class="row" style="padding: 0rem 0rem;">
            <div class="panel w-100" style="margin-top: 2rem !important;">
                <h3 class="mb-2 txt-orange txt-md">Change selection and get required complaints:</h3>
                <div class="row w-100">
                    <div class="col-md-6 col-lg-6">
                        <div class="form-group no-gutters">
                            <label for="inputID1" class="form-label mb-2">
                                @Html.Sitecore().Dictionary("/ComplaintRegistration/StartDate", "Start Date")
                            </label>
                            <div class="w-100">
                                @Html.TextBoxFor(x => x.StartDate, new { @class = "form-control reset-control", id = "datetimepickerComplaintStartDate", required = "required" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6 col-lg-6">
                        <div class="form-group no-gutters">
                            <label for="inputID1" class="form-label mb-2">
                                @Html.Sitecore().Dictionary("/ComplaintRegistration/EndDate", "End Date")
                            </label>
                            <div class="w-100">
                                @Html.TextBoxFor(x => x.EndDate, new { @class = "form-control reset-control", id = "datetimepickerComplaintEndDate", required = "required" })
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-6 col-md-6">
                        <div class="form-group">
                            <label for=""><b>Complaint Category</b></label>
                            @Html.DropDownListFor(x => x.SelectedComplaintCategory, new SelectList(Model.ComplaintCategorySelectList, "Value", "Text", Model.SelectedComplaintCategory), "Select", new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="col-lg-6 col-md-6">
                        <div class="form-group">
                            <label for=""><b>Complaint Division</b></label>
                            @Html.DropDownListFor(x => x.SelectedConsumerDivision, new SelectList(Model.ConsumerDivisionSelectList, "Value", "Text", Model.SelectedConsumerDivision), "Select", new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="col-lg-6 col-md-6">
                        <div class="form-group">
                            <label for=""><b>Complaint Zone</b></label>
                            @Html.DropDownListFor(m => m.SelectedConsumerZone, Model.ConsumerZoneSelectList.Select(x => new SelectListItem() { Value = x.Text, Text = x.Text, Group = x.Group, Selected = (x.Value == Model.SelectedConsumerZone) }).ToList(), "Select", new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="col-lg-6 col-md-6">
                        <div class="form-group">
                            <label for=""><b>Complaint Status</b></label>
                            @Html.DropDownListFor(x => x.SelectedComplaintStatus, new SelectList(Model.ComplaintStatusSelecteList, "Value", "Text", Model.SelectedComplaintCategory), "Select", new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="col-lg-12 text-left">
                        <label class="d-block">&nbsp;</label>
                        @*<input type="submit" value="Get Applications" class="btn btn-primary mt-2">*@
                        @Html.ActionLink("Export Complaints", "ExportComplaints", new { }, new { @class = "btn btn-primary mt-2 cexport" })
                    </div>
                </div>
            </div>
        </div>

        <div class="text-right"><a href="@complaintPortalHomePage" class="goBack"><i class="fas fa-arrow-left txt-orange"></i>&nbsp;&nbsp;Go back</a></div>
    </div>
</section>

