@using Sitecore.Foundation.Dictionary.Extensions
@using Sitecore.Foundation.SitecoreExtensions.Extensions
@using Sitecore.Feature.Accounts
@using Sitecore.Mvc.Configuration
@using Sitecore.Feature.Accounts.SessionHelper
@using Sitecore.Feature.Accounts.Models
@using CaptchaMvc;
@using CaptchaMvc.HtmlHelpers;
@using Sitecore.Foundation.SitecoreExtensions.Extensions
@using Sitecore.Mvc
@using Sitecore.Mvc.Configuration
@using Sitecore.Feature.Accounts
@model Sitecore.Feature.Accounts.Models.CGRFComplaintFileRegistrationModel
@{
    var complaintPortalHomePage = (Sitecore.Context.Database.GetItem(Templates.ComplaintPortal.ComplaintPortalAdminHomePage)).Url();
}

<div class="Forward-Form">
    @using (Html.BeginRouteForm(MvcSettings.SitecoreRouteName, FormMethod.Post, new { id = "contact_form", name = "contact_form", @class = "vendor-form", enctype = "multipart/form-data" }))
    {

        @Html.AntiForgeryToken()

        @Html.HiddenFor(x => x.ComplaintId)
        <input type="hidden" id="sFormType" value="Forward-Form">
        <input type="hidden" id="PageInfo" value="">
        <input type="hidden" id="utm_source" value="">
        <div class="row">
            <div class="col-lg-12">
                <div class="form-group">
                    @Html.TextBoxFor(x => x.ForwardDetailsEmailTo, new { @class = "form-control", required = "required", type = "email" })
                    @Html.ValidationMessageFor(x => x.ForwardDetailsEmailTo, "", new { @class = "help-block" }, "p")
                   
                </div>
            </div>

            <div class="col-lg-6">
                <p class="text-right">
                    <input type="submit" value="Forward" id="ForwardEmailSubmit" name="ForwardEmailSubmit" class="btn btn-gradient">
                </p>
            </div>
        </div>
       

    }
    
</div>
              


















