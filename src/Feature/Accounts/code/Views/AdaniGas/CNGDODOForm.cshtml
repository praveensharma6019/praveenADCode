@using Sitecore.Foundation.Dictionary.Extensions
@using Sitecore.Foundation.SitecoreExtensions.Extensions
@using Sitecore.Mvc.Configuration
@using Sitecore.Feature.Accounts
@model Sitecore.Feature.Accounts.Models.DodoCNG
@{

}

@using (Html.BeginRouteForm(MvcSettings.SitecoreRouteName, FormMethod.Post, new { id = "frmCNGDodo", enctype = "multipart/form-data" }))
{
    @Html.AddUniqueFormId()
    <div class="pageContent">
        <div class="container">
            <div class="panel dodoForm">
                @if (!string.IsNullOrEmpty(Model.ReturnViewMessage))
                {
                    <p class="col-md-7">
                        @Model.ReturnViewMessage
                    </p>
                }
                <div class="col-lg-12 col-md-6" id="errormsgs" style="color:red;">
                    <span id="txtmessage"></span>
                </div>
                <p class="pb-md-3 float-sm-right">fields marked <span class="required">*</span> are mandatory</p>
                <div class="clearfix"></div>
                <div class="row" style="display:none;">
                    <div class="col-md-6">
                        <div class="form-group row pt-md-2 @Html.ValidationErrorFor(x => x.MobileNumber, "has-error")">
                            <label for="" class="col-sm-5 col-md-5 col-form-label">
                                @Html.Sitecore().Dictionary("/Accounts/", "Mobile Number")
                                <span class="required">*</span>
                            </label>
                            <div class="col-sm-7 col-md-7">
                                @Html.TextBoxFor(x => x.MobileNumber, new { @class = "form-control reset-control" })
                                @Html.ValidationMessageFor(x => x.MobileNumber, "", new { @class = "help-block" }, "p")
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6 col-lg-4">
                        <div class="form-group @Html.ValidationErrorFor(x => x.StateVal, "has-error")">
                            <label for="" class="inputLabel col-form-label">
                                @Html.Sitecore().Dictionary("/Accounts/", "State")
                                <span class="required">*</span>
                            </label>
                            <div class="inputField">
                                @*@Html.DropDownListFor(x => x.StateVal, Model.StateList, "Select", htmlAttributes: new { @class = "form-control reset-control", id = "drpstate", required = "required" })*@
                                @Html.DropDownListFor(x => x.StateVal, Model.StateList, htmlAttributes: new { @class = "form-control reset-control", id = "drpstate", required = "required" })
                                @Html.ValidationMessageFor(x => x.StateVal, "", new { @class = "help-block" }, "p")
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6 col-lg-4">
                        <div class="form-group @Html.ValidationErrorFor(x => x.GeoAreaVal, "has-error")">
                            <label for="" class="inputLabel col-form-label">
                                @Html.Sitecore().Dictionary("/Accounts/", "Geographical Area")
                                <span class="required">*</span>
                            </label>
                            <div class="inputField">
                                @Html.DropDownListFor(x => x.GeoAreaVal, Model.GeoAreaList, "Select", htmlAttributes: new { @class = "form-control reset-control", id = "drpgeo", required = "required" })
                                @Html.ValidationMessageFor(x => x.GeoAreaVal, "", new { @class = "help-block" }, "p")
                            </div>
                        </div>
                    </div>
                </div>
                
                <div class="row">
                    <div class="col-md-6 col-lg-4">
                        <div class="form-group @Html.ValidationErrorFor(x => x.salutationVal, "has-error")">
                            <label for="" class="inputLabel col-form-label">
                                @Html.Sitecore().Dictionary("/Accounts/", "Salutation")
                                <span class="required">*</span>
                            </label>
                            <div class="inputField">
                                @Html.DropDownListFor(x => x.salutationVal, Model.salutationList, htmlAttributes: new { @class = "form-control reset-control", id = "drpsalutation", required = "required" })
                                @Html.ValidationMessageFor(x => x.StateVal, "", new { @class = "help-block" }, "p")
                            </div>
                        </div>
                    </div>
                </div>
                
                <div class="row">
                    <div class="col-md-4">
                        <div class="form-group @Html.ValidationErrorFor(x => x.FirstName, "has-error")">
                            <label for="" class="inputLabel col-form-label">
                                @Html.Sitecore().Dictionary("/Accounts/", "First Name")
                                <span class="required">*</span>
                            </label>
                            <div class="inputField">
                                @Html.TextBoxFor(x => x.FirstName, new { @class = "form-control reset-control", required = "required" })
                                @Html.ValidationMessageFor(x => x.FirstName, "", new { @class = "help-block" }, "p")
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group @Html.ValidationErrorFor(x => x.MiddleName, "has-error")">
                            <label for="" class="inputLabel col-form-label">
                                @Html.Sitecore().Dictionary("/Accounts/", "Middle Name")
                                <span class="required">*</span>
                            </label>
                            <div class="inputField">
                                @Html.TextBoxFor(x => x.MiddleName, new { @class = "form-control reset-control", required = "required" })
                                @Html.ValidationMessageFor(x => x.MiddleName, "", new { @class = "help-block" }, "p")
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group @Html.ValidationErrorFor(x => x.LastName, "has-error")">
                            <label for="" class="inputLabel col-form-label">
                                @Html.Sitecore().Dictionary("/Accounts/", "Last Name")
                                <span class="required">*</span>
                            </label>
                            <div class="inputField">
                                @Html.TextBoxFor(x => x.LastName, new { @class = "form-control reset-control", required = "required" })
                                @Html.ValidationMessageFor(x => x.LastName, "", new { @class = "help-block" }, "p")
                            </div>
                        </div>
                    </div>
                </div>
                <hr />
                <h3>Communication Address</h3>
                <div class="row">
                    <div class="col-md-4">
                        <div class="form-group @Html.ValidationErrorFor(x => x.Address1, "has-error")">
                            <label for="" class="inputLabel col-form-label">
                                @Html.Sitecore().Dictionary("/Accounts/", "Address Line 1")
                                <span class="required">*</span>
                            </label>
                            <div class="inputField">
                                @Html.TextBoxFor(x => x.Address1, new { @class = "form-control reset-control", required = "required" })
                                @Html.ValidationMessageFor(x => x.Address1, "", new { @class = "help-block" }, "p")
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group @Html.ValidationErrorFor(x => x.Address2, "has-error")">
                            <label for="" class="inputLabel col-form-label">
                                @Html.Sitecore().Dictionary("/Accounts/", "Address Line 2")
                                <span class="required">*</span>
                            </label>
                            <div class="inputLabel">
                                @Html.TextBoxFor(x => x.Address2, new { @class = "form-control reset-control", required = "required" })
                                @Html.ValidationMessageFor(x => x.Address2, "", new { @class = "help-block" }, "p")
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group @Html.ValidationErrorFor(x => x.Address3, "has-error")">
                            <label for="" class="inputLabel col-form-label">
                                @Html.Sitecore().Dictionary("/Accounts/", "Address Line 3")
                                <span class="required">*</span>
                            </label>
                            <div class="inputField">
                                @Html.TextBoxFor(x => x.Address3, new { @class = "form-control reset-control", required = "required" })
                                @Html.ValidationMessageFor(x => x.Address3, "", new { @class = "help-block" }, "p")
                            </div>
                        </div>
                    </div>
                </div>
                
                <div class="row">
                    <div class="col-md-4">
                        <div class="form-group @Html.ValidationErrorFor(x => x.CityOfAddress, "has-error")">
                            <label for="" class="inputLabel col-form-label">
                                @Html.Sitecore().Dictionary("/Accounts/", "City")
                                <span class="required">*</span>
                            </label>
                            <div class="inputField">
                                @Html.TextBoxFor(x => x.CityOfAddress, new { @class = "form-control reset-control", required = "required" })
                                @Html.ValidationMessageFor(x => x.CityOfAddress, "", new { @class = "help-block" }, "p")
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group @Html.ValidationErrorFor(x => x.DistrictOfAddress, "has-error")">
                            <label for="" class="inputLabel col-form-label">
                                @Html.Sitecore().Dictionary("/Accounts/", "District")
                                <span class="required">*</span>
                            </label>
                            <div class="inputField">
                                @Html.TextBoxFor(x => x.DistrictOfAddress, new { @class = "form-control reset-control", required = "required" })
                                @Html.ValidationMessageFor(x => x.DistrictOfAddress, "", new { @class = "help-block" }, "p")
                            </div>
                        </div>
                    </div>
                    <div class="col-md-8 col-lg-4">
					<div class="row">
						<div class="col-md-6">
						<div class="form-group @Html.ValidationErrorFor(x => x.StateOfAddress, "has-error")">
                            <label for="" class="inputLabel col-form-label">
                                @Html.Sitecore().Dictionary("/Accounts/", "State")
                                <span class="required">*</span>
                            </label>
                            <div class="inputField">
                                @Html.TextBoxFor(x => x.StateOfAddress, new { @class = "form-control reset-control", required = "required" })
                                @Html.ValidationMessageFor(x => x.StateOfAddress, "", new { @class = "help-block" }, "p")
                            </div>
                        </div>
						</div>
						<div class="col-md-6">
						<div class="form-group @Html.ValidationErrorFor(x => x.PincodeOfAddress, "has-error")">
                            <label for="" class="inputLabel col-form-label">
                                @Html.Sitecore().Dictionary("/Accounts/", "Pincode")
                                <span class="required">*</span>
                            </label>
                            <div class="inputField">
                                @Html.TextBoxFor(x => x.PincodeOfAddress, new { @class = "form-control reset-control", required = "required" })
                                @Html.ValidationMessageFor(x => x.PincodeOfAddress, "", new { @class = "help-block" }, "p")
                            </div>
                        </div>
						</div>
					</div>
                        
                    </div>
                </div>
                <hr>
                <h3>Contact Number</h3>
                <div class="row">
                    <div class="col-md-6 col-lg-4">
                        <div class="form-group @Html.ValidationErrorFor(x => x.LandlineNumber, "has-error")">
                            <label for="" class="inputLabel col-form-label">
                                @Html.Sitecore().Dictionary("/Accounts/", "Landline Number with STD Code")
                                <span class="required">*</span>
                            </label>
                            <div class="inputField">
                                @Html.TextBoxFor(x => x.LandlineNumber, new { @class = "form-control reset-control", required = "required" })
                                @Html.ValidationMessageFor(x => x.LandlineNumber, "", new { @class = "help-block" }, "p")
                            </div>
                        </div>
                    </div>
					<div class="col-md-6 col-lg-4">
                        <div class="form-group @Html.ValidationErrorFor(x => x.Email, "has-error")">
                            <label for="" class="inputLabel col-form-label">
                                @Html.Sitecore().Dictionary("/Accounts/", "Email Id")
                                <span class="required">*</span>
                            </label>
                            <div class="inputField">
                                @Html.TextBoxFor(x => x.Email, new { @class = "form-control reset-control", required = "required" })
                                @Html.ValidationMessageFor(x => x.Email, "", new { @class = "help-block" }, "p")
                            </div>
                        </div>
                    </div>
                </div>
                
                <div class="row">
                    <div class="col-md-6 col-lg-4">
                        <div class="form-group @Html.ValidationErrorFor(x => x.OccupationVal, "has-error")">
                            <label for="" class="inputLabel col-form-label">
                                @Html.Sitecore().Dictionary("/Accounts/", "Occupation")
                                <span class="required">*</span>
                            </label>
                            <div class="inputField">
                                @Html.DropDownListFor(x => x.OccupationVal, Model.OccupationList, htmlAttributes: new { @class = "form-control reset-control", id = "drpoccupation", required = "required" })
                                @Html.ValidationMessageFor(x => x.OccupationVal, "", new { @class = "help-block" }, "p")
                            </div>
                        </div>
                    </div>
					<div class="col-md-6 col-lg-4">
                        <div class="form-group">
                            <label for="" class="inputLabel col-form-label">
                                @Html.Sitecore().Dictionary("/Accounts/", "Brief Details of Occupation")
                            </label>
                            <div class="inputField">
                                @Html.TextBoxFor(x => x.briefOccupation, new { @class = "form-control reset-control" })
                                @Html.ValidationMessageFor(x => x.briefOccupation, "", new { @class = "help-block" }, "p")
                            </div>
                        </div>
                    </div>
                </div>
                
                
                <hr />
                <h3>Details of land owned by you to set up CNG Station</h3>
                <div class="row">
                    <div class="col-md-6 col-lg-4">
                        <div class="form-group @Html.ValidationErrorFor(x => x.PlotNo, "has-error")">
                            <label for="" class="inputLabel col-form-label">
                                @Html.Sitecore().Dictionary("/Accounts/", "Plot No/Survey No/Khasra No/TP No")
                                <span class="required">*</span>
                            </label>
                            <div class="inputField">
                                @Html.TextBoxFor(x => x.PlotNo, new { @class = "form-control reset-control", required = "required" })
                                @Html.ValidationMessageFor(x => x.PlotNo, "", new { @class = "help-block" }, "p")
                            </div>
                        </div>
                    </div>
                </div>
                
                <div class="row">
                    <div class="col-md-6 col-lg-4">
                        <div class="form-group @Html.ValidationErrorFor(x => x.Road, "has-error")">
                            <label for="" class="inputLabel col-form-label">
                                @Html.Sitecore().Dictionary("/Accounts/", "Road:National Highway with NO / State Highway with NO / City Road/ Village Road")
                                <span class="required">*</span>
                            </label>
                            <div class="inputField">
                                @Html.TextBoxFor(x => x.Road, new { @class = "form-control reset-control", required = "required" })
                                @Html.ValidationMessageFor(x => x.Road, "", new { @class = "help-block" }, "p")
                            </div>
                        </div>
                    </div>
                </div>
                
                <div class="row">
                    <div class="col-md-4">
                        <div class="form-group @Html.ValidationErrorFor(x => x.Landmark, "has-error")">
                            <label for="" class="inputLabel col-form-label">
                                @Html.Sitecore().Dictionary("/Accounts/", "Near Land Mark")
                                <span class="required">*</span>
                            </label>
                            <div class="inputField">
                                @Html.TextBoxFor(x => x.Landmark, new { @class = "form-control reset-control", required = "required" })
                                @Html.ValidationMessageFor(x => x.Landmark, "", new { @class = "help-block" }, "p")
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group @Html.ValidationErrorFor(x => x.RoadGoingTowards, "has-error")">
                            <label for="" class="inputLabel col-form-label">
                                @Html.Sitecore().Dictionary("/Accounts/", "Road Going Towards")
                                <span class="required">*</span>
                            </label>
                            <div class="inputField">
                                @Html.TextBoxFor(x => x.RoadGoingTowards, new { @class = "form-control reset-control", required = "required" })
                                @Html.ValidationMessageFor(x => x.RoadGoingTowards, "", new { @class = "help-block" }, "p")
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group @Html.ValidationErrorFor(x => x.City, "has-error")">
                            <label for="" class="inputLabel col-form-label">
                                @Html.Sitecore().Dictionary("/Accounts/", "Name of City")
                                <span class="required">*</span>
                            </label>
                            <div class="inputField">
                                @Html.TextBoxFor(x => x.City, new { @class = "form-control reset-control", required = "required" })
                          
						  @Html.ValidationMessageFor(x => x.City, "", new { @class = "help-block" }, "p")
                            </div>
                        </div>
                    </div>
                </div>
                
                <div class="row">
                    <div class="col-md-4">
                        <div class="form-group @Html.ValidationErrorFor(x => x.District, "has-error")">
                            <label for="" class="inputLabel col-form-label">
                                @Html.Sitecore().Dictionary("/Accounts/", "Name of Tehsil/District")
                                <span class="required">*</span>
                            </label>
                            <div class="inputField">
                                @Html.TextBoxFor(x => x.District, new { @class = "form-control reset-control", required = "required" })
                                @Html.ValidationMessageFor(x => x.District, "", new { @class = "help-block" }, "p")
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group @Html.ValidationErrorFor(x => x.State, "has-error")">
                            <label for="" class="inputLabel col-form-label">
                                @Html.Sitecore().Dictionary("/Accounts/", "Name of State")
                                <span class="required">*</span>
                            </label>
                            <div class="inputField">
                                @Html.TextBoxFor(x => x.State, new { @class = "form-control reset-control", required = "required" })
                                @Html.ValidationMessageFor(x => x.State, "", new { @class = "help-block" }, "p")
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group @Html.ValidationErrorFor(x => x.Pincode, "has-error")">
                            <label for="" class="inputLabel col-form-label">
                                @Html.Sitecore().Dictionary("/Accounts/", "Pin Code")
                                <span class="required">*</span>
                            </label>
                            <div class="inputField">
                                @Html.TextBoxFor(x => x.Pincode, new { @class = "form-control reset-control", required = "required" })
                                @Html.ValidationMessageFor(x => x.Pincode, "", new { @class = "help-block" }, "p")
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6 col-lg-4">
                        <div class="form-group @Html.ValidationErrorFor(x => x.PlotType, "has-error")">
                            <label for="" class="inputLabel col-form-label">
                                @Html.Sitecore().Dictionary("/Accounts/", "Plot Type")
                                <span class="required">*</span>
                            </label>
                            <div class="inputField">
                                <label>
                                    @Html.RadioButtonFor(m => m.PlotType, "NonAgri")
                                    Non-Agriculture
                                </label>
                                <br />
                                <label>
                                    @Html.RadioButtonFor(m => m.PlotType, "Agri")
                                    Agriculture
                                </label>
                                @Html.ValidationMessageFor(x => x.PlotType, "", new { @class = "help-block" }, "p")
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6 col-lg-4">
                        <div class="form-group @Html.ValidationErrorFor(x => x.Plotsize, "has-error")">
                            <label for="" class="inputLabel col-form-label">
                                @Html.Sitecore().Dictionary("/Accounts/", "Plot Size(In Square Meter)")
                                <span class="required">*</span>
                            </label>
                            <div class="inputField">
                                @Html.TextBoxFor(x => x.Plotsize, new { @class = "form-control reset-control", required = "required" })
                                @Html.ValidationMessageFor(x => x.Plotsize, "", new { @class = "help-block" }, "p")
                            </div>
                        </div>
                    </div>
                </div>
                <hr />
                <h3>Photographs of Land</h3>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group @Html.ValidationErrorFor(x => x.FrontViewPhoto, "has-error")">
                            <label for="" class="inputLabel col-form-label">
                                @Html.Sitecore().Dictionary("/Accounts/", "Front View Photo")
                                <span class="required">*</span>
                            </label>
                            <div class="inputField">
                                @Html.TextBoxFor(x => x.FrontViewPhoto, null, new { type = "file", @class = "input-file", required = "required" })
                                @Html.ValidationMessageFor(x => x.FrontViewPhoto, "", new { @class = "help-block" }, "p")
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group @Html.ValidationErrorFor(x => x.LeftsideEntryPlot, "has-error")">
                            <label for="" class="inputLabel col-form-label">
                                @Html.Sitecore().Dictionary("/Accounts/", "Left Side Entry of the Plot")
                                <span class="required">*</span>
                            </label>
                            <div class="inputField">
                                @Html.TextBoxFor(x => x.LeftsideEntryPlot, null, new { type = "file", @class = "input-file", required = "required" })
                                @Html.ValidationMessageFor(x => x.LeftsideEntryPlot, "", new { @class = "help-block" }, "p")
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group @Html.ValidationErrorFor(x => x.RightsideExitPlot, "has-error")">
                            <label for="" class="inputLabel col-form-label">
                                @Html.Sitecore().Dictionary("/Accounts/", "Right Side Exit of the Plot")
                                <span class="required">*</span>
                            </label>
                            <div class="inputField">
                                @Html.TextBoxFor(x => x.RightsideExitPlot, null, new { type = "file", @class = "input-file", required = "required" })
                                @Html.ValidationMessageFor(x => x.RightsideExitPlot, "", new { @class = "help-block" }, "p")
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group @Html.ValidationErrorFor(x => x.InsideOutViewPlot, "has-error")">
                            <label for="" class="inputLabel col-form-label">
                                @Html.Sitecore().Dictionary("/Accounts/", "Inside out View of the Plot")
                                <span class="required">*</span>
                            </label>
                            <div class="inputField">
                                @Html.TextBoxFor(x => x.InsideOutViewPlot, null, new { type = "file", @class = "input-file", required = "required" })
                                @Html.ValidationMessageFor(x => x.InsideOutViewPlot, "", new { @class = "help-block" }, "p")
                            </div>
                        </div>
                    </div>
                </div>
                <hr />
                <h3>Plot co-ordinates</h3>
                <div class="row">
                    <div class="col-md-6 col-lg-4">
                        <div class="form-group">
                            <label for="" class="inputLabel col-form-label">
                                @Html.Sitecore().Dictionary("/Accounts/", "Latitude")
                            </label>
                            <div class="inputField">
                                @Html.TextBoxFor(x => x.Latitude, new { @class = "form-control reset-control" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6 col-lg-4">
                        <div class="form-group">
                            <label for="" class="inputLabel col-form-label">
                                @Html.Sitecore().Dictionary("/Accounts/", "Longtitude")
                            </label>
                            <div class="inputField">
                                @Html.TextBoxFor(x => x.Longitude, new { @class = "form-control reset-control" })
                            </div>
                        </div>
                    </div>
                </div>
                <hr />
                <h3>Name of Nearest Petrol Pump from the land</h3>
                <div class="row">
                    <div class="col-md-6 col-lg-4">
                        <div class="form-group">
                            <label for="" class="inputLabel col-form-label">
                                @Html.Sitecore().Dictionary("/Accounts/", "Name of filling Station")
                                <span class="required">*</span>
                            </label>
                            <div class="inputField">
                                @Html.TextBoxFor(x => x.NameoffillingStation, new { @class = "form-control reset-control", required = "required" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6 col-lg-4">
                        <div class="form-group">
                            <label for="" class="inputLabel col-form-label">
                                @Html.Sitecore().Dictionary("/Accounts/", "Distance from Land(In KM)")
                                <span class="required">*</span>
                            </label>
                            <div class="inputField">
                                @Html.TextBoxFor(x => x.DistancefromLandInKM, new { @class = "form-control reset-control", required = "required" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="form-group @Html.ValidationErrorFor(x => x.PetrolIndustryPrevExp, "has-error")">
                            <label for="" class="inputLabel col-form-label">
                                @Html.Sitecore().Dictionary("/Accounts/", "Any Previous experience in Petroleum Industry")
                                <span class="required">*</span>
                            </label>
                            <div class="inputField">
                                <label>
                                    @Html.RadioButtonFor(m => m.PetrolIndustryPrevExp, "Yes")
                                    Yes
                                </label>
                                <br />
                                <label>
                                    @Html.RadioButtonFor(m => m.PetrolIndustryPrevExp, "No")
                                    No
                                </label>
                                @Html.ValidationMessageFor(x => x.PetrolIndustryPrevExp, "", new { @class = "help-block" }, "p")
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row" id="expdiv" style="display:none;">
                    <div class="col-md-6 col-lg-4">
                        <div class="form-group">
                            <label for="" class="inputLabel col-form-label">
                                @Html.Sitecore().Dictionary("/Accounts/OMC", "Name of the OMC")
                                <span class="required">*</span>
                            </label>
                            <div class="inputField">
                                @Html.DropDownListFor(x => x.OMCVal, Model.OMCList, htmlAttributes: new { @class = "form-control reset-control", id = "drpomc" })
                                @Html.ValidationMessageFor(x => x.OMCVal, "", new { @class = "help-block" }, "p")
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6 col-lg-4">
                        <div class="form-group @Html.ValidationErrorFor(x => x.OMCYear, "has-error")">
                            <label for="" class="inputLabel col-form-label">
                                @Html.Sitecore().Dictionary("/Accounts/OMCYears", "Associated with OMC since")
                                <span class="required">*</span>
                            </label>
                            <div class="inputField">
                                @Html.DropDownListFor(x => x.OMCYear, Model.OMCYearList, htmlAttributes: new { @class = "form-control reset-control", id = "drpomcyear" })
                                @Html.ValidationMessageFor(x => x.OMCYear, "", new { @class = "help-block" }, "p")
                            </div>
                        </div>
                    </div>
                </div>
                
                <div class="row">
                    <div class="col-md-6 col-lg-4">
                        <div class="form-group @Html.ValidationErrorFor(x => x.ProposedEntity, "has-error")">
                            <label for="" class="inputLabel col-form-label">
                                @Html.Sitecore().Dictionary("/Accounts/", "Proposed Entity if Dealership is awarded")
                                <span class="required">*</span>
                            </label>
                            <div class="inputField">
                                <label>
                                    @Html.RadioButtonFor(m => m.ProposedEntity, "Proprietorship")
                                    Proprietorship
                                </label>
                                <br />
                                <label>
                                    @Html.RadioButtonFor(m => m.ProposedEntity, "Partnership")
                                    Partnership
                                </label>
                                @Html.ValidationMessageFor(x => x.ProposedEntity, "", new { @class = "help-block" }, "p")
                            </div>
                        </div>
                    </div>
                </div>
                
                <div class="row">
                    <div class="col-md-12">
                        <div class="form-group @Html.ValidationErrorFor(x => x.DODOformatSourceVal, "has-error")">
                            <label for="" class="inputLabel col-form-label">
                                @Html.Sitecore().Dictionary("/Accounts/", "How did you come to know about Adani Total Gas Ltd. (DODO Format) CNG Stations")
                                <span class="required">*</span>
                            </label>
                            <div class="inputField">
                                @Html.DropDownListFor(x => x.DODOformatSourceVal, Model.DODOformatSourceList, htmlAttributes: new { @class = "form-control reset-control", id = "drpreference", required = "required" })
                                @Html.ValidationMessageFor(x => x.DODOformatSourceVal, "", new { @class = "help-block" }, "p")
                            </div>
                        </div>
                    </div>
                </div>
                
                <div class="row">
                    <div class="col-md-12">
                        <div class="form-group">
                            <div class="inputLabelBox">
                                <label>
                                    @Html.CheckBoxFor(x => x.TermCondition1)
                                    I allow Adani Total Gas Ltd. Limited to send alerts via SMS on mobile number & Email ID as given in the above inquiry form.
                                </label>
                            </div>
                        </div>
                    </div>
                </div>
                
                <div class="row">
                    <div class="col-md-12">
                        <div class="form-group">
                            <div class="inputLabelBox">
                                <label>
                                    @Html.CheckBoxFor(x => x.TermCondition2)
                                    The Details given above by me does not bind Adani Total Gas Ltd. to offer or give dealership for CNG Station
                                </label>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="form-group">
                            <div class="inputLabelBox">
                                <label>
                                    @Html.CheckBoxFor(x => x.TermCondition3)
                                    I agree to pay a Non-refundable fees of Rs.2000/- for enquiry form fees DODO dealership.
                                </label>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="">
                        <button id="btnSubmit" type="submit" class="btn btn-primary">@Html.Sitecore().Dictionary("/Accounts/", "Submit")</button>
                        <a href="javascript:void(0);" onclick='location.reload(true); return false;' class="btn btn-secondary">
                            @Html.Sitecore().Dictionary("/Accounts/", "Reset")
                        </a>
                    </div>
                </div>
            </div>
            <!-- /Page Content -->
        </div>
    </div>
}


@if (string.IsNullOrEmpty(Model.MobileNumber))
{
    <div class="modal" id="adanigasdodoform" data-backdrop="static" data-keyboard="false" style="padding-right: 17px;">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content gallery-slider">
                @*<button type="button" class="close" data-dismiss="modal">×</button>*@

                <div class="modal-body p-4">
                    <h3 class="mb-3 txt-md">DODO Form</h3>
                    <div class="subscribe-form">

                        @using (Html.BeginForm("paymentfordodo", "AdaniGas", FormMethod.Post, new { id = "UseRegistrationForm" }))
                        {
                            <div class="form-group">
                                <input type="text" name="mobile" id="mobile" class="form-control" placeholder="Mobile number" required>
                                <div style="color:red;"><span class="errorMsg" id="mobileMsg"></span></div>
                                <div><span id="RegisteredMsg" style="display:none;margin-top: 5px;font-size: 15px;"></span></div>
                            </div>
                            <div class="form-group text-right">
                                <input type="button" value="Submit" id="btndodoMobileSubmit" class="btn btn-gradient">
                                <input type="submit" value="Pay" id="btndodopaymentSubmit" class="btn btn-gradient" style="display:none;">
								<input type="submit" value="Print Receipt" id="btndodoprintpayment" class="btn btn-gradient" style="display:none;">
                            </div>
                        }


                    </div>
                </div>
            </div>
        </div>
    </div>
}