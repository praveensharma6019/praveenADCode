@using Sitecore.Feature.Accounts
@using Sitecore.Feature.Accounts.Services
@using Sitecore.Foundation.Dictionary.Extensions
@using Sitecore.Foundation.SitecoreExtensions.Extensions
@using Sitecore.Mvc.Configuration
@using CaptchaMvc;
@using CaptchaMvc.HtmlHelpers;
@model Sitecore.Feature.Accounts.Models.NameTransferAdminRegistation

@if (Session["NameTransferLogin"] != null && !string.IsNullOrEmpty(Session["NameTransferLogin"].ToString()))
{
    <section class="name-transfer">
        <div class="container">
            <div>
                @using (Html.BeginRouteForm(MvcSettings.SitecoreRouteName, FormMethod.Post, new { id = "name-transfer-Change-Password-step1", @class = "name-transfer-Change-Password-step1" }))
                {
                    @Html.AddUniqueFormId()
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true)
                    @Html.HiddenFor(x => x.Password)
                    <div class="panel">
                        <div class="row">
                            <div class="row col-12">

                                <div class="col-lg-6 col-md-6">
                                    <div class="form-group">
                                        <label for="">Register MobileNumber :</label>
                                        @Html.TextBoxFor(x => x.MobileNumber, new { @class = "form-control reset-control", id = "MobileNumber", required = "required", disabled = "disabled" })
                                        @Html.ValidationMessageFor(x => x.MobileNumber, "", new { @class = "help-block" }, "p")
                                        @Html.HiddenFor(x => x.MobileNumber)
                                    </div>
                                </div>

                                <div class="col-lg-6 col-md-6">
                                    <div class="form-group">
                                        <label for="">Register Email ID :</label>
                                        @Html.TextBoxFor(x => x.Email, new { @class = "form-control reset-control", id = "Email", required = "required", disabled = "disabled" })
                                        @Html.ValidationMessageFor(x => x.Email, "", new { @class = "help-block" }, "p")
                                        @Html.HiddenFor(x => x.Email)
                                    </div>
                                </div>

                                <!--<div class="col-lg-3 col-md-3">
                                    <div class="form-group">
                                        <label for="">Enter Old Password:</label>
                                        @Html.TextBoxFor(x => x.Password, new { @class = "form-control reset-control", id = "Email", required = "required", disabled = "disabled" })
                                        @Html.ValidationMessageFor(x => x.Password, "", new { @class = "help-block" }, "p")

                                    </div>
                                </div>-->

                                <div class="col-lg-6 col-md-6">
                                    <div class="form-group">
                                        <label for="">New  Password:</label>
                                        @Html.PasswordFor(x => x.NameChangeNewPassword, new { @class = "form-control reset-control", id = "NewPassword", required = "required", @autocomplete = "off" })
                                        @Html.ValidationMessageFor(x => x.NameChangeNewPassword, "", new { @class = "help-block" }, "p")
                                        @Html.HiddenFor(x => x.NameChangeNewPassword)
                                        @Html.HiddenFor(x => x.Password)
                                    </div>
                                </div>

                                <div class="col-lg-6 col-md-6">
                                    <div class="form-group">
                                        <label for="">Confirm  Password:</label>
                                        @Html.PasswordFor(x => x.ConfirmNewPassword, new { @class = "form-control reset-control", id = "ConfirmNewPassword", required = "required", @autocomplete = "off" })
                                        @Html.ValidationMessageFor(x => x.ConfirmNewPassword, "", new { @class = "help-block" }, "p")
                                        @Html.HiddenFor(x => x.ConfirmNewPassword)
                                    </div>
                                </div>

                                <div class="col-lg-6 col-md-6">
                                    <div class="form-group">
                                        <input type="submit" class="btn btn-primary w-auto" name="NameTransferAdminChangePassword" value="Change Password" ) />
                                    </div>
                                </div>

                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </section>
}
