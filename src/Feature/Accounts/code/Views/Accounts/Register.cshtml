@using Sitecore.Foundation.Dictionary.Extensions
@using Sitecore.Foundation.SitecoreExtensions.Extensions
@using Sitecore.Mvc.Configuration
@using CaptchaMvc;
@using CaptchaMvc.HtmlHelpers;
@model Sitecore.Feature.Accounts.Models.RegistrationInfo

@using (Html.BeginRouteForm(MvcSettings.SitecoreRouteName, FormMethod.Post, new { id = "frmRegister", @class = "form-signin" }))
{
    @Html.AddUniqueFormId()
    @Html.AntiForgeryToken()
    <div class="pageContent">
        <div class="container">
            <div class="panel">
                <p class="pb-md-3 float-sm-right">fields marked <span class="required">*</span> are mandatory</p>
                <div class="clearfix"></div>
                <!-- Sign up Form -->
                <form class="pt-3">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group row pt-md-2 @Html.ValidationErrorFor(x => x.AccountNo, "has-error")">
                                <label for="" class="col-sm-5 col-md-5 col-form-label">
                                    @Html.Sitecore().Dictionary("/Accounts/Register/AccountNumber", "Account No.")
                                    <span class="required">*</span>
                                </label>
                                <div class="col-sm-7 col-md-7">
                                    @Html.HiddenFor(x => x.AccountNo)
                                    @Html.DisplayFor(x => x.AccountNo, new { @class = "form-control reset-control", id = "AccountNo" })
                                    @*@Html.TextBoxFor(x => x.AccountNo, new { @class = "form-control reset-control", id = "AccountNo", required = "required", @readonly = "readonly" })
                                        @Html.ValidationMessageFor(x => x.AccountNo, "", new { @class = "help-block" }, "p")
                                        <div class="helpText pt-1">available on your bill.</div>*@
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group row pt-md-2 @Html.ValidationErrorFor(x => x.MeterNo, "has-error")">
                                <label for="" class="col-sm-5 col-md-5 col-form-label">
                                    @Html.Sitecore().Dictionary("/Accounts/Register/MeterNo", "Meter No.")
                                    <span class="required">*</span>
                                </label>
                                <div class="col-sm-7 col-md-7">
                                    @Html.HiddenFor(x => x.MeterNo)
                                    @Html.DisplayFor(x => x.MeterNo, new { @class = "form-control reset-control", id = "MeterNo" })
                                    @*@Html.TextBoxFor(x => x.MeterNo, new { @class = "form-control reset-control", id = "MeterNo", required = "required", @readonly = "readonly" })
                                        @Html.ValidationMessageFor(x => x.MeterNo, "", new { @class = "help-block" }, "p")
                                        <div class="helpText pt-1">available on your bill.</div>*@
                                </div>
                            </div>
                        </div>
                    </div>
                    <hr>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group row pt-md-2 @Html.ValidationErrorFor(x => x.LoginName, "has-error")">
                                <label for="" class="col-sm-5 col-md-5 col-form-label">
                                    @Html.Sitecore().Dictionary("/Accounts/Register/LoginName", "Choose Your Login Name")
                                    <span class="required">*</span>
                                </label>
                                <div class="col-sm-7 col-md-7">
                                    @Html.TextBoxFor(x => x.LoginName, new { @class = "form-control reset-control", id = "LoginName", @autocomplete = "off", required = "required" })
                                    @Html.ValidationMessageFor(x => x.LoginName, "", new { @class = "help-block" }, "p")
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group row pt-md-2">
                                <label class="col-12 col-form-label helpText">@Html.Sitecore().Dictionary("/Accounts/Register/LoginNameGuide", "Login Name should contain minimum 6 characters and only alphanumeric characters are allowed.")</label>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group row pt-md-2 @Html.ValidationErrorFor(x => x.Password, "has-error")">
                                <label for="" class="col-sm-5 col-md-5 col-form-label">
                                    @Html.Sitecore().Dictionary("/Common/Password", "Password")
                                    <span class="required">*</span>
                                </label>
                                <div class="col-sm-7 col-md-7">
                                    @Html.PasswordFor(x => x.Password, new
                               {
                                   @class = "form-control reset-control",
                                   id = "registerPassword",
                                   @autocomplete = "off",
                                   required = "required"
                               })
                                    @Html.ValidationMessageFor(x => x.Password, "", new { @class = "help-block" }, "p")
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group row pt-md-2 @Html.ValidationErrorFor(x => x.ConfirmPassword, "has-error")">
                                <label for="" class="col-sm-5 col-md-5 col-form-label">
                                    @Html.Sitecore().Dictionary("/Accounts/Register/Confirm Password", "Re-type Password")
                                    <span class="required">*</span>
                                </label>
                                <div class="col-sm-7 col-md-7">
                                    @Html.PasswordFor(x => x.ConfirmPassword, new
                               {
                                   @class = "form-control reset-control",
                                   id = "registerConfirmPassword",
                                   @autocomplete = "off",
                                   required = "required"
                               })
                                    @Html.ValidationMessageFor(x => x.ConfirmPassword, "", new { @class = "help-block" }, "p")
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group row pt-md-2 @Html.ValidationErrorFor(x => x.SecretQuestion, "has-error")">
                                <label for="" class="col-sm-5 col-md-5 col-form-label">
                                    @Html.Sitecore().Dictionary("/Accounts/Register/SecretQuestion", "Secret Question")
                                    <span class="required">*</span>
                                </label>
                                <div class="col-sm-7 col-md-7">
                                    @*@Html.TextBoxFor(x => x.SecretQuestion, new { @class = "form-control reset-control", id = "SecretQuestion", required = "required" })
                                        @Html.ValidationMessageFor(x => x.SecretQuestion, "", new { @class = "help-block" }, "p")*@
                                    @Html.DropDownListFor(m => m.SecretQuestion, Model.QuestionList, "--Select--", new { @class = "form-control", required = "required" })
                                    @Html.ValidationMessageFor(x => x.SecretQuestion, "", new { @class = "help-block" }, "p")
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group row pt-md-2 @Html.ValidationErrorFor(x => x.Answer, "has-error")">
                                <label for="" class="col-sm-5 col-md-5 col-form-label">
                                    @Html.Sitecore().Dictionary("/Accounts/Register/Answer", "Answer")
                                    <span class="required">*</span>
                                </label>
                                <div class="col-sm-7 col-md-7">
                                    @Html.TextBoxFor(x => x.Answer, new { @class = "form-control reset-control", id = "Answer", required = "required" })
                                    @Html.ValidationMessageFor(x => x.Answer, "", new { @class = "help-block" }, "p")
                                </div>
                            </div>
                        </div>
                    </div>
                    <hr>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group row pt-md-2 @Html.ValidationErrorFor(x => x.FirstName, "has-error")">
                                <label for="" class="col-sm-5 col-md-5 col-form-label">
                                    @Html.Sitecore().Dictionary("/Accounts/Register/FirstName", "First Name")
                                    <span class="required">*</span>
                                </label>
                                <div class="col-sm-7 col-md-7">
                                    @Html.TextBoxFor(x => x.FirstName, new { @class = "form-control reset-control", id = "FirstName", required = "required" })
                                    @Html.ValidationMessageFor(x => x.FirstName, "", new { @class = "help-block" }, "p")
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group row pt-md-2 @Html.ValidationErrorFor(x => x.LastName, "has-error")">
                                <label for="" class="col-sm-5 col-md-5 col-form-label">
                                    @Html.Sitecore().Dictionary("/Accounts/Register/LastName", "Last Name")
                                    <span class="required">*</span>
                                </label>
                                <div class="col-sm-7 col-md-7">
                                    @Html.TextBoxFor(x => x.LastName, new { @class = "form-control reset-control", id = "LastName", required = "required" })
                                    @Html.ValidationMessageFor(x => x.LastName, "", new { @class = "help-block" }, "p")
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group row @Html.ValidationErrorFor(x => x.Gender, "has-error")">
                                <label for="" class="col-sm-5 col-md-5 col-form-label">
                                    @Html.Sitecore().Dictionary("/Accounts/Register/Gender", "Gender")
                                    <span class="required">*</span>
                                </label>
                                <div class="col-sm-7 col-md-7">
                                    <div class="row">
                                        <div class="col-sm-6">
                                            @Html.RadioButtonFor(model => model.Gender, "Male", new { id = "rdbMale", required = "required" }) Male
                                        </div>
                                        <div class="col-sm-6">
                                            @Html.RadioButtonFor(model => model.Gender, "FeMale", new { id = "rdbfeMale", required = "required" }) Female
                                        </div>
                                        @Html.ValidationMessageFor(x => x.Gender, "", new { @class = "help-block" }, "p")
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group row pt-md-2 @Html.ValidationErrorFor(x => x.Email, "has-error")">
                                <label for="" class="col-sm-5 col-md-5 col-form-label">
                                    @Html.Sitecore().Dictionary("/Accounts/Register/Email", "E-mail id")
                                    <span class="required">*</span>
                                </label>
                                <div class="col-sm-7 col-md-7">
                                    @Html.TextBoxFor(x => x.Email, new { @class = "form-control reset-control", id = "Email", required = "required" })
                                    @Html.ValidationMessageFor(x => x.Email, "", new { @class = "help-block" }, "p")
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group row pt-md-2 @Html.ValidationErrorFor(x => x.LandlineNumber, "has-error")">
                                <label for="" class="col-sm-5 col-md-5 col-form-label">
                                    @Html.Sitecore().Dictionary("/Accounts/Register/LandlineNumber", "Landline Number")
                                    <span class="required"></span>
                                </label>
                                <div class="col-sm-7 col-md-7">
                                    @Html.TextBoxFor(x => x.LandlineNumber, new { @class = "form-control reset-control", id = "LandlineNumber" })
                                    @Html.ValidationMessageFor(x => x.LandlineNumber, "", new { @class = "help-block" }, "p")
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group row pt-md-2 @Html.ValidationErrorFor(x => x.MobileNumber, "has-error")">
                                <label for="" class="col-sm-5 col-md-5 col-form-label">
                                    @Html.Sitecore().Dictionary("/Accounts/Register/MobileNumber", "Mobile No.")
                                    <span class="required">*</span>
                                </label>
                                <div class="col-sm-7 col-md-7">
                                    @Html.TextBoxFor(x => x.MobileNumber, new { @class = "form-control reset-control", id = "MobileNumber", required = "required", @readonly = "readonly" })
                                    @Html.ValidationMessageFor(x => x.MobileNumber, "", new { @class = "help-block" }, "p")
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group row pt-md-2 @Html.ValidationErrorFor(x => x.DateofBirth, "has-error")">
                                <label for="" class="col-sm-5 col-md-5 col-form-label">
                                    @Html.Sitecore().Dictionary("/Accounts/Register/DateofBirth", "Date of Birth")
                                    <span class="required">*</span>
                                </label>
                                <div class="col-sm-7 col-md-7">
                                    <div class="input-group date mb-3">
                                        @Html.TextBoxFor(x => x.DateofBirth, new { @class = "form-control reset-control", id = "datetimepicker1", required = "required" })
                                        <div class="input-group-prepend">
                                            <span class="input-group-text" id="basic-addon1"><i class="fa fa-calendar-alt"></i></span>
                                        </div>
                                    </div>
                                    @Html.ValidationMessageFor(x => x.DateofBirth, "", new { @class = "help-block" }, "p")
                                </div>
                            </div>
                        </div>
                    </div>
                    <hr>
                    <div class="row">

                        <div class="col-md-6">
                            <div class="form-group row pt-md-2 @Html.ValidationErrorFor(x => x.Captcha, "has-error")">
                                <label for="" class="col-sm-5 col-md-5 col-form-label">@Html.Sitecore().Dictionary("/Common/Captcha", "Captcha") <span class="required">*</span></label>
                                <div class="col-sm-7 col-md-7">
                                    @Html.Captcha("Try another", "Enter the text you see above:", 4, "Is required field", true)
                                    @Html.ValidationMessageFor(x => x.Captcha, "", new { @class = "help-block" }, "p")
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="form-group row pt-md-3">
                        <div class="col-sm-12">
                            <div class="form-check">
                                @Html.CheckBoxFor(x => x.EBill, new { @class = "form-check-input" })
                                <label class="form-check-label" for="gridCheck1">
                                    @Html.Sitecore().Dictionary("/Accounts/Register/EBill", "E-Bill (I want to received my electricity bill by email on above mentioned email id.)")
                                </label>
                            </div>
                        </div>
                    </div>
                    <div class="form-group row">
                        <div class="col-sm-12">
                            <div class="form-check">
                                @Html.CheckBoxFor(x => x.RecieveNotification, new { @class = "form-check-input" })
                                <label class="form-check-label" for="gridCheck2">
                                    @Html.Sitecore().Dictionary("/Accounts/Register/RecieveNotification", "I want to receive information updates about Adani Electricity's new services and initiatives.")
                                </label>
                            </div>
                        </div>
                    </div>

                    <div class="form-group row pt-md-3 mb-0">
                        <div class="col-12">
                            <button type="submit" class="btn btn-primary">@Html.Sitecore().Dictionary("/Accounts/Register/Button/Submit", "Submit")</button>
                            <button type="button" class="btn btn-secondary" id="btnReset" onclick="ResetElement('frmRegister')">@Html.Sitecore().Dictionary("/Accounts/Register/Button/Reset", "Reset")</button>
                        </div>
                    </div>
                </form>


            </div>
        </div>
        <!-- /Page Content -->
    </div>
}
