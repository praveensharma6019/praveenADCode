@using Sitecore.Foundation.Dictionary.Extensions
@using Sitecore.Foundation.SitecoreExtensions.Extensions
@using Sitecore.Mvc.Configuration
@model Sitecore.Feature.Accounts.Models.NonRegisteredAccount



@using (Html.BeginRouteForm(MvcSettings.SitecoreRouteName, FormMethod.Post, new { id = "frmNonRegisteredAccount" }))
{
    @Html.AddUniqueFormId()
    @Html.AntiForgeryToken()
    <!-- Toggle button to show/hide side nav -->
    <div class="d-block d-md-none sideNavBtn">
        <button type="button" id="sidebarCollapse" class="btn btn-secondary">
            <i class="fas fa-align-left"></i>
            <span>&nbsp;Menu</span>
        </button>
    </div>
    <!-- /Toggle button to show/hide side nav -->
    <div class="clearfix"></div>
    <!-- Update Profile Page Content-->
    <div class="panel">
        <p>
            @Html.Sitecore().Dictionary("/Accounts/My Account/Multiple Accounts/Non Registered Account/P_Desc", "An account that has already been registered for the My Account services.")
        </p>
        <form class="pt-3">
            <div class="form-group row">
                <label for="" class="col-sm-4 col-md-3 col-form-label">
                    @Html.Sitecore().Dictionary("/Accounts/My Account/Multiple Accounts/Non Registered Account/Master Account Number", "Master Account Number")
                </label>
                <div class="col-sm-8 col-lg-6">
                    <strong>
                        @Html.DisplayTextFor(x => x.MasterAccountNumber)
                    </strong>
                </div>
            </div>
            <div class="form-group row  @Html.ValidationErrorFor(x => x.Accountnumber, "has-error")">
                <label for="" class="col-sm-4 col-md-3 col-form-label">
                    @Html.Sitecore().Dictionary("/Accounts/My Account/Multiple Accounts/Non Registered Account/Existing Account Number", "Account Number")
                    <span class="required">*</span>
                </label>
                <div class="col-sm-8 col-lg-6">
                    @Html.TextBoxFor(x => x.Accountnumber, new { @class = "form-control reset-control", required = "required" })
                    @Html.ValidationMessageFor(x => x.Accountnumber, "", new { @class = "help-block" }, "p")
                </div>
            </div>
            <div class="form-group row @Html.ValidationErrorFor(x => x.MeterNumber, "has-error")">
                <label for="" class="col-sm-4 col-md-3 col-form-label">
                    @Html.Sitecore().Dictionary("/Accounts/My Account/Multiple Accounts/Non Registered Account/Existing Meter Number", "Meter Number")
                    <span class="required">*</span>
                </label>
                <div class="col-sm-8 col-lg-6">
                    @Html.TextBoxFor(x => x.MeterNumber, new { @class = "form-control reset-control", required = "required" })
                    @Html.ValidationMessageFor(x => x.MeterNumber, "", new { @class = "help-block" }, "p")
                </div>
            </div>

            <div class="form-group row py-2">
                <div class="col-sm-12">
                    <button type="submit" class="btn btn-primary">@Html.Sitecore().Dictionary("/Accounts/My Account/Multiple Accounts/Non Registered Account/Button/Submit", "Submit")</button>
                    <button type="button" class="btn btn-secondary" id="btnReset" onclick="ResetElement('frmNonRegisteredAccount')">@Html.Sitecore().Dictionary("/Accounts/My Account/Multiple Accounts/Non Registered Account/Button/Reset", "Reset")</button>
                </div>
            </div>
        </form>
    </div>

}

