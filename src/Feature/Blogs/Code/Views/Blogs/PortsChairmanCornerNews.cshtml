@using Sitecore.Foundation.Dictionary.Extensions
@{ 
    var datasource = Sitecore.Mvc.Presentation.RenderingContext.Current.Rendering.DataSource;
    var elements = Sitecore.Context.Database.GetItem(datasource);
    var ulclass = Sitecore.Mvc.Presentation.RenderingContext.Current.Rendering.Parameters.Where(x => x.Key == "ulclass").FirstOrDefault().Value;
    var divclass = Sitecore.Mvc.Presentation.RenderingContext.Current.Rendering.Parameters.Where(x => x.Key == "divclass").FirstOrDefault().Value;
    if (string.IsNullOrEmpty(divclass))
    {
        divclass = "box-block p-4 w-100 h-100";
    }
    var i = 0;
    var sortedItem = elements.Children.Where(x => x.Fields["IsVisible"].Value == "1").OrderByDescending(x => x.Fields["Date"].Value);
}






<div class="@divclass">
    <ul class="@ulclass">
        @foreach (var item in sortedItem)
        {
            string linkUrl = Sitecore.Links.LinkManager.GetItemUrl(item);
            <li>
                <p><a href="@linkUrl">@Html.Sitecore().Field("Title", item)</a></p><span>@Html.Sitecore().Field("Date", item, new { format = "MMM dd, yyyy" })  @Html.Sitecore().Field("Author", item)</span>
            </li>
            if (i == 2)
            {
                break;
            }
            i++;
        }
    </ul>
    @{

        string parentUrl = Sitecore.Links.LinkManager.GetItemUrl(elements);
    }
    <p class="text-right"><a href="@parentUrl">Read more</a></p>
</div>