@using Sitecore.Feature.Navigation
@using Sitecore.Foundation.SitecoreExtensions.Extensions
@using Sitecore.Foundation.Dictionary.Extensions
@model Sitecore.Feature.Navigation.Models.NavigationItems
@{
    if (Model?.NavItems == null)
    {
        return;
    }

    var isSocialMenu = Model.NavItems.All(i => !string.IsNullOrWhiteSpace(i.Item[Templates.LinkMenuItem.Fields.Icon]));
}
@*<ul class="@(isSocialMenu ? "social-links" : "mobile-none") float-right">*@
@foreach (var item in Model.NavItems)
{
    //var liclass = item.IsActive ? "active " : "";
    //if (item.Item.Fields[Templates.LinkMenuItem.Fields.DividerBefore].IsChecked())
    //{
    //    liclass += "divider-left";
    //}
    <li>
        @*class="@liclass"*@
        <a href="@item.Url" target="@item.Target" title="@item.Item[Templates.Navigable.Fields.NavigationTitle]">
            @if (!string.IsNullOrWhiteSpace(item.Item[Templates.LinkMenuItem.Fields.Icon]))
            {
                <i class="@item.Item[Templates.LinkMenuItem.Fields.Icon]"></i> 
                //in border rounded-circle p - 1 social - icons - top
            }
            else
            {
                if (item.Item[Templates.LinkMenuItem.Fields.Image] != null)
                {
                    @Html.Sitecore().ImageField(Templates.LinkMenuItem.Fields.Image, item.Item, 20, 67)
                }
                else
                {
                    @Html.Sitecore().Field(Templates.Navigable.Fields.NavigationTitle, item.Item)
                }
            }
        </a>
    </li>
}
@*</ul>*@
