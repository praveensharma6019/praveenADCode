@using Sitecore.Data.Fields
@using Sitecore.Feature.Media
@using Sitecore.Feature.Media.Repositories
@using Sitecore.Foundation.Alerts
@using Sitecore.Foundation.Alerts.Extensions
@using Sitecore.Foundation.Dictionary.Extensions
@using Sitecore.Foundation.SitecoreExtensions.Extensions
@using Sitecore.Foundation.Theming.Extensions
@using Sitecore.Resources.Media
@model Sitecore.Mvc.Presentation.RenderingModel
@{
    var carouselId = "carousel" + Guid.NewGuid().ToString("N");
    var elements = MediaSelectorElementsRepository.Get(Model.Item).ToArray();
    var paramid = Sitecore.Mvc.Presentation.RenderingContext.Current.Rendering.Parameters;
    var imgbg = Sitecore.Context.Database.GetItem(paramid["background-image"]);
}


<section class="section-container section" data-hash="h">
    <div class="bg-images">
        @Html.Sitecore().ImageField(Templates.HasBannerSelectorclubahmd.Fields.Image, imgbg)
    </div>
    <div class="container aos-item__inner aos-item">
        <h2 class="d-block position-relative txt-white txt-center txt-lg mb-5 font-weight-bold">Accolades</h2>
        <div class="owl-carousel owl-theme" id="accolades" data-aos="fade-up" data-aos-duration="1000">
            @foreach (var img in elements.ToList())
            {
                var field = img.Item.IsDerived(Templates.HasMediaImage.Fields.Image) ? Templates.HasMedia.Fields.Thumbnail : Templates.HasMediaImage.Fields.Image;
                var style = img.Item.ImageUrl(field, new MediaUrlOptions()).ToCssUrlValue();
                <div class="item"><img src="@style" class=""></div>
            }
            </div>
    </div>
</section>












