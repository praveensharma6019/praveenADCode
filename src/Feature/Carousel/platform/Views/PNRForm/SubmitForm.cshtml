@model Adani.SuperApp.Airport.Feature.Carousel.Platform.Models.PNRFormModel


@if (Model != null)
{

    using (Html.BeginForm("SubmitForm", "PNRForm", FormMethod.Post, new { @class = "form-signin", id = "pNRForm" }))
    {
        @Html.ValidationSummary(true, "", new { @class = "is-invalid" })


        <div class="contact-form scrollableOffset" id="contact-us">

            <div class="row align-items-center">
                <div class="col-md-4 order_2">
                    <div class="form-wrapper">
                        <h3>@Model.Labels.FormTitle</h3>
                        <p>
                            @Model.Labels.Description
                        </p>
                        <div class="form">
                            <div class="form-floating mb-3">

                                @Html.TextBoxFor(x => x.Input.firstName, new
                           {
                               @id = "firstName",
                               @class = "form-control",
                                @required = "required",
                               Placeholder = Model.Labels.FirstNameLabel

                                })

                                @Html.ValidationMessageFor(x => x.Input.firstName, "", new { @class = "is-invalid" })


                                <label for="fullName">@Model.Labels.FirstNameLabel</label>
                            </div>

                            <div class="form-floating mb-3">

                                @Html.TextBoxFor(x => x.Input.lastName, new
                           {
                               @id = "lastName",
                               @class = "form-control",
                               @required = "required",
                               Placeholder = Model.Labels.LastNameLabel

                           })

                                @Html.ValidationMessageFor(x => x.Input.lastName, "", new { @class = "is-invalid" })


                                <label for="contactnumber">@Model.Labels.LastNameLabel</label>
                            </div>
                            <div class="form-floating mb-3">

                                @Html.TextBoxFor(x => x.Input.pNR, new
                           {
                               @id = "pnr",
                               @class = "form-control",
                               @required = "required",
                               Placeholder = Model.Labels.PNR

                           })

                                @Html.ValidationMessageFor(x => x.Input.pNR, "", new { @class = "is-invalid" })


                                <label for="email">@Model.Labels.PNR</label>
                            </div>
                            <div class="form-floating mb-3">

                                @Html.TextBoxFor(x => x.Input.mobile, new
                           {
                               @id = "mobile",
                               @class = "form-control",
                                @required = "required",
                               Placeholder = Model.Labels.ContactNumberLabel

                           })

                                @Html.ValidationMessageFor(x => x.Input.mobile, "", new { @class = "is-invalid" })


                                <label for="organization">@Model.Labels.ContactNumberLabel</label>
                            </div>
                            <div class="form-floating mb-3">
                                @Html.TextBoxFor(model => model.Input.travelDate,
                                    new { type = "date", @required = "required", @class = "form-control" })

                                @Html.ValidationMessageFor(x => x.Input.travelDate, "", new { @class = "is-invalid"})
                            </div>
                            <div class="submitBtn">
                                <input type="submit" id="callBackSubmit" class="btn btn-primary btn-lg rounded-pill g-recaptcha" data-sitekey="6LfQd_0lAAAAAB6mIPTdAMKUXjXHpJTg2KgxshFP"
                                       data-callback='onSubmit'
                                       data-action='submit'
                                       value="@Model.Labels.ButtonText" />

                                <span class="loader">

                                    <span class="loaderDot"></span>

                                    <span class="loaderDot"></span>

                                    <span class="loaderDot"></span>

                                </span>

                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </div>
    }
    if (ViewBag.message != null)
    {
        <script type="text/javascript">
			var i = setInterval(function() {
			if ($) {
			clearInterval(i);

			$(document).ready(function(){
			alert('@ViewBag.message');
			})
			}
			}, 100)
        </script>
    }

}

