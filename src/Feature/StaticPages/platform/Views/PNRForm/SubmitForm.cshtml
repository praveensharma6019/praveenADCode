@model Adani.SuperApp.Airport.Feature.StaticPages.Platform.Model.PNRFormModel


@if (Model != null)
{

    using (Html.BeginForm("SubmitForm", "PNRForm", FormMethod.Post, new { @class = "form-signin", id = "pNRForm" }))
    {
        @Html.ValidationSummary(true, "", new { @class = "is-invalid" })
        @Html.AntiForgeryToken()

        <div class="contact-form scrollableOffset" id="contact-us">

            <div class="row align-items-center">
                <div class="col-md-4 order_2">
                </div>
                <div class="col-md-4 order_2">
                    <div class="form-wrapper pnr-form">
                        <h3>@Model.Labels.FormTitle</h3>
                        <p>
                            @Model.Labels.Description
                        </p><br>
                        <div class="form">
                            <div class="form-floating mb-3">

                                @Html.TextBoxFor(x => x.Input.firstName, new
                           {
                               @id = "firstName",
                               @class = "form-control",
                                @required = "required",
                               Placeholder = Model.Labels.FirstNameLabel

                                })

                                @Html.ValidationMessageFor(x => x.Input.firstName, "", new { @class = "is-invalid" })

                                <p class="field-validation-error invalid-feedback" style="display:none"></p>
                                <label for="fullName">@Model.Labels.FirstNameLabel</label>
                            </div>

                            <div class="form-floating mb-3">

                                @Html.TextBoxFor(x => x.Input.lastName, new
                           {
                               @id = "lastName",
                               @class = "form-control",
                               @required = "required",
                               Placeholder = Model.Labels.LastNameLabel

                           })
                                <p class="field-validation-error invalid-feedback" style="display:none"></p>
                                @Html.ValidationMessageFor(x => x.Input.lastName, "", new { @class = "is-invalid" })


                                <label for="contactnumber">@Model.Labels.LastNameLabel</label>
                            </div>
                            <div class="form-floating mb-3">

                                @Html.TextBoxFor(x => x.Input.pNR, new
                           {
                               @id = "pnr",
                               @class = "form-control",
                               @required = "required",
                               Placeholder = Model.Labels.PNR

                           })
                                <p class="field-validation-error invalid-feedback" style="display:none"></p>
                                @Html.ValidationMessageFor(x => x.Input.pNR, "", new { @class = "is-invalid" })


                                <label for="email">@Model.Labels.PNR</label>
                            </div>
                            <div class="form-floating mb-3">

                                @Html.TextBoxFor(x => x.Input.mobile, new
                           {
                               @id = "mobile",
                               @class = "form-control",
                                @required = "required",
                               Placeholder = Model.Labels.ContactNumberLabel

                           })
                                <p class="field-validation-error invalid-feedback" style="display:none"></p>
                                @Html.ValidationMessageFor(x => x.Input.mobile, "", new { @class = "is-invalid" })


                                <label for="organization">@Model.Labels.ContactNumberLabel</label>
                            </div>
                            <div class="form-floating mb-3">

                                @Html.TextBoxFor(x => x.Input.email, new
                           {
                               @id = "email",
                               @class = "form-control",
                                @required = "required",
                               Placeholder = Model.Labels.EmailLabel

                           })
                                <p class="field-validation-error invalid-feedback" style="display:none"></p>
                                @Html.ValidationMessageFor(x => x.Input.email, "", new { @class = "is-invalid" })


                                <label for="organization">@Model.Labels.EmailLabel</label>
                            </div>
                            <div class="form-floating mb-3">
                                @Html.TextBoxFor(model => model.Input.travelDate,
                                    new { type = "date", @id = "pnrDate", @min = "", @required = "required", @class = "non-editable form-control QueryForm_date-input-box__U89QT adl-datepicker react-datepicker-ignore-onclickoutside" })

                                <p class="field-validation-error invalid-feedback" style="display:none"></p>
                                @Html.ValidationMessageFor(x => x.Input.travelDate, "", new { @class = "is-invalid" })
                                <label for="travelDate">Travel Date</label>
                            </div>
                            <div class="submitBtn">
                                <input type="hidden" name="pnr-form-captcha-response" id="pnr-form-captcha-response">
                                <input type="submit" id="pnrSubmit" class="btn btn-primary btn-lg rounded-pill g-recaptcha" value="@Model.Labels.ButtonText"/>
                                <span class="loader">

                                    <span class="loaderDot"></span>

                                    <span class="loaderDot"></span>

                                    <span class="loaderDot"></span>

                                </span>

                            </div>
                        </div>
                        <p>
                            @Model.Labels.FooterDescription
                        </p>
                    </div>
                </div>
            </div>
        </div>
    }
    if (ViewBag.message != null)
    {
        <div class="modal fade show" id="pnrModel" role="dialog">
            <div class="modal-dialog">

                <!-- Modal content-->
                <div class="modal-content">
                    <div class="modal-header">
                        <div class="modal-title h4">Thank You</div>
                    </div>
                    <div class="modal-body">@ViewBag.message</div>
                    <div class="modal-footer">
                        <button type="button" class="adl-button btn btn-primary" data-bs-dismiss="modal" style="width: 100%; margin-left: 0px;">Done</button>
                    </div>
                </div>

            </div>
        </div>
    }

}

