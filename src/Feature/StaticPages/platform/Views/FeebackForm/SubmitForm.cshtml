@using Adani.SuperApp.Airport.Feature.StaticPages.Platform.Model
@model SubmitViewModel

@if (Model != null)
{

    if (Model.SubmitFormItems != null)
    {
        using (Html.BeginForm("SubmitForm", "FeebackForm", FormMethod.Post, new { @class = "form-signin", id = "feedbackForm" }))
        {
            @Html.ValidationSummary(true, "", new { @class = "is-invalid" })

           
            <div class="form-floating">

                @* ToDo: Change to get values dynamic *@

                <select required class="form-select"
                        id="airportSelect"
                        aria-label="Floating label select example">
                    <option value="">@Model.SubmitFormItems.SelectAirportLabel</option>

                    @foreach (var option in Model.SubmitFormItems.AirportList)
                    {
                        <option value="@option.AirportCode">@option.AirportName</option>

                    }

                </select>
                <input type="hidden" id="airportCode" name="airportCode" value="" />
                <label for="floatingSelect">@Model.SubmitFormItems.SelectAirportLabel</label>
            </div>
            <div class="form-floating">
                <select required class="form-select"
                        id="IssueSelect"
                        aria-label="Floating label select example">
                    <option value="">@Model.SubmitFormItems.IssueFacedLabel</option>

                    @foreach (var option in Model.SubmitFormItems.IssueList)
                    {
                        <option value="@option">@option</option>

                    }
                </select>
                <input type="hidden" id="issueItem" name="issueItem" value="" />
                <label for="floatingSelect">@Model.SubmitFormItems.IssueFacedLabel </label>
            </div>
            <div class="form-floating">

                @Html.TextBoxFor(x => x.FeedbackFormData.Name, new
                {
                @id = "fullName",
                Class = "form-control",
                Placeholder = Model.SubmitFormItems.FullNameLabel

                })

                @Html.ValidationMessageFor(x => x.FeedbackFormData.Name, "", new { @class = "is-invalid" })

                <div class="clearIcon d-none">
                    <i class="i-cross"></i>
                </div>

                <label for="floatingInput">@Model.SubmitFormItems.FullNameLabel</label>
            </div>

            <div class="numberWrap">
                <div class="citydropDown">
                    <div class="form-floating inputFieldJS">

                        @Html.TextBoxFor(x => x.FeedbackFormData.MobileNumber, new
                   {
                       @id = "mobileNo",
                       Class = "form-control",
                       Placeholder = Model.SubmitFormItems.MobileNoLabel,
                       autocomplete = "off"

                   })
                        @Html.ValidationMessageFor(x => x.FeedbackFormData.MobileNumber, "", new { @class = "is-invalid" })

                        <div class="clearIcon d-none">
                            <i class="i-cross"></i>
                        </div>

                        <label for="floatingInput">@Model.SubmitFormItems.MobileNoLabel</label>
                    </div>
                </div>
                <div class="citydropDown">
                    <div class="form-floating inputFieldJS">

                        @Html.TextBoxFor(x => x.FeedbackFormData.Email, new
                        {
                        @id = "emailId",
                        Class = "form-control",
                        Placeholder = "name@example.com",
                        @type = "email"

                        })

                        @Html.ValidationMessageFor(x => x.FeedbackFormData.Email, "", new { @class = "is-invalid" })

                        <div class="clearIcon d-none">
                            <i class="i-cross"></i>
                        </div>

                        <label for="floatingInput">@Model.SubmitFormItems.EmailIDLabel</label>

                    </div>
                </div>
            </div>
            <div class="form-floating">

                @Html.TextAreaFor(x => x.FeedbackFormData.Description, new
           {
               @id = "description",
               Class = "form-control user-desc",
               placeholder = Model.SubmitFormItems.WritePlacholderLabel,
               style = "height: 100px"               
           })
                @Html.ValidationMessageFor(x => x.FeedbackFormData.Description, "", new { @class = "is-invalid", id = "desc" })

                <label for="floatingTextarea2">@Model.SubmitFormItems.HelpTextLabel</label>
            </div>
            <div class="form-check">
                @Html.CheckBoxFor(x => x.FeedbackFormData.IsAgree, new
           {
               @id = "flexCheckDefault",
               Class = "form-check-input"
           })

                <label class="form-check-label" for="flexCheckDefault">
                    @Model.SubmitFormItems.AgreeLabel
                </label>

                <div id="agreeCheck" style="display:none"> Please agree </div>
            </div>

            <div class="form-floating" id="srcErr" style="display: none;color:red">
                Please try again after sometime.
            </div>

            <div class="submitBtn">
                <input type="submit" id="feedbackSubmit" class="btn btn-primary btn-lg rounded-pill"
                       value="@Model.SubmitFormItems.SubmitButtonLabel" />

                <button id="btnLoader" class="btn btn-primary btn-lg rounded-pill" style="display:none">

                    <span class="loader">

                        <span class="loaderDot"></span>

                        <span class="loaderDot"></span>

                        <span class="loaderDot"></span>

                    </span>

                </button>

            </div>





        }

        <div class="modal fade" id="feedbackModal" tabindex="-1" aria-labelledby="feedbackModal" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">

                    <div class="modal-body form-msg-popup">
                        <div class="icon"><i class="i-tick"></i></div>

                        <label>@Model.SubmitFormItems.ModalLabel</label>

                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-primary" id="btnClose" data-bs-dismiss="modal">@Model.SubmitFormItems.CloseLabel</button>
                    </div>
                </div>
            </div>
        </div>
    }
}


