@using Sitecore.Mvc


@using Sitecore.Foundation.SitecoreExtensions.Extensions
@using Sitecore.Foundation.Dictionary.Extensions
@using Sitecore.Mvc.Configuration
@using Sitecore.JaipurAirport.Website.Model;
@model Sitecore.JaipurAirport.Website.Model.TenderEditModel

@{
    var listingitem = Sitecore.Context.Database.GetItem(Templates.Tender.AdminTenderListing);
}

<section class="bg-white py-5">
    <div class="container">
        @using (Html.BeginForm("Logout", "JaipurAirport", FormMethod.Post))
        {
            <div class="col-12 p-0 pb-3">
                <div class="float-right mb-4"><button type="submit" class="btn btn-primary">@Html.Sitecore().Dictionary("JaipurAirport/Tender/Logout", "Logout")</button></div>
                <div class="clearfix"></div>
            </div>
        }
        <div class="pb-3 panel">
            <!-- Section -->
            <div class="">
                <h2 class="txt-orange txt-lg mb-3">@Html.Sitecore().Dictionary("JaipurAirport/Tender/Update Tender Text", "Update Tender")</h2>
            </div>
            <div class="">
                @using (Html.BeginRouteForm(MvcSettings.SitecoreRouteName, FormMethod.Post, new { id = "frmUpdateTender", @class = "form-signin", @enctype = "multipart/form-data" }))
                {
                    @Html.AddUniqueFormId()

                    <div class="form-horizontal">

                        @if (ViewBag.EditError != null)
                        {
                            <div class="alert-danger">@ViewBag.EditError</div>
                        }
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.Id)
                        <div class="row">
                            <div class="col-lg-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.NITNo, htmlAttributes: new { @class = "control-label" })
                                    <div class="">
                                        @Html.TextBoxFor(model => model.NITNo, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.NITNo, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Business, htmlAttributes: new { @class = "control-label" })
                                    <div class="">
                                        @Html.TextBoxFor(model => model.Business, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.Business, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label" })
                                    <div class="">
                                        @Html.TextAreaFor(model => model.Description, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-6">
                                <div class="form-group">
                                    @Html.Label("Advertise Date(dd-MM-yyyy HH:mm:ss)", htmlAttributes: new { @class = "control-label" })
                                    <div class="">
                                        @*@Html.TextBoxFor(x => x.Adv_Date, "{0:dd-MM-yyyy hh:mm:ss}")*@
                                        @Html.TextBoxFor(model => model.Adv_Date, "{0:dd-MM-yyyy HH:mm:ss}", new { htmlAttributes = new { @class = "form-control", @type = "text" } })
                                        @Html.ValidationMessage("Adv_Date", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-6">
                                <div class="form-group">
                                    @Html.Label("Close Date(dd-MM-yyyy HH:mm:ss)", htmlAttributes: new { @class = "control-label" })
                                    <div class="">
                                        @*@Html.TextBoxFor(x => x.Closing_Date, "{0:dd-MM-yyyy hh:mm:ss}")*@
                                        @Html.TextBoxFor(model => model.Closing_Date, "{0:dd-MM-yyyy HH:mm:ss}", new { htmlAttributes = new { @class = "form-control", @type = "text" } })
                                        @Html.ValidationMessage("Closing_Date", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label" })
                                    <div class="">
                                        @Html.TextBoxFor(model => model.Location, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Estimated_Cost, htmlAttributes: new { @class = "control-label" })
                                    <div class="">
                                        @Html.TextBoxFor(model => model.Estimated_Cost, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.Estimated_Cost, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Cost_of_EMD, htmlAttributes: new { @class = "control-label" })
                                    <div class="">
                                        @Html.TextBoxFor(model => model.Cost_of_EMD, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.Cost_of_EMD, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label" })
                                    <div class="">

                                        @Html.DropDownListFor(model => model.Status, new List<SelectListItem>
                                    {
                                    new SelectListItem{ Text="Open", Value = "Open" },
                                    new SelectListItem{ Text="Close", Value = "Close" },
                                    }, Html.Sitecore().Dictionary("JaipurAirport/Tender/Select Status Label", "Select Status"))
                                        @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-6" style="display:none">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.PQFiles, htmlAttributes: new { @class = "control-label" })
                                    <div class="">
                                        @Html.TextBoxFor(model => model.PQFiles, "", new { @type = "file", @multiple = "multiple", @onchange = "Validate(this);", @accept = ".jpg,.jpeg,.png,.pdf,.doc,.docx,.xls,.xlsx" })
                                        @Html.ValidationMessageFor(model => model.PQFiles, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-6" style="display:none">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Files, htmlAttributes: new { @class = "control-label" })
                                    <div class="">
                                        @Html.TextBoxFor(model => model.Files, "", new { @type = "file", @multiple = "multiple", @onchange = "Validate(this);", @accept = ".jpg,.jpeg,.png,.pdf,.doc,.docx,.xls,.xlsx" })
                                        @Html.ValidationMessageFor(model => model.Files, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>

















                        <p><b>PQ Documents:</b></p>
                        <div class="table-responsive mb-3">
                            <table class="table table-borderless table-white table-hover mb-0 txt-xs">
                                <tr>
                                    <th>
                                        <label>Name</label>
                                    </th>
                                </tr>

                                @if (Model.PQDocuments != null)
                                {
                                    foreach (var item in Model.PQDocuments)
                                    {
                                        <tr>
                                            <td>
                                                @Html.ActionLink(item.FileName, "DownloadFile", new { id = item.Id }, new { @class = "txt-orange" })
                                            </td>
                                            <td>
                                                <button type="button" class="btn btn-default btn-sm">
                                                    <span class="glyphicon glyphicon-trash"></span> @Html.ActionLink("Trash", "DeleteFile", new { id = item.Id, DocumentPath = item.DocumentPath })
                                                </button>
                                            </td>
                                        </tr>
                                    }
                                }
                            </table>
                        </div>
                        <p><b>Tender Documents:</b></p>
                        <div class="table-responsive mb-4">
                            <table class="table table-borderless table-white table-hover mb-0 txt-xs">
                                <tr>
                                    <th>
                                        <label>Name</label>
                                    </th>
                                    <th>
                                        <label></label>
                                    </th>
                                </tr>

                                @if (Model.TenderDocuments != null)
                                {
                                    foreach (var item in Model.TenderDocuments)
                                    {
                                        <tr>
                                            <td>
                                                @Html.ActionLink(item.FileName, "DownloadFile", new { id = item.Id }, new { @class = "txt-orange" })
                                            </td>
                                            <td>
                                                <button type="button" class="btn btn-default btn-sm">
                                                    <span class="glyphicon glyphicon-trash"></span> @Html.ActionLink("Trash", "DeleteFile", new { id = item.Id, DocumentPath = item.DocumentPath })
                                                </button>
                                            </td>
                                        </tr>
                                    }
                                }
                            </table>
                        </div>
                        <div class="form-group">
                            <div class="text-right">
                                <input type="submit" value="Update" class="btn btn-primary" name="update_tender" />
                                @if (Model.Status != "Inactive")
                                {
                                    <input type="submit" value="Inactivate" class="btn btn-secondary" name="Inactivate_tender" />
                                }
                                else
                                {
                                    <input type="submit" value="Activate" class="btn btn-secondary" name="Activate_tender" />
                                }
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
        <div class="text-left mt-3">
            <a href="@listingitem.Url()" class="btn btn-primary">@Html.Sitecore().Dictionary("JaipurAirport/Tender/Back To List Text", "Back To Tender List")</a>
        </div>
    </div>
</section>




