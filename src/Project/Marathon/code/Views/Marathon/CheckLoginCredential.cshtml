@using System.Web.Mvc
@using Sitecore.Foundation.SitecoreExtensions.Extensions
@using Sitecore.Foundation.Dictionary.Repositories
@model Sitecore.Marathon.Website.Models.MarathonLoginModel
@{
    var msg = "";
    var LoginOTPmsg = "";
    if (Session["errmsg"] != null)
    {
        msg = Session.GetAndRemove("errmsg").ToString();
    }
    if (Session["LoginOTPmsg"] != null)
    {
        LoginOTPmsg = Session["LoginOTPmsg"].ToString();
        Session["LoginOTPmsg"] = null;
    }
    string LoginMail = string.Empty;
    string LoginDOB = string.Empty;
    string LoginCont = string.Empty;
    if (Session["LoginData"] != null)
    {
        var LoginInfo = (Sitecore.Marathon.Website.Models.MarathonLoginModel)Session.GetAndRemove("LoginData");
        LoginMail = LoginInfo.Email_id;
        LoginDOB = LoginInfo.Dob;
        LoginCont = LoginInfo.Contact;
    }
    var NotRegisteredMsg = DictionaryPhraseRepository.Current.Get("ErrorMsg/NotRegistered", "");
}

@using (Html.BeginForm("CheckLoginCredential", "Marathon", FormMethod.Post, new { name = "login_form", id = "login_form", @class = "login-form", autocomplete = "off" }))
{
    @Html.AntiForgeryToken()
    <h3 class="text-left">Already registered User<span class="fa fa-info-circle ml-2" data-toggle="tooltip" data-placement="top" title="" data-original-title="Register and validate your Mobile Number"></span></h3>
    <div class="form-group mb-3">
        <label class="" for="">Mobile Number <span class="errormsg">*</span></label>
        @if (Session["LoginData"] != null)
        {
            <input name="Contact" value="@LoginCont" id="contact" type="number" maxlength="10" placeholder="Mobile Number" class="form-control">
        }
        else
        {
            <input name="Contact" value="@LoginCont" id="contact" type="number" maxlength="10" placeholder="Mobile Number" class="form-control">
        }
    </div>

    if (!string.IsNullOrEmpty(LoginOTPmsg))
    {
        <div class="form-group mb-3">
            <label for="LoginOTP">OTP :</label>
            <input name="OTP" id="LoginOTP" type="text" class="form-control validated" value="" placeholder="Enter OTP" data-error-msg="Please enter OTP to proceed.">
            <span class='errormsg'>@NotRegisteredMsg</span>
        </div>
    }
    if (!string.IsNullOrEmpty(msg))
    {
        <div class="form-group mb-3">
            <label for="LoginOTP">OTP :</label>
            <input name="OTP" id="LoginOTP" type="text" class="form-control validated" value="" placeholder="Enter OTP" data-error-msg="Please enter OTP to proceed.">
            <span class='errormsg'>@NotRegisteredMsg</span>
        </div>
    }
    <div class="form-group mb-3">
        <input name="reResponse" id="reResponseLogin" type="hidden" class="form-control g-recaptcha">
    </div>

    <div class="form-group text-right">
        <label class="error">@ViewBag.errmsg</label>


        @if (!string.IsNullOrEmpty(LoginOTPmsg))
        {
            <div class="form-group text-right">
                <input name="resendOTP" id="resendOTP" type="submit" class="btn btn-submit LoginresendSMSOTP loginBtn" style=" margin-left: auto; margin-bottom: 20px;" value="Resend OTP">
                <input name="login" id="login" type="submit" class="btn btn-submit g-recaptcha" value="Validate Phone Number to Log in" data-sitekey="6Lffy6MmAAAAAJWCrNIqaaSIz3mHsEy_xpKrmiaY" data-callback='onSubmitLogin'>
            </div>
        }
        else
        {
            if (!string.IsNullOrEmpty(msg))
            {
                <input name="resendOTP" id="resendOTP" type="submit" class="btn btn-submit LoginresendSMSOTP loginBtn" style=" margin-left: auto; margin-bottom: 20px;" value="Resend OTP">
            }
            <div class="form-group text-right">
                <input name="login" id="login" type="submit" class="btn btn-submit g-recaptcha" value="Request OTP to Log in" value="Validate Phone Number" data-sitekey="6Lffy6MmAAAAAJWCrNIqaaSIz3mHsEy_xpKrmiaY" data-callback='onSubmitLogin'>
            </div>
        }
    </div>
}