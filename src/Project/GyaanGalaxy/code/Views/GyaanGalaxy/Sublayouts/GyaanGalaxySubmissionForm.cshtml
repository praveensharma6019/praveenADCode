@using Sitecore.Foundation.SitecoreExtensions.Extensions
@using Sitecore.Mvc
@using Sitecore.Mvc.Configuration
@using Sitecore.GyaanGalaxy.Website
@model Sitecore.GyaanGalaxy.Website.Models.GyaanGalaxySubmisisonModal
@{
    // var id = Sitecore.Context.Database.GetItem("about-us").Url();
    //  var id = "about-us";
    //  string RedirectUrl = Request.Url.Scheme + "://" + Request.Url.Host;
    //  var pagename = Sitecore.Links.LinkManager.GetItemUrl(Sitecore.Context.Item);
    var CategoryTpye = Sitecore.Context.Database.GetItem("{2721E5A3-6B1D-403C-80C7-BC1D1B7CA1FF}");




}
<section class="bg-gray section_padding">
    <div class="container">
        <h4 class="heading pl-4 mb-4" style="color: #f63c15;font-size: 3.5rem;font-weight: 600;line-height: 3.5rem;margin-bottom: 2rem;">Submission Form</h4>
        <div class="contact-form">
            @using (Html.BeginRouteForm(MvcSettings.SitecoreRouteName, FormMethod.Post, new { id = "submission_form", name = "submission_form", @class = "submission_form", enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(m => m.PageInfo, new { @Value = HttpContext.Current.Request.Url.AbsoluteUri })
                @Html.HiddenFor(m => m.FormName, new { @Value = HttpContext.Current.Request.Url.AbsolutePath })
                @Html.HiddenFor(m => m.UploadedResearchLink, new { @Value = HttpContext.Current.Request.Url.PathAndQuery })

                <div class="row">
                    <div class="col-md-6 mb-3 col-lg-3">
                        <div class="form-group">
                            @Html.TextBoxFor(model => model.Name, new { @class = "form-control", required = "required", placeholder = "Name", id = "cname" })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "help-block" }, "p")

                        </div>
                    </div>

                </div>
                <div class="row">
                    <div class="col-md-4 mb-3 col-lg-6">
                        <div class="form-group">
                            @Html.TextBoxFor(model => model.Age, new { @class = "form-control", required = "required", placeholder = "Age", id = "Age" })
                            @Html.ValidationMessageFor(model => model.Age, "", new { @class = "help-block" }, "p")
                        </div>
                    </div>
                    <div class="col-md-4 mb-3 col-lg-6">
                        <div class="form-group">
                            @Html.TextBoxFor(model => model.ClassOrGrade, new { @class = "form-control", required = "required", placeholder = "Class Or Grade", id = "ClassOrGrade" })
                            @Html.ValidationMessageFor(model => model.ClassOrGrade, "", new { @class = "help-block" }, "p")
                        </div>
                    </div>
                    <div class="col-md-6 mb-3 col-lg-3">
                        <div class="form-group">
                            @Html.TextBoxFor(model => model.SchoolName, new { @class = "form-control", required = "required", placeholder = "School Name", id = "cschoolname" })
                            @Html.ValidationMessageFor(model => model.SchoolName, "", new { @class = "help-block" }, "p")

                        </div>
                    </div>
                    <div class="col-md-6 mb-3 col-lg-3">
                        <div class="form-group">
                            @Html.TextBoxFor(model => model.MobileNo, new { @class = "form-control", id = "ccontactno", type = "number", required = "required", placeholder = "Contact Number", maxlength = 10 })

                            @Html.ValidationMessageFor(model => model.MobileNo, "", new { @class = "help-block" }, "p")

                        </div>
                    </div>
                    <div class="col-md-4 mb-3 col-lg-6">
                        <div class="form-group">

                            @Html.TextBoxFor(model => model.EmailID, new { @class = "form-control", type = "email", required = "required", placeholder = "Email", id = "cmailid" })
                            @Html.ValidationMessageFor(model => model.EmailID, "", new { @class = "help-block" }, "p")

                        </div>
                    </div>
                    <div class="col-md-4 mb-3 col-lg-6">
                        <div class="form-group">
                            @Html.TextAreaFor(model => model.SchoolAddress, new { @class = "form-control", id = "SchoolAddress", rows = "3", required = "required", placeholder = "School Address" })
                        </div>
                    </div>
                    <div class="col-md-4 mb-3 col-lg-6">
                        <div class="form-group">
                            @Html.TextAreaFor(model => model.HouseAddress, new { @class = "form-control", id = "HouseAddress", rows = "3", required = "required", placeholder = "House Address" })
                        </div>
                    </div>
                    <div class="col-md-4 mb-3 col-lg-6">
                        <div class="form-group">
                            <select class="form-control" id="CategoryOfProject" name="CategoryOfProject">
                                <option value="">Category Of Project</option>
                                @foreach (var itemMessage in CategoryTpye.Children.ToArray())
                                {
                                    var getMessage = Html.Sitecore().Field("Title", itemMessage);
                                    <option value="@getMessage">@getMessage</option>

                                }
                            </select>
                        </div>
                    </div>
                    <div class="col-md-4 mb-3 col-lg-6">
                        <div class="form-group">
                            @Html.TextBoxFor(model => model.TitleOfProject, new { @class = "form-control", required = "required", placeholder = "Title Of Project", id = "TitleOfProject" })
                            @Html.ValidationMessageFor(model => model.TitleOfProject, "", new { @class = "help-block" }, "p")
                        </div>
                    </div>

                    <div class="col-12">
                        <div class="panel">
                            <p>Abstract (250-300 words)</p>
                            <div class="row">

                                <div class="col-md-6 mb-3 col-lg-4">
                                    <div class="form-group">
                                        @Html.TextAreaFor(model => model.Purpose, new { @class = "form-control", id = "cPurpose", rows = "3", required = "required", placeholder = "Purpose" })

                                    </div>
                                </div>
                                <div class="col-md-6 mb-3 col-lg-4">
                                    <div class="form-group">
                                        @Html.TextAreaFor(model => model.Procedure, new { @class = "form-control", id = "cProcedure", rows = "3", required = "required", placeholder = "Procedure" })

                                    </div>
                                </div>

                                <div class="col-md-6 mb-3 col-lg-4">
                                    <div class="form-group">
                                        @Html.TextAreaFor(model => model.NatureOfDataCollection, new { @class = "form-control", id = "NatureOfDataCollection", rows = "3", required = "required", placeholder = "Nature Of Data Collection" })

                                    </div>
                                </div>

                                <div class="col-md-6 mb-3 col-lg-4">
                                    <div class="form-group">
                                        @Html.TextAreaFor(model => model.Conclusions, new { @class = "form-control", id = "Conclusions", rows = "3", required = "required", placeholder = "Conclusions" })

                                    </div>
                                </div>
                                <div class="col-md-6 mb-3 col-lg-4">
                                    <div class="form-group">
                                        @Html.TextAreaFor(model => model.PossibleResreachApplication, new { @class = "form-control", id = "PossibleResreachApplication", rows = "3", required = "required", placeholder = "Possible Research Application" })

                                    </div>
                                </div>
                                <div class="col-lg-4 col-md-6">
                                    <label>Upload Research Paper<span class="required">*</span></label>
                                    <div class="custom-file">
                                        @Html.TextBoxFor(model => model.ResearchPaperAttachment, new { type = "file", id = "ResearchPaperAttachment", @class = "custom-file-input",
                                  accept = "application/pdf,.doc,.docx",
                                  required = "required"
                              })
                                        @Html.ValidationMessageFor(model => model.ResearchPaperAttachment, "", new { @class = "required help-block" }, "p")

                                        <label class="custom-file-label" for="">Choose file...</label>
                                        <div class="invalid-feedback">Example invalid custom file feedback</div>
                                    </div>
                                    <p class="mb-0 mt-1"><a href="-/media/BDE7E0557EE2490881F7991A525180D8.ashx" class="btn-link"><u>Download Sample Research Paper</u></a></p>
                                </div>
                            </div>
                        </div>
                    </div>




                    <div class="form-group ml-4">
                        <p class="txt-orange" id="docErrorMessage">@ViewBag.Message</p>
                    </div>
                    <div class="col-md-4 mb-3">

                        <div id="recaptcha1">

                        </div>

                    </div>
                    @Html.HiddenFor(model => model.reResponse, new { id = "reResponse" })
                    @Html.ValidationMessageFor(model => model.reResponse, "", new { @class = "help-block" }, "p")
                    <div class="col-md-12 mb-3 text-right">
                        <p><button type="submit" id="btnsubmit" name="SubmitApplication" value="submit" class="btn btn-primary">Submit</button></p>
                    </div>
                </div>

            }
        </div>
    </div>
</section>
<script src="https://www.google.com/recaptcha/api.js?onload=onloadCallback&render=explicit" async defer></script>
<script src="https://www.google.com/recaptcha/api.js?onload=registerCallBack&render=explicit" async defer></script>