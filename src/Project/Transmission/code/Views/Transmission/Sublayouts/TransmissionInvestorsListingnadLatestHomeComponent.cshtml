@using Sitecore.Mvc.Presentation
@using Sitecore
@using Sitecore.Foundation.SitecoreExtensions.Extensions
@using Sitecore.Foundation.Dictionary.Repositories
@using Sitecore.Foundation.Dictionary.Extensions
@using System.Text.RegularExpressions
@using Sitecore.Data
@using Sitecore.Data.Items
@using Sitecore.Data.Fields


@{
    
   var ListingDatasource = Sitecore.Mvc.Presentation.RenderingContext.Current.Rendering.Parameters.Where(x => x.Key == "ListingDatasource").FirstOrDefault().Value;    
    var ListingElements = Sitecore.Context.Database.GetItem(ListingDatasource); 
   
  var LatestTitle = Sitecore.Mvc.Presentation.RenderingContext.Current.Rendering.Parameters.Where(x => x.Key == "LatestTitle").FirstOrDefault().Value;
  var LatestDatasource = Sitecore.Mvc.Presentation.RenderingContext.Current.Rendering.Parameters.Where(x => x.Key == "LatestDatasource").FirstOrDefault().Value;  
   var elements = Sitecore.Context.Database.GetItem(LatestDatasource);
   var items = elements.GetChildren().OrderByDescending(x => x[Sitecore.FieldIDs.Updated]).ToList();;
   
     var LatestDatasource2 = Sitecore.Mvc.Presentation.RenderingContext.Current.Rendering.Parameters.Where(x => x.Key == "LatestDatasource2").FirstOrDefault().Value;
var elements2 = Sitecore.Context.Database.GetItem(LatestDatasource2);
   <!-- var items =  elements1.Children; -->
    var items2 = elements2.GetChildren().OrderByDescending(x => x[Sitecore.FieldIDs.Updated]).ToList();;
	
	 var LatestDatasource3 = Sitecore.Mvc.Presentation.RenderingContext.Current.Rendering.Parameters.Where(x => x.Key == "LatestDatasource3").FirstOrDefault().Value;
var elements3 = Sitecore.Context.Database.GetItem(LatestDatasource3);
   <!-- var items =  elements1.Children; -->
    var items3 = elements3.GetChildren().OrderByDescending(x => x[Sitecore.FieldIDs.Updated]).ToList();;
	
	 var LatestDatasource4 = Sitecore.Mvc.Presentation.RenderingContext.Current.Rendering.Parameters.Where(x => x.Key == "LatestDatasource4").FirstOrDefault().Value;
var elements4 = Sitecore.Context.Database.GetItem(LatestDatasource4);
   <!-- var items =  elements1.Children; -->
    var items4 = elements4.GetChildren().OrderByDescending(x => x[Sitecore.FieldIDs.Updated]).ToList();;
	
	
}



<h2 class="mb-3 border-l pl-3 txt-lg">Investor Community</h2>
				<div class="row no-gutters">
					<div class="col-md-6 p-4 bg-white">
					
<ul  class="ul-inv-community">
@foreach (var docs in items.ToList()) 
 { 
 var theURL = Sitecore.Resources.Media.MediaManager.GetMediaUrl(docs); 
	var url = Sitecore.Resources.Media.HashingUtils.ProtectAssetUrl(theURL); 
     <li class="mb-3"><a href="@url" target="_blank" >Annual Report</a></li> 
	 break;
    }  
 </ul> 


<ul  class="ul-inv-community">
@foreach (var docs in items2.ToList())
{
	var theURL = Sitecore.Resources.Media.MediaManager.GetMediaUrl(docs);
	var url = Sitecore.Resources.Media.HashingUtils.ProtectAssetUrl(theURL);
    <li class="mb-3"><a href="@url" target="_blank" >Investor Presentation</a></li>
	break;
   } 
</ul>

<ul class="ul-inv-community">
@foreach (var docs in items3.ToList())
{
	var theURL = Sitecore.Resources.Media.MediaManager.GetMediaUrl(docs);
	var url = Sitecore.Resources.Media.HashingUtils.ProtectAssetUrl(theURL);
    <li class="mb-3"><a href="@url" target="_blank" >Results Presentation</a></li>
	break;
   } 
</ul>

<ul class="ul-inv-community">
@foreach (var docs in items4.ToList())
{
	var theURL = Sitecore.Resources.Media.MediaManager.GetMediaUrl(docs);
	var url = Sitecore.Resources.Media.HashingUtils.ProtectAssetUrl(theURL);
    <li class="mb-3"><a href="@url" target="_blank" >Results Press Release</a></li>
	break;
   } 
</ul>


	<p class="mt-4 d-none"><span class="mr-2 btn btn-gray">NSE</span><span class="mr-2 btn btn-gray">BSE</span></p>
					</div>
					<div class="col-md-6">
						<img src="-/media/A6E3C1B03B7448299187007DFB89B3F7" class="h-100 img-fluid w-100" />
					</div>
				</div>