@using Sitecore.Mvc
@using Sitecore.Mvc.Presentation
@using Sitecore.Resources.Media
@using Sitecore.Foundation.SitecoreExtensions.Extensions
@using System.Globalization;
@model RenderingModel
@{
// var datasource = Sitecore.Mvc.Presentation.RenderingContext.Current.Rendering.DataSource;
  //  var parent = Sitecore.Context.Database.GetItem(datasource);
 //   var i = 0;
  //  List<string> regType = new List<string>();
//	 List<string> formatedregType = new List<string>();
	//var sortedparent = parent.Children;
  //  var j = 0;
   // var flag = 0;
}


<section class="py-5 bg-gray">
    <div class="container">
        <div class="row">
            <div class="col-md-3 ml-auto">
                <div class="form-group">

                    <select class="form-control btn-gradient" id="btn-mrelease">
						 <option value="all">All</option>
						  <option value="Transport-and-Logistics">Transport and Logistics</option>
						    <option value="Power-and-Utilities">Power and Utilities</option>
							      <option value="Incubation">Incubation</option>
						        <option value="Others">Others</option>
                               
                                   
                                    
                      @*  @foreach (var child in sortedparent.ToList())
                        {
                            var childitems = Sitecore.Context.Database.GetItem(Sitecore.Data.ID.Parse(child.ID));
                            var newsType = child.Fields["Type"].Value;
							var formatedType=newsType.Replace(" ","-");
                          //  var formatedcompletedate = DateTime.ParseExact(completedate, "yyyyMMdd'T'HHmmss'Z'", CultureInfo.InvariantCulture);
                          //  var year = formatedcompletedate.ToString("yyyy");
						
                            if (i == 0)
                            {
                                regType.Add(newsType);
								formatedregType.Add(formatedType);

                                <option value="@formatedType">@newsType</option>
                            }
                            else
                            {
                                foreach (var appendType in regType)
                                {

                                    if (appendType == newsType)
                                    {
                                        flag++;
                                        break;
                                    }
                                }
                                if (flag == 0)
                                {
                                    regType.Add(newsType);
								formatedregType.Add(formatedType);
                                     <option value="@formatedType">@newsType</option>
                                }
                                else
                                {
                                    flag = 0;
                                }
                            }
                            i++;
                        }*@
                    </select>
                </div>
            </div>
        </div>
        </div>
		</section>