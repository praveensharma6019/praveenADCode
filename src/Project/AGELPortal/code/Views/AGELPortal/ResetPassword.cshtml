@using Sitecore.Mvc.Configuration;
@using Sitecore.Foundation.Dictionary.Extensions
@using Sitecore.Mvc
@using Sitecore.Foundation.SitecoreExtensions.Extensions

@model Sitecore.AGELPortal.Website.Models.PortalRegistrationModel

@{
    Layout = null;
    var password = Model?.password;
    var confirmPassword = Model?.confirm_password;
}
<div class="container">
    <div class="card outlined mid-form border-none-mobile">
        <header class="section-header header-login">
            <img src="/images/AGELPortal/logo.svg" alt="form-logo">
            <h1 class="header-login-h1">Reset Password</h1>
        </header>
        <div class="card-with-form login-wrap">
            @using (Html.BeginRouteForm(MvcSettings.SitecoreRouteName, FormMethod.Post))
            {
                <div class="input-field custom">
                    <input value="@password" name="password" id="new_password" type="password" class="validate passcode" pattern="(?=.*\d)(?=.*[a-z])(?=.*[A-Z]).{8,}" title="Must contain at least one number and one uppercase and lowercase letter, and at least 8 or more characters" required />
                    <label class="active" for="first_name2">Enter New Password</label>
                </div>
                <div class="input-field custom">
                    <input value="@confirmPassword" name="confirm_password" id="confirm_password" type="password" class="validate confirmPasscode">
                    <label class="active" for="first_name2">Re-type New Password</label>
                </div>
                @*<div id="message">
                <h6>Password must contain the following:</h6>
                <p id="letter" class="invalid"> <b>Atleast 8  characters</b> </p>
                <p id="capital" class="invalid"><b>  Upper & lower Letters</b></p>
                <p id="number" class="invalid"><b>Atleast 1 number one special character</b></p>
                <p id="length" class="invalid"></p>
                <p id="special" class="invalid"></p>
            </div>*@
                <div class="reset-password" id="message">
                    <h6 style="margin-bottom:10px;">Password must contain the following:</h6>
                    <div class="card">

                        <ul>
                            <li id="letter" class="invalid">
                                <i>

                                    <img id="letter-image" src="~/images/AGELPortal/cross.png" alt="check-mark">
                                </i>
                                Atleast 8  characters
                            </li>
                            <li id="capital" class="invalid">
                                <i>

                                    <img id="capital-image" src="~/images/AGELPortal/cross.png" alt="check-mark">
                                </i>
                                Upper & lower Letters
                            </li>
                            <li id="number" class="invalid">
                                <i>

                                    <img id="number-image" src="~/images/AGELPortal/cross.png" alt="check-mark">
                                </i>
                                Atleast 1 number one special character
                            </li>
                            <li id="length" class="invalid"></li>
                            <li id="special" class="invalid"></li>
                        </ul>
                    </div>
                </div>
                <include component="ResetPassword/Red"></include>
                <div class="h-right btn-group2" style="margin-top:25px;">
                    @Html.ValidationMessageFor(model => model.UserValidation, "", new { @class = "field-validation-error help-block text-danger erruservalidation" }, "p")
                    <button type="submit" class="waves-effect btn full-btn btnverifynumber" id="ResetPassword" disabled>Create Password</button>
                    <a href="/AGELPortal/Home" class="waves-effect btn-flat">Cancel</a>
                </div>
            }
        </div>
        <div class="bordered-items login-bordered-items">
            <ul>
                <li>Need some help? Call <span class="ff-rb">19122</span></li>
            </ul>
        </div>
    </div>
    </div>

    <script>
        var myInput = document.getElementById("password");
        var letter = document.getElementById("letter");
        var capital = document.getElementById("capital");
        var number = document.getElementById("number");
        var length = document.getElementById("length");


        // When the user clicks on the password field, show the message box
        myInput.onfocus = function () {
            document.getElementById("message").style.display = "block";
        }

        // When the user clicks outside of the password field, hide the message box
        myInput.onblur = function () {
            document.getElementById("message").style.display = "none";
        }

        // When the user starts to type something inside the password field
        myInput.onkeyup = function () {
            // Validate lowercase letters
            var lowerCaseLetters = /[a-z]/g;
            if (myInput.value.match(lowerCaseLetters)) {
                letter.classList.remove("invalid");
                letter.classList.add("valid");
            }
            else {
                letter.classList.remove("valid");
                letter.classList.add("invalid");
            }

            // Validate capital letters
            var upperCaseLetters = /[A-Z]/g;
            if (myInput.value.match(upperCaseLetters)) {
                capital.classList.remove("invalid");
                capital.classList.add("valid");
            }
            else {
                capital.classList.remove("valid");
                capital.classList.add("invalid");
            }

            // Validate numbers
            var numbers = /[0-9]/g;
            if (myInput.value.match(numbers)) {
                number.classList.remove("invalid");
                number.classList.add("valid");
            }
            else {
                number.classList.remove("valid");
                number.classList.add("invalid");
            }

            // Validate length
            if (myInput.value.length >= 8) {
                length.classList.remove("invalid");
                length.classList.add("valid");
                document.getElementById("letter").src = "/images/AGELPortal/check.webp";
            }
            else {
                length.classList.remove("valid");
                length.classList.add("invalid");
                document.getElementById("letter").src = "/images/AGELPortal/cross.png";
            }
        }
    </script>
    <script type="text/javascript">
        $(function () {
            $("#ResetPassword").click(function () {
                var password = $("#password").val();
                var confirmPassword = $("#confirm_password").val();
                if (password != confirmPassword) {
                    alert("Passwords do not match.");
                    return false;
                }
                return true;
            });
        });
    </script>



