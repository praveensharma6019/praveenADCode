
@using Sitecore
@using Sitecore.Foundation.SitecoreExtensions.Extensions
@using Sitecore.Data.Fields
@using Sitecore.Data.Items
@using Sitecore.Foundation.Assets
@using Sitecore.Foundation.Assets.Models
@using Sitecore.Foundation.Assets.Services
@using Sitecore.ExperienceForms.Mvc.Html
@using Sitecore.Foundation.Dictionary.Extensions
@using Sitecore.Mvc
@using Sitecore.AdaniGreenTalks.Website;
@model Sitecore.Mvc.Presentation.RenderingModel
@{
    var datasource = Sitecore.Mvc.Presentation.RenderingContext.Current.Rendering.DataSource;
    Item model = Sitecore.Context.Database.GetItem(datasource);
    string imgurl = "#";
    string altText = "";
    int count = 1;
    string linkvalueurl = "";

}

@if (model != null)
{
    if (model.HasChildren)
    {



        <div class="green-featured-section">
            <div class="container">
                <div class="top">
                    <h2>@Html.Sitecore().Field(Constant.Text, model)</h2>
                </div>
                <div class="wrap">
                    @foreach (Item item in model.GetChildren())
                    {
                        if (item.TemplateName == "Image")
                        {
                            Sitecore.Data.Fields.ImageField imgField = ((Sitecore.Data.Fields.ImageField)item.Fields[Constant.MediaThumbnail]);
                            if (imgField != null && imgField.MediaItem != null)
                            {
                                imgurl = Sitecore.Resources.Media.MediaManager.GetMediaUrl(imgField.MediaItem);
                                altText = imgField.Alt;
                            }



                            <div class="item">
                                <div class="img">
                                    <img src="@imgurl"
                                         alt="@altText" />
                                </div>
                                <div class="desc">
                                    <h3> @Html.Sitecore().Field(Constant.MediaTitle, item)</h3>
                                    <p>
                                        @Html.Sitecore().Field(Constant.MediaDescription, item)
                                    </p>
                                </div>
                            </div>
                        }


                    }
                </div>
                @if (model.GetChildren().Count > 4)
                {
                    foreach (Item item in model.GetChildren())
                    {
                        if (item.TemplateName == Constant.Link)
                        {
                            Sitecore.Data.Fields.LinkField linkvalue = item.Fields[Constant.LinkUrl];
                            if (linkvalue != null)
                            {
                                linkvalueurl = linkvalue.GetFriendlyUrl();
                            }

                            if (linkvalueurl != "")
                            {
                                if (linkvalue.LinkType == "internal")
                                {
                                    <div class="green-button-section">
                                        <a href="@linkvalueurl" class="btn">@Html.Sitecore().Field(Constant.Title, item)</a>
                                    </div>
                                }
                                if (linkvalue.LinkType == "external")

                                {

                                    <div class="green-button-section" target="_blank">
                                        <a href="@linkvalueurl" class="btn">@Html.Sitecore().Field(Constant.Title, item)</a>
                                    </div>
                                }
                            }
                            else
                            {

                                <div class="green-button-section">
                                    <a href="javascript:void(0)" class="btn">@Html.Sitecore().Field(Constant.Title, item)</a>
                                </div>
                            }
                        }
                    }
                }

            </div>
        </div>

    }

}