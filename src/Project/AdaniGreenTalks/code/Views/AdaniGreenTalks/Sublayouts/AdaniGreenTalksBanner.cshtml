@using Sitecore
@using Sitecore.Foundation.SitecoreExtensions.Extensions
@using Sitecore.Data.Fields
@using Sitecore.Data.Items
@using Sitecore.Foundation.Assets
@using Sitecore.Foundation.Assets.Models
@using Sitecore.Foundation.Assets.Services
@using Sitecore.ExperienceForms.Mvc.Html
@using Sitecore.Foundation.Dictionary.Extensions
@using Sitecore.AdaniGreenTalks.Website;
@using Sitecore.Mvc
@using Sitecore.Resources.Media
@model Sitecore.Mvc.Presentation.RenderingModel
@{
    var datasource = Sitecore.Mvc.Presentation.RenderingContext.Current.Rendering.DataSource;
    Item model = Sitecore.Foundation.SitecoreExtensions.Extensions.ItemExtensions.getItem(datasource);
    string sourceurl = "#";

}

@if (model != null)
{
    Sitecore.Data.Fields.LinkField linkField = model.Fields["MediaVideoLink"];
    MediaItem video = linkField.TargetItem;
    if (video != null)
    {
        sourceurl = MediaManager.GetMediaUrl(video);
    }

    <div class="about">
        <div class="green-contact-section height">
            <div class="contact-skewed">
                <div class="container">
                    @Html.Sitecore().Placeholder("breadcrumb")
                    <div class="about-hero">
                        <div class="hero-intro">
                            <div class="heading">
                                <h2>@Html.Sitecore().Field(Constant.Title, model)</h2>
                            </div>
                            @Html.Sitecore().Field(Constant.Description, model)
                        </div>
                        <div class="hero-right-img">
                            <video autoplay="" muted="" loop="" id="myVideo" width="300" playsInline>
                                <source src="@sourceurl" type="@video.MimeType">
                            </video>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>


}
