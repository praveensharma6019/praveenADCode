@using Sitecore.Foundation.Dictionary.Extensions
@using Sitecore.Foundation.SitecoreExtensions.Extensions
@using Sitecore.Mvc.Configuration
@using Sitecore.Electricity.Website.Model;
@model Sitecore.Electricity.Website.Model.ITSRBidderProcessFormModel
@{
    var itemListing = Sitecore.Context.Database.GetItem(Templates.ITSR.ITSRBidderFormListing);
    var item = Sitecore.Context.Database.GetItem(Templates.Tender.AdminTenderListing);
}
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
<script src="https://ajax.aspnetcdn.com/ajax/jquery.validate/1.9/jquery.validate.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/3.2.10/jquery.validate.unobtrusive.min.js"></script>

<div class="pageContent">
    <div class="container">

        <!-- Section -->
        <div class="pb-3">
            <div>
                <div class="mr-auto ml-auto">
                    <div class="card card-outline-secondary">
                        @*<div class="card-header">
                                <h3 class="mb-0">@Html.Sitecore().Dictionary("Electricity/Tender/Create form Label", "Create Form")</h3>
                            </div>*@
                        <div class="card-body">
                            @if (Model.IsExists)
                            {
                                <h3 class="txt-orange">Bidder details</h3>
                                <div class="row">
                                    <div class="col-sm-6">
                                        <div class="row form-group pt-md-2">
                                            <label class="col-sm-5 col-md-5 col-form-label">
                                                @Html.Label("Company Name", htmlAttributes: new { @class = "control-label" })
                                            </label>
                                            <div class="col-sm-7 col-md-7">
                                                @Html.TextBoxFor(model => model.CompanyName, new { @class = "form-control", required = "required", @readonly = "readonly" })
                                                @Html.ValidationMessageFor(model => model.CompanyName, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-6">
                                        <div class="row form-group pt-md-2">
                                            <label class="col-sm-5 col-md-5 col-form-label">
                                                @Html.Label("Location", htmlAttributes: new { @class = "control-label" })
                                            </label>
                                            <div class="col-sm-7 col-md-7">
                                                @Html.TextBoxFor(model => model.Location, new { @class = "form-control", required = "required", @readonly = "readonly" })
                                                @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-sm-6">
                                        <div class="row form-group pt-md-2">
                                            <label class="col-sm-5 col-md-5 col-form-label">
                                                @Html.Label("SPOC Person Name", htmlAttributes: new { @class = "control-label" })
                                            </label>
                                            <div class="col-sm-7 col-md-7">
                                                @Html.TextBoxFor(model => model.SPOCPersonName, new { @class = "form-control", required = "required", @readonly = "readonly" })
                                                @Html.ValidationMessageFor(model => model.SPOCPersonName, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-6">
                                        <div class="row form-group pt-md-2">
                                            <label class="col-sm-5 col-md-5 col-form-label">
                                                @Html.Label("Email Address", htmlAttributes: new { @class = "control-label" })
                                            </label>
                                            <div class="col-sm-7 col-md-7">
                                                @Html.TextBoxFor(model => model.EmailId, new { @class = "form-control", required = "required", @readonly = "readonly" })
                                                @Html.ValidationMessageFor(model => model.EmailId, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-sm-6">
                                        <div class="row form-group pt-md-2">
                                            <label class="col-sm-5 col-md-5 col-form-label">
                                                @Html.Label("Mobile Number", htmlAttributes: new { @class = "control-label" })
                                            </label>
                                            <div class="col-sm-7 col-md-7">
                                                @Html.TextBoxFor(model => model.MobileNumber, new { @class = "form-control", required = "required", @readonly = "readonly" })
                                                @Html.ValidationMessageFor(model => model.MobileNumber, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <h3 class="txt-orange">Form details</h3>
                                <div class="row">
                                    <div class="col-sm-6">
                                        <div class="row form-group pt-md-2">
                                            <label class="col-sm-5 col-md-5 col-form-label">
                                                @Html.Label("Title", htmlAttributes: new { @class = "control-label" })
                                            </label>
                                            <div class="col-sm-7 col-md-7">
                                                @Html.TextAreaFor(model => model.Title, new { @class = "form-control", required = "required", @readonly = "readonly" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-6">
                                        <div class="row form-group pt-md-2">
                                            <label class="col-sm-5 col-md-5 col-form-label">
                                                @Html.Label("TenderNo", htmlAttributes: new { @class = "control-label" })
                                            </label>
                                            <div class="col-sm-7 col-md-7">
                                                @Html.TextBoxFor(model => model.TenderNo, new { @class = "form-control", required = "required", @readonly = "readonly" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-sm-6">
                                        <div class="row form-group pt-md-2">
                                            <label class="col-sm-5 col-md-5 col-form-label">
                                                @Html.Label("ProposalOwnerName", htmlAttributes: new { @class = "control-label" })
                                            </label>
                                            <div class="col-sm-7 col-md-7">
                                                @Html.TextBoxFor(model => model.ProposalOwnerName, new { @class = "form-control", required = "required", @readonly = "readonly" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-6">
                                        <div class="row form-group pt-md-2">
                                            <label class="col-sm-5 col-md-5 col-form-label">
                                                @Html.Label("ProposalOwnerEmailId", htmlAttributes: new { @class = "control-label" })
                                            </label>
                                            <div class="col-sm-7 col-md-7">
                                                @Html.TextBoxFor(model => model.ProposalOwnerEmailId, new { @class = "form-control", required = "required", @readonly = "readonly" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-sm-6">
                                        <div class="row form-group pt-md-2">
                                            <label class="col-sm-5 col-md-5 col-form-label">
                                                @Html.Label("BuyerOwnerEmailId", htmlAttributes: new { @class = "control-label" })
                                            </label>
                                            <div class="col-sm-7 col-md-7">
                                                @Html.TextBoxFor(model => model.BuyerOwnerEmailId, new { @class = "form-control", required = "required", @readonly = "readonly" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-6">
                                        <div class="row form-group pt-md-2">
                                            <label class="col-sm-5 col-md-5 col-form-label">
                                                @Html.Label("BuyerOwnerName", htmlAttributes: new { @class = "control-label" })
                                            </label>
                                            <div class="col-sm-7 col-md-7">
                                                @Html.TextBoxFor(model => model.BuyerOwnerName, new { @class = "form-control", required = "required", @readonly = "readonly" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <h3 class="txt-orange">Submitted details</h3>
                                <div class="panel bid_form">
                                    <p class="text-note mb-3">Note: Fields marked with (<span class="required"> * </span>) are Mandatary question.</p>
                                    <div class="row">
                                        <div class="col-md-12">
                                            <h5 class="mb-3"><span class="h5-number">1.</span>@Html.Sitecore().Dictionary("/ITSR/Questions/Question1Text", "Bidder shall read Bid Qualifying Requirement (QR) document carefully and do upload the relevant supporting documents.")</h5>
                                            <div class="row pl-5">
                                                <div class="col-lg-4 col-md-6">
                                                    <div class="form-group">
                                                        <label>@Html.Sitecore().Dictionary("/ITSR/Questions/Question1Option1", "Past experience list") <span class="required">*</span></label>
                                                        @{
                                                            if (Model.UploadedDocuments != null)
                                                            {

                                                                var PastExperienceList = Model.UploadedDocuments.Where(d => d.DocumenttypeCode == "PastExperience").ToList();

                                                                if (PastExperienceList != null && PastExperienceList.Count > 0)
                                                                {
                                                                    foreach (var doc in PastExperienceList)
                                                                    {
                                                                        var pastExpDoc = PastExperienceList.Where(d => d.Id == doc.Id).FirstOrDefault();
                                                                        <p>
                                                                            <a class="txt-orange" href="@Url.Action("DownloadBidderFile", new { id = pastExpDoc.Id })">
                                                                                <i class="fa fa-download mr-2"></i> @pastExpDoc.DocumentName
                                                                            </a>
                                                                        </p>
                                                                    }
                                                                }
                                                                else
                                                                {
                                                                    <span>Not Uploaded</span>
                                                                }
                                                            }
                                                            else
                                                            {
                                                                <span>Not Uploaded</span>
                                                            }
                                                        }
                                                    </div>
                                                </div>
                                                <div class="col-lg-4 col-md-6">
                                                    <div class="form-group">
                                                        <label>@Html.Sitecore().Dictionary("/ITSR/Questions/Question1Option2", "Performance Certificate") </label>
                                                        @{
                                                            if (Model.UploadedDocuments != null)
                                                            {
                                                                var PerformanceCertificateUploaded = Model.UploadedDocuments.Where(d => d.DocumenttypeCode == "PerformanceCertificate").ToList();

                                                                if (PerformanceCertificateUploaded != null && PerformanceCertificateUploaded.Count > 0)
                                                                {
                                                                    foreach (var doc in PerformanceCertificateUploaded)
                                                                    {
                                                                        var pastExpDoc = PerformanceCertificateUploaded.Where(d => d.Id == doc.Id).FirstOrDefault();
                                                                        <p>
                                                                            <a class="txt-orange" href="@Url.Action("DownloadBidderFile", new { id = pastExpDoc.Id })">
                                                                                <i class="fa fa-download mr-2"></i> @pastExpDoc.DocumentName
                                                                            </a>
                                                                        </p>
                                                                    }
                                                                }
                                                                else
                                                                {
                                                                    <span>Not Uploaded</span>
                                                                }

                                                            }
                                                            else
                                                            {
                                                                <span>Not Uploaded</span>
                                                            }
                                                        }

                                                    </div>
                                                </div>
                                                <div class="col-lg-4 col-md-6">
                                                    <div class="form-group">
                                                        <label>Past Orders</label>
                                                        @{
                                                            if (Model.UploadedDocuments != null)
                                                            {
                                                                var PastOrder = Model.UploadedDocuments.Where(d => d.DocumenttypeCode == "PastOrder").ToList();

                                                                if (PastOrder != null && PastOrder.Count > 0)
                                                                {
                                                                    foreach (var doc in PastOrder)
                                                                    {
                                                                        var PastOrderDoc = PastOrder.Where(d => d.Id == doc.Id).FirstOrDefault();
                                                                        <p>
                                                                            <a class="txt-orange" href="@Url.Action("DownloadBidderFile", new { id = PastOrderDoc.Id })">
                                                                                <i class="fa fa-download mr-2"></i> @PastOrderDoc.DocumentName
                                                                            </a>
                                                                        </p>
                                                                    }
                                                                }
                                                                else
                                                                {
                                                                    <span>Not Uploaded</span>
                                                                }
                                                            }
                                                            else
                                                            {
                                                                <span>Not Uploaded</span>
                                                            }
                                                        }
                                                    </div>
                                                </div>
                                                <div class="col-lg-12">
                                                    <div class="form-group">
                                                        <p>Deviation if any, against clauses specified in Qualifying requirement (QR) </p>
                                                        <div class="form-check form-check-inline">
                                                            @Html.RadioButtonFor(model => model.Deviation, "No", new { id = "DeviationNo", @class = "form-check-input", required = "required", @checked = "checked", @disabled = "disabled" })
                                                            <label class="form-check-label" for="DeviationNo">No</label>
                                                        </div>
                                                        <div class="form-check form-check-inline">
                                                            @Html.RadioButtonFor(model => model.Deviation, "Yes", new { id = "DeviationYes", @class = "form-check-input", required = "required", @disabled = "disabled" })
                                                            <label class="form-check-label" for="DeviationYes">Yes</label>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="row">

                                                <div class="col-lg-12"><hr></div>
                                                <div class="col-lg-12">
                                                    <div class="form-group">
                                                        <h5 class="mb-3"><span class="h5-number">2.</span>Acceptance of Bill of Quantity (BoQ), Scope of Work and Specifications (Bidder shall read all bid documents carefully</h5>
                                                        <div class="pl-5">
                                                            <div class="form-check form-check-inline">
                                                                @Html.RadioButtonFor(model => model.AcceptanceOfBillOfQuantity, "Accepted ", new { id = "AcceptanceOfBillAccepted", @class = "form-check-input", @checked = "checked", required = "required", @disabled = "disabled" })
                                                                <label class="form-check-label" for="DeviationYes">Accepted</label>
                                                            </div>
                                                            <div class="form-check form-check-inline">
                                                                @Html.RadioButtonFor(model => model.AcceptanceOfBillOfQuantity, "Deviation ", new { id = "AcceptanceOfBillDeviation", @class = "form-check-input", required = "required", @disabled = "disabled" })
                                                                <label class="form-check-label" for="DeviationNo">Deviation</label>
                                                            </div>
                                                        </div>

                                                    </div>
                                                </div>
                                                <div class="col-lg-12"><hr></div>
                                                <div class="col-lg-12">
                                                    <div class="form-group">
                                                        <h5 class="mb-3"><span class="h5-number">3.</span>Kindly fill the GTP (Guarantee Technical Particulars) in prescribed format, please do refer bid documents to get the GTP format <span class="required">*</span></h5>
                                                        <div class=" pl-5">
                                                            @{
                                                                if (Model.UploadedDocuments != null)
                                                                {
                                                                    var GuaranteeTechnicalParticulars = Model.UploadedDocuments.Where(d => d.DocumenttypeCode == "GuaranteeTechnicalParticulars").ToList();

                                                                    if (GuaranteeTechnicalParticulars != null && GuaranteeTechnicalParticulars.Count > 0)
                                                                    {
                                                                        foreach (var doc in GuaranteeTechnicalParticulars)
                                                                        {
                                                                            var PastOrderDoc = GuaranteeTechnicalParticulars.Where(d => d.Id == doc.Id).FirstOrDefault();
                                                                            <p>
                                                                                <a class="txt-orange" href="@Url.Action("DownloadBidderFile", new { id = PastOrderDoc.Id })">
                                                                                    <i class="fa fa-download mr-2"></i> @PastOrderDoc.DocumentName
                                                                                </a>
                                                                            </p>
                                                                        }
                                                                    }
                                                                    else
                                                                    {
                                                                        <span>Not Uploaded</span>
                                                                    }
                                                                }
                                                                else
                                                                {
                                                                    <span>Not Uploaded</span>
                                                                }
                                                            }
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-lg-12"><hr></div>
                                                <div class="col-lg-12">
                                                    <div class="form-group">
                                                        <h5 class="mb-3"><span class="h5-number">4.</span>Attach complete GA (General Arrangement) / SLD (Single Line Diagram) <span class="required">*</span></h5>
                                                        <div class=" pl-5">
                                                            @{
                                                                if (Model.UploadedDocuments != null)
                                                                {
                                                                    var GeneralArrangement = Model.UploadedDocuments.Where(d => d.DocumenttypeCode == "GeneralArrangement").ToList();

                                                                    if (GeneralArrangement != null && GeneralArrangement.Count > 0)
                                                                    {
                                                                        foreach (var doc in GeneralArrangement)
                                                                        {
                                                                            var PastOrderDoc = GeneralArrangement.Where(d => d.Id == doc.Id).FirstOrDefault();
                                                                            <p>
                                                                                <a class="txt-orange" href="@Url.Action("DownloadBidderFile", new { id = PastOrderDoc.Id })">
                                                                                    <i class="fa fa-download mr-2"></i> @PastOrderDoc.DocumentName
                                                                                </a>
                                                                            </p>
                                                                        }
                                                                    }
                                                                    else
                                                                    {
                                                                        <span>Not Uploaded</span>
                                                                    }
                                                                }
                                                                else
                                                                {
                                                                    <span>Not Uploaded</span>
                                                                }
                                                            }
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-lg-12"><hr></div>
                                                <div class="col-lg-12">
                                                    <div class="form-group">
                                                        <h5 class="mb-3"><span class="h5-number">5.</span>Attach Type Test Certificate</h5>
                                                        <div class=" pl-5">
                                                            @{
                                                                if (Model.UploadedDocuments != null)
                                                                {
                                                                    var TestCertificate = Model.UploadedDocuments.Where(d => d.DocumenttypeCode == "TestCertificate").ToList();
                                                                    if (TestCertificate != null && TestCertificate.Count > 0)
                                                                    {
                                                                        foreach (var doc in TestCertificate)
                                                                        {
                                                                            var PastOrderDoc = TestCertificate.Where(d => d.Id == doc.Id).FirstOrDefault();
                                                                            <p>
                                                                                <a class="txt-orange" href="@Url.Action("DownloadBidderFile", new { id = PastOrderDoc.Id })">
                                                                                    <i class="fa fa-download mr-2"></i> @PastOrderDoc.DocumentName
                                                                                </a>
                                                                            </p>
                                                                        }
                                                                    }
                                                                    else
                                                                    {
                                                                        <span>Not Uploaded</span>
                                                                    }
                                                                }
                                                                else
                                                                {
                                                                    <span>Not Uploaded</span>
                                                                }
                                                            }
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-lg-12"><hr></div>
                                                <div class="col-lg-12">
                                                    <div class="form-group">
                                                        <h5 class="mb-3"><span class="h5-number">6.</span>Delivery schedule after PO/WO placement (Please do mention in terms of weeks) <span class="required">*</span></h5>
                                                        <div class=" pl-5">
                                                            @Html.TextAreaFor(x => x.Deliveryschedule, new { @class = "form-control reset-control", @autocomplete = "off", required = "required", @readonly = "readonly" })
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-lg-12"><hr></div>
                                                <div class="col-lg-12">
                                                    <div class="form-group">
                                                        <h5 class="mb-3"><span class="h5-number">7.</span>It is advised to carry out the site visit by the bidder for scope clarity, understanding the site constraints, adequacy of BOQ for executing the complete scope etc. <span class="required">*</span></h5>
                                                        <div class="pl-5">
                                                            <div class="form-check form-check-inline">
                                                                @Html.RadioButtonFor(model => model.SiteVisitDone, "Yes", new { id = "SiteVisitDoneYes", @class = "form-check-input", @checked = "checked", required = "required", @disabled = "disabled" })
                                                                <label class="form-check-label" for="SiteVisitDoneYes">Site Visit done</label>
                                                            </div>
                                                            <div class="form-check form-check-inline">
                                                                @Html.RadioButtonFor(model => model.SiteVisitDone, "No", new { id = "SiteVisitDoneNo", @class = "form-check-input", required = "required", @disabled = "disabled" })
                                                                <label class="form-check-label" for="SiteVisitDoneNo">Site Visit not required</label>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-lg-12"><hr></div>
                                                <div class="col-lg-12">
                                                    <div class="form-group">
                                                        <h5 class="mb-3"><span class="h5-number">8.</span>Demonstration of Product at buyer’s location <span class="required">*</span></h5>
                                                        <div class="pl-5">
                                                            <div class="form-check form-check-inline">
                                                                @Html.RadioButtonFor(model => model.DemonstrationOfProduct, "Yes", new { id = "DemonstrationOfProductYes", @class = "form-check-input", @checked = "checked", required = "required", @disabled = "disabled" })
                                                                <label class="form-check-label" for="DemonstrationOfProductYes">Yes</label>
                                                            </div>
                                                            <div class="form-check form-check-inline">
                                                                @Html.RadioButtonFor(model => model.DemonstrationOfProduct, "No", new { id = "DemonstrationOfProductNo", @class = "form-check-input", required = "required", @disabled = "disabled" })
                                                                <label class="form-check-label" for="DemonstrationOfProductNo">No</label>
                                                            </div>
                                                            <div class="form-check form-check-inline">
                                                                @Html.RadioButtonFor(model => model.DemonstrationOfProduct, "Virtual", new { id = "DemonstrationOfProductVirtual", @class = "form-check-input", required = "required", @disabled = "disabled" })
                                                                <label class="form-check-label" for="DemonstrationOfProductVirtual">Virtual</label>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-lg-12"><hr></div>
                                                <div class="col-lg-12">
                                                    <div class="form-group">
                                                        <h5 class="mb-3"><span class="h5-number">9.</span>Other documents specified in Technical Specification if any.</h5>
                                                        <div class=" pl-5">
                                                            @{
                                                                if (Model.UploadedDocuments != null)
                                                                {
                                                                    var OtherdocumentSpecified = Model.UploadedDocuments.Where(d => d.DocumenttypeCode == "OtherdocumentSpecified").ToList();
                                                                    if (OtherdocumentSpecified.Count > 0)
                                                                    {
                                                                        foreach (var doc in OtherdocumentSpecified)
                                                                        {
                                                                            var OtherdocumentSpecifiedDoc = OtherdocumentSpecified.Where(d => d.Id == doc.Id).FirstOrDefault();
                                                                            <p>
                                                                                <a class="txt-orange" href="@Url.Action("DownloadBidderFile", new { id = OtherdocumentSpecifiedDoc.Id })">
                                                                                    <i class="fa fa-download mr-2"></i> @OtherdocumentSpecifiedDoc.DocumentName
                                                                                </a>
                                                                            </p>
                                                                        }
                                                                    }
                                                                    else
                                                                    {
                                                                        <span>Not Uploaded</span>
                                                                    }
                                                                }
                                                                else
                                                                {
                                                                    <span>Not Uploaded</span>
                                                                }
                                                            }
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-lg-12"><hr></div>
                                                <div class="col-lg-12">
                                                    <div class="form-group">
                                                        <h5 class="mb-3"><span class="h5-number">10.</span>Consolidated Deviation Sheet in prescribed format given in Tender.</h5>
                                                        <div class=" pl-5">
                                                            @{
                                                                if (Model.UploadedDocuments != null)
                                                                {
                                                                    var ConsolidatedDeviationSheet = Model.UploadedDocuments.Where(d => d.DocumenttypeCode == "ConsolidatedDeviationSheet").ToList();
                                                                    if (ConsolidatedDeviationSheet != null && ConsolidatedDeviationSheet.Count > 0)
                                                                    {
                                                                        foreach (var doc in ConsolidatedDeviationSheet)
                                                                        {
                                                                            var PastOrderDoc = ConsolidatedDeviationSheet.Where(d => d.Id == doc.Id).FirstOrDefault();
                                                                            <p>
                                                                                <a class="txt-orange" href="@Url.Action("DownloadBidderFile", new { id = PastOrderDoc.Id })">
                                                                                    <i class="fa fa-download mr-2"></i> @PastOrderDoc.DocumentName
                                                                                </a>
                                                                            </p>
                                                                        }
                                                                    }
                                                                    else
                                                                    {
                                                                        <span>Not Uploaded</span>
                                                                    }
                                                                }
                                                                else
                                                                {
                                                                    <span>Not Uploaded</span>
                                                                }
                                                            }
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>

                                    </div>
                                </div>
                            }
                            else
                            {
                                <p>The page you are trying to open does not exists or expired.</p>
                            }
                        </div>

                    </div>
                </div>

            </div>
        </div>
        <div class="card-footer txt-right">
            <a href="@itemListing.Url()" class="btn btn-link">@Html.Sitecore().Dictionary("Electricity/Tender/Back To form Text", "Back To form List")</a>
        </div>
    </div>
</div>