@using Sitecore.Foundation.Dictionary.Extensions
@using Sitecore.Foundation.SitecoreExtensions.Extensions
@using Sitecore.Mvc.Configuration
@using Sitecore.Electricity.Website.Model;
@model Sitecore.Electricity.Website.Model.ApplyFormModel
@{
    var item = Sitecore.Context.Database.GetItem(Templates.Tender.AdminTenderListing);
}

<div class="container full mx-auto" style="display:none">
    <div class="small-wrapper full">
        <p class="h2 full">Get EV Chargers</p>
        <div class="tabs-wrapper full" id="evChargers">
            <ul class="tabs-list grid-wrapper grid-layout-3">
                <li class="tab-item active grid" id="EV1Tab" onclick="tab(event, 'evChargersInd', 'evChargers')">Individual</li>
                <li class="tab-item grid" id="EV2Tab" onclick="tab(event, 'evChargersSoc', 'evChargers')">Society</li>
                <li class="tab-item grid" id="EV3Tab" onclick="tab(event, 'evChargersStr', 'evChargers')">Strategic Partnership</li>
            </ul>

            <div class="tab-content-wrapper" id="evChargersStr">
                <div class="tab-content">
                    <div class="full sign-in-wrapper">
                        <p class="full h3 dp-b">Let us help you establish a customized EV charging solution to meet your operational requirements, last-mile delivery, and employee mobility needs.</p>
                        <div class="sign-left">
                            <img src="/images/SwitchToGreen/strategic-partnership.jpg" alt="sign in" class="res-img" />
                        </div>
                        @using (Html.BeginRouteForm(MvcSettings.SitecoreRouteName, FormMethod.Post, new { id = "frmCreate3", @class = "form-signin" }))
                        {
                            @Html.AddUniqueFormId()
                            @Html.AntiForgeryToken()
                            @Html.ValidationSummary(true)
                            @Html.HiddenFor(m => m.FormType)
                        <ul class="full">
                            <li class="full dp-t">
                                <div class="full input-wrapper">
                                    @Html.TextBoxFor(model => model.FullName_EVP, new { @class = "input", placeholder = "Enter Full Name", required = "required", autocomplete = "off", @maxlength = "100" })

                                </div>
                                @Html.ValidationMessageFor(model => model.FullName_EVP, "", new { @class = "text-danger" })
                            </li>
                            <li class="full dp-t">
                                <div class="full input-wrapper">
                                    @Html.TextBoxFor(model => model.EmailId_EVP, new { @class = "input", placeholder = "Enter E-mail ID", required = "required", autocomplete = "off", @maxlength = "50" })

                                </div>
                                @Html.ValidationMessageFor(model => model.EmailId_EVP, "", new { @class = "text-danger" })
                            </li>
                            <li class="full dp-t">
                                <div class="full input-wrapper">
                                    @Html.TextBoxFor(model => model.MobileNumberEVP, new { @class = "input", placeholder = "Enter Mobile Number", required = "required", autocomplete = "off", @maxlength = "12" })
                                </div>
                                @Html.ValidationMessageFor(model => model.MobileNumberEVP, "", new { @class = "text-danger" })
                            </li>
                            <li class="full dp-t">
                                <div class="bg-white @Html.ValidationErrorFor(x => x.Captcha_EVPartner, "has-error")">
                                    <div class="row captcha_box pt-3">
                                        <label for="" class="">@Html.Sitecore().Dictionary("/Common/Captcha", "Captcha") <span class="required">*</span></label>
                                    </div>
                                    <div class="g-recaptcha" data-sitekey="6LdYFWgUAAAAALdZf_sC8BRN2uLPzcsxb2p192rf"></div>
                                    @Html.ValidationMessageFor(x => x.Captcha_EVPartner, "", new { @id = "captchaPError", @class = "help-block" }, "p")
                                </div>
                            </li>
                            <li class="full dp-t">
                                <input type="submit" value="Yes, I am Interested" id="applyForGreenPledge_partnership" name="applyForGreenPledge_partnership" class="btn-000 pill full fm-rb" />
                            </li>
                        </ul>
                        }
                    </div>
                </div>
            </div>
            <div class="tab-content-wrapper" id="evChargersSoc">
                <div class="tab-content">
                    <div class="full sign-in-wrapper">
                        <p class="full h3 dp-b">Want to deploy an EV Charging Point in your neighbourhood?</p>
                        <div class="sign-left">
                            <img src="/images/SwitchToGreen/society-charging-station.jpg" alt="sign in" class="res-img" />
                        </div>
                        @using (Html.BeginRouteForm(MvcSettings.SitecoreRouteName, FormMethod.Post, new { id = "frmCreate4", @class = "form-signin" }))
                        {
                            @Html.AddUniqueFormId()
                            @Html.AntiForgeryToken()
                            @Html.ValidationSummary(true)
                            @Html.HiddenFor(m => m.FormType)
                        <ul class="full">
                            <li class="full dp-t">
                                <div class="full input-wrapper">
                                    @Html.TextBoxFor(model => model.FullName_EVS, new { @class = "input", placeholder = "Enter Full Name", required = "required", autocomplete = "off", @maxlength = "100" })

                                </div>
                                @Html.ValidationMessageFor(model => model.FullName_EVS, "", new { @class = "text-danger" })
                            </li>
                            <li class="full dp-t">
                                <div class="full input-wrapper">
                                    @Html.TextBoxFor(model => model.EmailId_EVS, new { @class = "input", placeholder = "Enter E-mail ID", required = "required", autocomplete = "off", @maxlength = "50" })

                                </div>
                                @Html.ValidationMessageFor(model => model.EmailId_EVS, "", new { @class = "text-danger" })
                            </li>
                            <li class="full dp-t">
                                <div class="full input-wrapper">
                                    @Html.TextBoxFor(model => model.MobileNumber_EVS, new { @class = "input", placeholder = "Enter Mobile Number", required = "required", autocomplete = "off", @maxlength = "12" })

                                </div>
                                @Html.ValidationMessageFor(model => model.MobileNumber_EVS, "", new { @class = "text-danger" })
                            </li>
                            <li class="full dp-t">
                                <div class="bg-white @Html.ValidationErrorFor(x => x.Captcha_EVSo, "has-error")">
                                    <div class="row captcha_box pt-3">
                                        <label for="" class="">@Html.Sitecore().Dictionary("/Common/Captcha", "Captcha") <span class="required">*</span></label>
                                    </div>
                                    <div class="g-recaptcha" data-sitekey="6LdYFWgUAAAAALdZf_sC8BRN2uLPzcsxb2p192rf"></div>
                                    @Html.ValidationMessageFor(x => x.Captcha_EVSo, "", new { @id = "captchaPError", @class = "help-block" }, "p")
                                </div>
                            </li>
                            <li class="full dp-t">
                                <input type="submit" value="Yes, I am Interested" id="applyForGreenCharging_social" name="applyForGreenCharging_social" class="btn-000 pill full fm-rb" />
                            </li>
                        </ul>
                        }
                    </div>
                </div>
            </div>
            <div class="tab-content-wrapper active" id="evChargersInd">
                <div class="tab-content">
                    <div class="full sign-in-wrapper">
                        <p class="full h3 dp-b">Got an electric Vehicle and want to deploy a charging point in your dedicated parking?</p>
                        <div class="sign-left">
                            <img src="/images/SwitchToGreen/individual-getting-a-new-connection.jpg" alt="sign in" class="res-img" />
                        </div>
                        @using (Html.BeginRouteForm(MvcSettings.SitecoreRouteName, FormMethod.Post, new { id = "frmCreate5", @class = "form-signin" }))
                        {
                            @Html.AddUniqueFormId()
                            @Html.AntiForgeryToken()
                            @Html.ValidationSummary(true)
                            @Html.HiddenFor(m => m.FormType)
                        <ul class="full">
                            <li class="full dp-t">
                                <div class="full input-wrapper">
                                    @Html.TextBoxFor(model => model.FullName_EV, new { @class = "input", placeholder = "Enter Full Name", required = "required", autocomplete = "off", @maxlength = "100" })

                                </div>
                                @Html.ValidationMessageFor(model => model.FullName_EV, "", new { @class = "text-danger" })
                            </li>
                            <li class="full dp-t">
                                <div class="full input-wrapper">
                                    @Html.TextBoxFor(model => model.EmailId_EVIn, new { @class = "input", placeholder = "Enter E-mail ID", required = "required", autocomplete = "off", @maxlength = "50" })

                                </div>
                                @Html.ValidationMessageFor(model => model.EmailId_EVIn, "", new { @class = "text-danger" })
                            </li>
                            <li class="full dp-t">
                                <div class="full input-wrapper">
                                    @Html.TextBoxFor(model => model.MobileNumber_EVIn, new { @class = "input", placeholder = "Enter Mobile Number", required = "required", autocomplete = "off", @maxlength = "12" })

                                </div>
                                @Html.ValidationMessageFor(model => model.MobileNumber_EVIn, "", new { @class = "text-danger" })
                            </li>
                            <li class="full dp-t">
                                <div class="bg-white @Html.ValidationErrorFor(x => x.Captcha_EVIn, "has-error")">
                                    <div class="row captcha_box pt-3">
                                        <label for="" class="">@Html.Sitecore().Dictionary("/Common/Captcha", "Captcha") <span class="required">*</span></label>
                                    </div>
                                    <div class="g-recaptcha" data-sitekey="6LdYFWgUAAAAALdZf_sC8BRN2uLPzcsxb2p192rf"></div>
                                    @Html.ValidationMessageFor(x => x.Captcha_EVIn, "", new { @id = "captchaPError", @class = "help-block" }, "p")
                                </div>
                            </li>
                            <li class="full dp-t">
                                <input type="submit" value="Apply Connection" id="applyForGreenCharging_individual" name="applyForGreenCharging_individual" class="btn-000 pill full fm-rb" />
                            </li>
                        </ul>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


