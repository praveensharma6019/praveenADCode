@using Sitecore.Mvc.Presentation
@using Sitecore
@using Sitecore.Foundation.SitecoreExtensions.Extensions
@using Sitecore.Foundation.Dictionary.Repositories
@using Sitecore.Foundation.Dictionary.Extensions
@using System.Text.RegularExpressions
@using Sitecore.Data
@using Sitecore.Data.Items
@using Sitecore.Data.Fields


@{
    
  var Title = Sitecore.Mvc.Presentation.RenderingContext.Current.Rendering.Parameters.Where(x => x.Key == "Title").FirstOrDefault().Value;
     var datasource = Sitecore.Mvc.Presentation.RenderingContext.Current.Rendering.DataSource;
    var elements = Sitecore.Context.Database.GetItem(datasource);
 var docsColl = elements.GetChildren().OrderByDescending(x => x[Sitecore.FieldIDs.Updated]).ToList();;
 var elementcount = elements.GetChildren().Count;
}


<section class="py-5  position-relative d-block">
<div class="container">
<div class="row">
<div class="col-lg-6">
<h2 class="heading pl-4 mb-4">@Title</h2>
<div class="p-4 bg-white">
<div class="owl-carousel owl-theme single-carousel">
<div class="item">
<div class="row">
           @for (int i = 0; i < elementcount;)
            {
             	<div class="col-md-4 col-lg-12 mb-3">
     <ul class="ul-download-icon">	
                        @for (int j = 0; j < 6; j++)
                        {

                            if (i < elementcount)
                            {
	var theURL = Sitecore.Resources.Media.MediaManager.GetMediaUrl(docsColl[i]);
	var url = Sitecore.Resources.Media.HashingUtils.ProtectAssetUrl(theURL);
		
    <li><a href="@url" target="_blank">@Html.Sitecore().Field("Title", docsColl[i])</a></li>
	
<!-- } -->
                           }
                            else
                            {
                                break;
                            }
                            i++;
                        }
                </ul>
</div>


            }
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</section>