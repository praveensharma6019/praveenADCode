@using Sitecore.Mvc.Presentation
@using Sitecore
@using Sitecore.Foundation.SitecoreExtensions.Extensions
@using Sitecore.Foundation.Dictionary.Repositories
@using Sitecore.Foundation.Dictionary.Extensions
@using System.Text.RegularExpressions
@using Sitecore.Data
@using Sitecore.Data.Items
@using Sitecore.Data.Fields


@{
    
  var ListingDatasource = Sitecore.Mvc.Presentation.RenderingContext.Current.Rendering.Parameters.Where(x => x.Key == "ListingDatasource").FirstOrDefault().Value;   
   var ListingElements = Sitecore.Context.Database.GetItem(ListingDatasource);
   
  var LatestTitle = Sitecore.Mvc.Presentation.RenderingContext.Current.Rendering.Parameters.Where(x => x.Key == "LatestTitle").FirstOrDefault().Value;
  var LatestDatasource = Sitecore.Mvc.Presentation.RenderingContext.Current.Rendering.Parameters.Where(x => x.Key == "LatestDatasource").FirstOrDefault().Value;  
   var elements1 = Sitecore.Context.Database.GetItem(LatestDatasource);
   <!-- var items =  elements1.Children; -->
    var items = elements1.GetChildren().OrderByDescending(x => x[Sitecore.FieldIDs.Updated]).ToList();;
	
	 var LatestDatasource2 = Sitecore.Mvc.Presentation.RenderingContext.Current.Rendering.Parameters.Where(x => x.Key == "LatestDatasource2").FirstOrDefault().Value;
var elements2 = Sitecore.Context.Database.GetItem(LatestDatasource2);
   <!-- var items =  elements1.Children; -->
    var items2 = elements2.GetChildren().OrderByDescending(x => x[Sitecore.FieldIDs.Updated]).ToList();;
	
	 var LatestDatasource3 = Sitecore.Mvc.Presentation.RenderingContext.Current.Rendering.Parameters.Where(x => x.Key == "LatestDatasource3").FirstOrDefault().Value;
var elements3 = Sitecore.Context.Database.GetItem(LatestDatasource3);
   <!-- var items =  elements1.Children; -->
    var items3 = elements3.GetChildren().OrderByDescending(x => x[Sitecore.FieldIDs.Updated]).ToList();;
	
	 var LatestDatasource4 = Sitecore.Mvc.Presentation.RenderingContext.Current.Rendering.Parameters.Where(x => x.Key == "LatestDatasource4").FirstOrDefault().Value;
var elements4 = Sitecore.Context.Database.GetItem(LatestDatasource4);
   <!-- var items =  elements1.Children; -->
    var items4 = elements4.GetChildren().OrderByDescending(x => x[Sitecore.FieldIDs.Updated]).ToList();;
	
	 var LatestDatasource5 = Sitecore.Mvc.Presentation.RenderingContext.Current.Rendering.Parameters.Where(x => x.Key == "LatestDatasource5").FirstOrDefault().Value;
var elements5 = Sitecore.Context.Database.GetItem(LatestDatasource5);
   <!-- var items =  elements1.Children; -->
    var items5 = elements5.GetChildren().OrderByDescending(x => x[Sitecore.FieldIDs.Updated]).ToList();;
	
	 var LatestDatasource6 = Sitecore.Mvc.Presentation.RenderingContext.Current.Rendering.Parameters.Where(x => x.Key == "LatestDatasource6").FirstOrDefault().Value;
var elements6 = Sitecore.Context.Database.GetItem(LatestDatasource6);
   <!-- var items =  elements1.Children; -->
    var items6 = elements6.GetChildren().OrderByDescending(x => x[Sitecore.FieldIDs.Updated]).ToList();;
	 }

<section class="bg-gray py-5">
<div class="container">
<div class="row">
<div class="col-lg-8 overflow-hidden mb-3 mb-lg-0">
<div class="tradingview-widget-container">
  <div class="tradingview-widget-container__widget"></div>
  <div class="tradingview-widget-copyright"><a href="https://www.tradingview.com/symbols/BSE-ADANIPORTS/" rel="noopener" target="_blank"><span class="blue-text">ADANIPORTS Price Today</span></a> by TradingView</div>
  <script type="text/javascript" src="https://s3.tradingview.com/external-embedding/embed-widget-symbol-info.js" async>
  {
  "symbol": "BSE:ADANIPORTS",
  "width": "100%",
  "locale": "en",
  "colorTheme": "light",
  "isTransparent": false
}
  </script>
</div>
@Html.Sitecore().Field("Body", ListingElements)
</div>
<div class="col-lg-4">
<div class="p-4 bg-blue h-100 ul-financials">
<h3 class="section-heading txt-white text-left">Latest Information</h3>
<ul>
@foreach (var docs in items.ToList())
{
	var theURL = Sitecore.Resources.Media.MediaManager.GetMediaUrl(docs);
	var url = Sitecore.Resources.Media.HashingUtils.ProtectAssetUrl(theURL);
    <li><em class="fa fa-newspaper"></em><a href="@url" target="_blank" class="btn-white">Income Statement as per SEBI format</a></li>
	break;
   } 
</ul>
<ul>
@foreach (var docs in items2.ToList())
{
	var theURL = Sitecore.Resources.Media.MediaManager.GetMediaUrl(docs);
	var url = Sitecore.Resources.Media.HashingUtils.ProtectAssetUrl(theURL);
    <li><em class="fa fa-newspaper"></em><a href="@url" target="_blank" class="btn-white">Quarterly Operations and Financial Highlights</a></li>
	break;
   } 
</ul>

<ul>
@foreach (var docs in items3.ToList())
{
	var theURL = Sitecore.Resources.Media.MediaManager.GetMediaUrl(docs);
	var url = Sitecore.Resources.Media.HashingUtils.ProtectAssetUrl(theURL);
    <li><em class="fa fa-newspaper"></em><a href="@url" target="_blank" class="btn-white">Transcript</a></li>
	break;
   } 
</ul>

<ul>
@foreach (var docs in items4.ToList())
{
	var theURL = Sitecore.Resources.Media.MediaManager.GetMediaUrl(docs);
	var url = Sitecore.Resources.Media.HashingUtils.ProtectAssetUrl(theURL);
    <li><em class="fa fa-newspaper"></em><a href="@url" target="_blank" class="btn-white">Annual Report</a></li>
	break;
   } 
</ul>

<ul>
@foreach (var docs in items5.ToList())
{
	var theURL = Sitecore.Resources.Media.MediaManager.GetMediaUrl(docs);
	var url = Sitecore.Resources.Media.HashingUtils.ProtectAssetUrl(theURL);
    <li><em class="fa fa-newspaper"></em><a href="@url" target="_blank" class="btn-white">Financials of Subsidiary Companies</a></li>
	break;
   } 
</ul>

<ul>
@foreach (var docs in items6.ToList())
{
	var theURL = Sitecore.Resources.Media.MediaManager.GetMediaUrl(docs);
	var url = Sitecore.Resources.Media.HashingUtils.ProtectAssetUrl(theURL);
    <li><em class="fa fa-newspaper"></em><a href="@url" target="_blank" class="btn-white">Investor Presentation</a></li>
	break;
   } 
</ul>
</div>
</div>
</div>
</div>
</section>