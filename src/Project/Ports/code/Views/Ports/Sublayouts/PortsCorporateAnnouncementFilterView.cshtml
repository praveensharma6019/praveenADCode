@using Sitecore.Mvc
@using Sitecore.Mvc.Presentation
@using Sitecore.Resources.Media
@using Sitecore.Foundation.SitecoreExtensions.Extensions
@using System.Globalization;
@model RenderingModel
@{
    var datasource = Sitecore.Mvc.Presentation.RenderingContext.Current.Rendering.DataSource;
    var parent = Sitecore.Context.Database.GetItem(datasource);
    var i = 0;
    List<string> regType = new List<string>();
	 List<string> formatedregType = new List<string>();
	
    var j = 0;
    var flag = 0;
    var sortedparent = parent.Children.Where(x => x.Fields["IsVisible"].Value == "1").OrderByDescending(x => x.Fields["Date"].Value);
    string linkUrl = "#";
}


<section class="py-5 bg-gray">
    <div class="container">
        <div class="row">
            <div class="col-md-3 ml-auto">
                <div class="form-group">

                    <select class="form-control btn-gradient" id="btn-mrelease">
						 <option value="all">All</option>
                        @foreach (var child in sortedparent.ToList())
                        {
                            var childitems = Sitecore.Context.Database.GetItem(Sitecore.Data.ID.Parse(child.ID));
                            var newsType = child.Fields["Type"].Value;
							var formatedType=newsType.Replace(" ","-");
                          //  var formatedcompletedate = DateTime.ParseExact(completedate, "yyyyMMdd'T'HHmmss'Z'", CultureInfo.InvariantCulture);
                          //  var year = formatedcompletedate.ToString("yyyy");
						
                            if (i == 0)
                            {
                                regType.Add(newsType);
								formatedregType.Add(formatedType);

                                <option value="@formatedType">@newsType</option>
                            }
                            else
                            {
                                foreach (var appendType in regType)
                                {

                                    if (appendType == newsType)
                                    {
                                        flag++;
                                        break;
                                    }
                                }
                                if (flag == 0)
                                {
                                    regType.Add(newsType);
								formatedregType.Add(formatedType);
                                     <option value="@formatedType">@newsType</option>
                                }
                                else
                                {
                                    flag = 0;
                                }
                            }
                            i++;
                        }
                    </select>
                </div>
            </div>
        </div>
        <div id="media-r-parent">

            @foreach (var tabType in regType)
            {
var ReplaceSpace=tabType.Replace(" ","-");               
			   if (j == 0)
                {
				
				<div id="@ReplaceSpace" class="row media-r all @ReplaceSpace">
                        <div class="col-md-12 mt-3">
                            <div class="media-date">
                                <p>@tabType</p>
                            </div>
                        </div>

                        @{
                            var mediaFilterByType = parent.Children.Where(x => x.Fields["IsVisible"].Value == "1" && x.Fields["Type"].Value.Contains(tabType)).OrderByDescending(x => x.Fields["Date"].Value);

                        }

                        @foreach (var mediaList in mediaFilterByType)
                        {
                            //Sitecore.Data.Fields.LinkField linkfield = mediaList.Fields["LinkUrl"];
                            //var url = linkfield.GetFriendlyUrl();
                          linkUrl = Sitecore.Links.LinkManager.GetItemUrl(mediaList);
						    Sitecore.Data.Fields.LinkField imageLink = mediaList.Fields["LinkUrl"];
                            var imageLinkUrl = imageLink.GetFriendlyUrl();
    <div class="col-md-12">
	
        <div class="media-release-box">
		    <div class="row">		
<div class="col-md-11">
            <h3>
			 @if (string.IsNullOrEmpty(imageLinkUrl))
                {
                    <a href="@linkUrl">   @Html.Sitecore().Field("Title", mediaList)</a>
                }
                else
                {
                    <a href="@imageLinkUrl" target="_blank">   @Html.Sitecore().Field("Title", mediaList)</a>
                }
			
			</h3>
            <p><span>@Html.Sitecore().Field("Date", mediaList, new { format = "MMM dd, yyyy" })</span></p>
        </div>
		<div class="col-md-1 icon_row">
		<a target="_blank" href="@imageLinkUrl">
		<img src="-/media/24E9B8FCA2414A8F8D51847CF551B5A0.ashx" alt=""/>
		</a>
		 </div>
		 </div>
    </div>
    </div>
}


                    </div>
                }
                else
                {

                    <div id="@ReplaceSpace" class="row media-r all @ReplaceSpace" style="display:none">
                        <div class="col-md-12 mt-3">
                            <div class="media-date">
                                <p>@tabType</p>
                            </div>
                        </div>

                        @{
                            var mediaFilterByType = parent.Children.Where(x => x.Fields["IsVisible"].Value == "1" && x.Fields["Type"].Value==(tabType)).OrderByDescending(x => x.Fields["Date"].Value);

                        }

                        @foreach (var mediaList in mediaFilterByType)
                        {
                            //Sitecore.Data.Fields.LinkField linkfield = mediaList.Fields["LinkUrl"];
                            //var url = linkfield.GetFriendlyUrl();
                            linkUrl = Sitecore.Links.LinkManager.GetItemUrl(mediaList);
							   Sitecore.Data.Fields.LinkField imageLink = mediaList.Fields["LinkUrl"];
                            var imageLinkUrl = imageLink.GetFriendlyUrl();
    <div class="col-md-12">
        <div class="media-release-box">

            <h3>
			  @if (string.IsNullOrEmpty(imageLinkUrl))
                {
                    <a href="@linkUrl">   @Html.Sitecore().Field("Title", mediaList)</a>
                }
                else
                {
                    <a href="@imageLinkUrl" target="_blank">   @Html.Sitecore().Field("Title", mediaList)</a>
                }
			</h3>
            <p><span>@Html.Sitecore().Field("Date", mediaList, new { format = "MMM dd, yyyy" })</span></p>
        </div>
    </div>

}


                    </div>
                }

            }
        </div>
        <div class="col-md-12 d-none">
            <p class="text-center arrow m-loadMore">Explore more<i class="fa fa-chevron-down ml-2"></i></p>
        </div>
    </div>
</section>