@model Sitecore.LucknowAirport.Website.Model.CorrigedumEditModel
@using Sitecore.Foundation.Dictionary.Extensions
@using Sitecore.Foundation.SitecoreExtensions.Extensions
@using Sitecore.Mvc.Configuration
@using Sitecore.LucknowAirport.Website.Model;
@{
    var itemlisting = Sitecore.Context.Database.GetItem(Templates.Tender.CorrigendumTenderListing);
}

<div class="pageContent">
    <div class="container">
        @using (Html.BeginForm("Logout", "LucknowAirport", FormMethod.Post))
        {
            <div class="col-12 p-0 pb-3">
                <div class="float-right"><button type="submit" class="btn btn-primary">@Html.Sitecore().Dictionary("LucknowAirport/Tender/Logout", "Logout")</button></div>
                @*<div class="clearfix"></div>*@
            </div>
        }
        <!-- Section -->

        <div class="pb-3">
            <div>
                <div class=mr-auto ml-auto">
                    <div class="card card-outline-secondary">
                        <div class="card-header">
                            <h3 class="mb-0">@Html.Sitecore().Dictionary("LucknowAirport/Tender/Update Tender Text", "Update Corrigendum")</h3>
                        </div>
                        <div class="card-body">
                            @using (Html.BeginRouteForm(MvcSettings.SitecoreRouteName, FormMethod.Post, new { id = "frmupdatecorrigendum", @class = "form-signin", @enctype = "multipart/form-data" }))
                            {
                                @Html.AddUniqueFormId()

                                <div class="form-horizontal">
                                    @if (ViewBag.EditError != null)
                                    {
                                        <div class="alert-danger">@ViewBag.EditError</div>
                                        <hr />
                                    }
                                    @if (ViewBag.selectedRecordNull != null)
                                    {
                                        <div class="alert-danger">@ViewBag.selectedRecordNull</div>
                                        <hr />
                                    }
                                    @if (ViewBag.FileDeleteError != null)
                                    {
                                        <div class="alert-danger">@ViewBag.FileDeleteError</div>
                                        <hr />
                                    }


                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    @Html.HiddenFor(model => model.Id)

                                    <table class="table">
                                        <thead>
                                            <tr>
                                                <td>
                                                    @Html.DisplayNameFor(model => model.TenderList[0].NITNo)
                                                </td>
                                                <td>
                                                    @Html.DisplayNameFor(model => model.TenderList[0].Description)
                                                </td>
                                                <td>
                                                    @Html.DisplayName("Select")
                                                </td>

                                            </tr>
                                        </thead>
                                        @if (Model.TenderList != null)
                                        {
                                            for (var i = 0; i < Model.TenderList.Count; i++)
                                            {
                                                <tr>
                                                    <td>
                                                        @Html.DisplayFor(mode => Model.TenderList[i].NITNo)
                                                    </td>
                                                    <td>
                                                        @Html.DisplayFor(mode => Model.TenderList[i].Description)
                                                    </td>
                                                    <td>
                                                        @if (Model.CorrigendumTenderMapping != null)
                                                        {
                                                            for (var j = 0; j < Model.CorrigendumTenderMapping.Count; j++)
                                                            {
                                                                if (Model.TenderList[i].Id == Model.CorrigendumTenderMapping[j].TenderId)
                                                                {
                                                                    Model.TenderList[i].IsChecked = true;
                                                                }
                                                            }

                                                        }
                                                        @Html.HiddenFor(m => Model.TenderList[i].Id)
                                                        @Html.CheckBoxFor(m => Model.TenderList[i].IsChecked)
                                                    </td>
                                                    <td>
                                                        @Html.HiddenFor(m => Model.TenderList[i].NITNo)
                                                        @Html.HiddenFor(m => Model.TenderList[i].Description)
                                                        @Html.HiddenFor(m => Model.TenderList[i].IsChecked)

                                                    </td>
                                                </tr>
                                            }
                                        }

                                    </table>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-6" })
                                        <div class="col-md-10">
                                            @Html.TextBoxFor(model => model.Title, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.Label("Date(dd-MM-yyyy HH:mm:ss)", htmlAttributes: new { @class = "control-label col-md-6" })
                                        <div class="col-md-10">
                                            @Html.TextBoxFor(x => x.Date, "{0:dd-MM-yyyy hh:mm:ss}", new { htmlAttributes = new { @class = "form-control", @type = "text" } })
                                            @*@Html.TextBoxFor(model => model.Date, "{0:dd-MM-yyyy}", new { htmlAttributes = new { @class = "form-control", @type = "text" } })*@
                                            @Html.ValidationMessage("Date", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-6" })
                                        <div class="col-md-10">

                                            @Html.DropDownListFor(model => model.Status, new List<SelectListItem>
                               {
                                  new SelectListItem{ Text="Active", Value = "true" },
                                  new SelectListItem{ Text="De-Active", Value = "false" },
                               }, "Select Status")
                                            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Files, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.TextBoxFor(model => model.Files, "", new { @type = "file", @multiple = "multiple", @onchange = "Validate(this);", @accept = ".jpg,.jpeg,.png,.pdf,.doc,.docx,.xls,.xlsx" })
                                            @Html.ValidationMessageFor(model => model.Files, "", new { @class = "text-danger" })
                                        </div>
                                    </div>



                                    <table class="table">
                                        <tr>
                                            <th>
                                                <label>@Html.Sitecore().Dictionary("LucknowAirport/Tender/File Name Text", "File Name")</label>
                                            </th>
                                        </tr>
                                        @if (Model.CorrigendumDocument != null)
                                        {
                                            foreach (var item in Model.CorrigendumDocument)
                                            {
                                                <tr>
                                                    <td>
                                                        @Html.ActionLink(item.FileName, "DownloadCorrigendumFile", new { id = item.Id }, new { @class = "txt-orange" })
                                                    </td>
                                                    <td>
                                                        <button type="button" class="btn btn-default btn-sm">
                                                            <span class="glyphicon glyphicon-trash"></span> @Html.ActionLink("Trash", "DeleteCorrigendumFile", new { id = item.Id, DocumentPath = item.DocumentPath })
                                                        </button>

                                                    </td>
                                                </tr>
                                            }
                                        }
                                       
                                    </table>
                                    <div class="form-group">
                                        <div class="col-md-offset-2 col-md-10">
                                            <input type="submit" value="Save" class="btn btn-primary" />
                                            @if (Model.Status == true)
                                            {
                                                <input type="submit" value="Inactivate" class="btn btn-primary" name="Inactivate_Corrigendum" />
                                            }
                                            else
                                            {
                                                <input type="submit" value="Activate" class="btn btn-primary" name="Activate_Corrigendum" />
                                            }
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>

                        <div class="card-footer">
                            <a href="@itemlisting.Url()" class="btn btn-primary">@Html.Sitecore().Dictionary("LucknowAirport/Tender/Back To Corrigendum List", "Back To Corrigendum List")</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
