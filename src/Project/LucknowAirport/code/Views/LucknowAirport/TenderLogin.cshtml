@using Sitecore.Foundation.Dictionary.Extensions
@using Sitecore.Foundation.SitecoreExtensions.Extensions
@using Sitecore.Mvc.Configuration
@model Sitecore.LucknowAirport.Website.Model.Login

<div class="pageContent">
    <div class="">
        <!-- Section -->
        <section class="bg-white py-5">
            <div class="container">
                <div class="row">
                    <div class="col-lg-5 mr-auto ml-auto">
                        <div class="card card-outline-secondary">
                            <div class="card-header">
                                <h3 class="mb-0">@Html.Sitecore().Dictionary("LucknowAirport/Tender/SignIn", "Sign In")</h3>
                            </div>
                            <div class="card-body">
                                @using (Html.BeginRouteForm(MvcSettings.SitecoreRouteName, FormMethod.Post, new { @class = "form-signin" }))
                                {
                                    @Html.AntiForgeryToken()
                                    @Html.AddUniqueFormId()
                                    @Html.ValidationSummary(true)
                                    <div class="form-group">
                                        <label for="inputPasswordOld">@Html.Sitecore().Dictionary("/LucknowAirport/Tender/UserName", "Username or Email")</label>
                                        @Html.TextBoxFor(x => x.LoginName, new { @class = "form-control", id = "LoginName", required = "required" })
                                        @Html.ValidationMessageFor(x => x.LoginName, "", new { @class = "help-block" }, "p")
                                    </div>
                                    <div class="form-group">
                                        <label for="inputPasswordNew">@Html.Sitecore().Dictionary("/LucknowAirport/Tender/Passoword", "Password")</label>
                                        @Html.PasswordFor(x => x.Password, new { @class = "form-control", id = "Password", @autocomplete = "off", required = "required" })
                                        @Html.ValidationMessageFor(x => x.Password, "", new { @class = "help-block" }, "p")
                                    </div>
                                    <div class="col-md-4 mb-3">

                                        <div id="recaptcha1">

                                        </div>

                                    </div>
                                    @Html.HiddenFor(model => model.reResponse, new { id = "reResponse" })
                                    @Html.ValidationMessageFor(model => model.reResponse, "", new { @class = "help-block" }, "p")
                                    <div class="form-group text-right">
                                        <button type="submit" class="btn btn-primary" id="btnsubmit">@Html.Sitecore().Dictionary("LucknowAirport/Tender/Login", "Login")</button>
                                        <button type="button" class="btn btn-secondary">@Html.Sitecore().Dictionary("LucknowAirport/Tender/Cancel", "Cancel")</button>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>
        <!-- /Section -->
    </div>
</div>

<script>
var recaptcha1;
var onloadCallback = function () {


    //Render the recaptcha2 on the element with ID "recaptcha2"
    recaptcha1 = grecaptcha.render('recaptcha1', {
        'sitekey': '6Lcql9QZAAAAAKGvvD4LZKHKys2Dwh0kFUVE5MGc', //Replace this with your Site key
        'theme': 'light'
    });


};
</script>