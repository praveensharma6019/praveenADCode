@using Sitecore.Foundation.SitecoreExtensions.Extensions
@using Sitecore.Mvc
@using Sitecore.Mvc.Configuration
@using Sitecore.Defence
@model Sitecore.Defence.Website.Models.DefenceVendorEnrollmentModel

@using (Html.BeginRouteForm(MvcSettings.SitecoreRouteName, FormMethod.Post, new { id = "contact_form", name = "contact_form", @class = "vendor-form", enctype = "multipart/form-data", @autocomplete="off"}))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.PageInfo, new { @Value = HttpContext.Current.Request.Url.AbsoluteUri })
    @Html.HiddenFor(m => m.FormName, new { @Value = HttpContext.Current.Request.Url.AbsolutePath })
    @Html.HiddenFor(m => m.CompanyProfileDocDLink, new { @Value = HttpContext.Current.Request.Url.PathAndQuery })


    <section class="py-5 bg-white">
        <div class="container">
            <h2 class="mb-3">Company Details</h2>
            <div class="row">
                <div class="col-lg-3">
                    <label>Company Full Name<i>*</i></label>
                </div>

                <div class="col-lg-9">
                    <div class="row">
                        <div class="col-lg-12">
                            <div class="form-group">
                                @Html.TextBoxFor(model => model.CompanyFullName, new { @class = "form-control", required = "required",
placeholder = "Company name",
onkeyup = "var start = this.selectionStart; var end = this.selectionEnd; this.value = this.value.replace(/,/g, ''); this.setSelectionRange(start, end);"
})
                                @Html.ValidationMessageFor(model => model.CompanyFullName, "", new { @class = "help-block" }, "p")

                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-3">
                    <label>Address<i>*</i></label>
                </div>
                <div class="col-lg-9">
                    <div class="row">
                        <div class="col-lg-12">
                            <div class="form-group">
                                @Html.TextBoxFor(model => model.Address, new { @class = "form-control", required = "required",
placeholder = "Address",
onkeyup = "var start = this.selectionStart; var end = this.selectionEnd; this.value = this.value.replace(/,/g, ''); this.setSelectionRange(start, end);"
})
                                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "help-block" }, "p")

                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-3">
                    <label>City<i>*</i></label>
                </div>
                <div class="col-lg-9">
                    <div class="row">
                        <div class="col-lg-4 col-md-6">
                            <div class="form-group">
                                @Html.TextBoxFor(model => model.City, new { @class = "form-control", required = "required",
placeholder = "City",
onkeyup = "var start = this.selectionStart; var end = this.selectionEnd; this.value = this.value.replace(/,/g, ''); this.setSelectionRange(start, end);"
})
                                @Html.ValidationMessageFor(model => model.City, "", new { @class = "help-block" }, "p")

                            </div>
                        </div>
                        <div class="col-lg-4 col-md-6">
                            <div class="form-group" style="text-align:right">
                                <label>Pin Code<i>*</i></label>
                            </div>
                        </div>
                        <div class="col-lg-4 col-md-6">
                            <div class="form-group">
                                @Html.TextBoxFor(model => model.Pincode, new { @class = "form-control", required = "required", inputmode="numeric", maxlength="6",
placeholder = "Pin Code"
})
                                @Html.ValidationMessageFor(model => model.Pincode, "", new { @class = "help-block" }, "p")

                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-3">
                    <label>Contact Details<i>*</i></label>
                </div>
                <div class="col-lg-9">
                    <div class="row">
                        <div class="col-lg-4 col-md-6">
                            <div class="form-group">
                                @Html.TextBoxFor(model => model.ContactPerson, new { @class = "form-control", required = "required",
placeholder = "Contact Person*",
onkeyup = "var start = this.selectionStart; var end = this.selectionEnd; this.value = this.value.replace(/,/g, ''); this.setSelectionRange(start, end);"
})
                                @Html.ValidationMessageFor(model => model.ContactPerson, "", new { @class = "help-block" }, "p")

                            </div>
                        </div>
                        <div class="col-lg-4 col-md-6">
                            <div class="form-group">
                                @Html.TextBoxFor(model => model.EmailId, new { @class = "form-control", required = "required",
placeholder = "Email ID*"
})
                                @Html.ValidationMessageFor(model => model.EmailId, "", new { @class = "help-block" }, "p")

                            </div>
                        </div>
                        <div class="col-lg-4 col-md-6">
                            <div class="form-group">
                                @Html.TextBoxFor(model => model.MobileNo, new { @class = "form-control", required = "required",
                               placeholder = "Mobile No.*", type="number",
                               maxlength = 10
                           })
                                @Html.ValidationMessageFor(model => model.MobileNo, "", new { @class = "help-block" }, "p")

                            </div>
                        </div>
                        <div class="col-lg-4 col-md-6">
                            <div class="form-group">
                                @Html.TextBoxFor(model => model.TelephoneNo, new { @class = "form-control", required = "required", type="number", maxlength=10,
placeholder = "Telephone No*"
})
                                @Html.ValidationMessageFor(model => model.TelephoneNo, "", new { @class = "help-block" }, "p")

                            </div>
                        </div>
                        <div class="col-lg-4 col-md-6">
                            <div class="form-group">
                                @Html.TextBoxFor(model => model.Website, new { @class = "form-control", placeholder = "Website" })
                                @Html.ValidationMessageFor(model => model.Website, "", new { @class = "help-block" }, "p")

                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-3">
                    <label>GSTIN<i>*</i></label>
                </div>
                <div class="col-lg-9">
                    <div class="row">
                        <div class="col-lg-12">
                            <div class="form-group">
                                @Html.TextBoxFor(model => model.GSTIN, new { @class = "form-control", required = "required",pattern="^[0-9]{2}[A-Z]{5}[0-9]{4}[A-Z]{1}[1-9A-Z]{1}Z[0-9A-Z]{1}$",title="Invalid GST Number.",
                               placeholder = "GSTIN",maxlength="15",
                               onkeyup = "var start = this.selectionStart; var end = this.selectionEnd; this.value = this.value.toUpperCase(); this.setSelectionRange(start, end);"
                           })
                                @Html.ValidationMessageFor(model => model.GSTIN, "", new { @class = "help-block" }, "p")
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-3">
                    <label>PAN<i>*</i></label>
                </div>
                <div class="col-lg-9">
                    <div class="row">
                        <div class="col-lg-12">
                            <div class="form-group">
                                @Html.TextBoxFor(model => model.PanNo, new { @class = "form-control", required = "required",
                               placeholder = "PAN",
                               onkeyup = "var start = this.selectionStart; var end = this.selectionEnd; this.value = this.value.toUpperCase(); this.setSelectionRange(start, end);"
                           })
                                @Html.ValidationMessageFor(model => model.PanNo, "", new { @class = "help-block" }, "p")


                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-3">
                    <label>TIN<i>*</i></label>
                </div>
                <div class="col-lg-9">
                    <div class="row">
                        <div class="col-lg-12">
                            <div class="form-group">
                                @Html.TextBoxFor(model => model.Tin, new { @class = "form-control", required = "required",
                               placeholder = "TIN",
                               onkeyup = "var start = this.selectionStart; var end = this.selectionEnd; this.value = this.value.toUpperCase(); this.setSelectionRange(start, end);"
                           })
                                @Html.ValidationMessageFor(model => model.Tin, "", new { @class = "help-block" }, "p")

                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-3">
                    <label>Import Export Code</label>
                </div>
                <div class="col-lg-9">
                    <div class="row">
                        <div class="col-lg-12">
                            <div class="form-group">
                                @Html.TextBoxFor(model => model.ImportExportCode, new { @class = "form-control", placeholder = "Import Export Code" })
                                @Html.ValidationMessageFor(model => model.ImportExportCode, "", new { @class = "help-block" }, "p")

                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-3">
                    <label>Industry Classification<i>*</i></label>
                </div>
                <div class="col-lg-9">
                    <div class="row">
                        <div class="col-lg-2 col-md-6">
                            <div class="form-check form-check-inline mb-3">
                                @Html.RadioButtonFor(model => model.MSME, "Micro", new { id = "micro", @class = "form-check-input msmeother", @checked = "checked" })
                                <label class="form-check-label" for="micro">Micro</label>
                            </div>
                        </div>
                        <div class="col-lg-2 col-md-6">
                            <div class="form-check form-check-inline mb-3">
                                @Html.RadioButtonFor(model => model.MSME, "Small", new { id = "small", @class = "form-check-input msmeother" })
                                <label class="form-check-label" for="small">Small</label>
                            </div>
                        </div>
                        <div class="col-lg-2 col-md-6">
                            <div class="form-check form-check-inline mb-3">
                                @Html.RadioButtonFor(model => model.MSME, "Medium", new { id = "medium", @class = "form-check-input msmeother" })
                                <label class="form-check-label" for="medium">Medium</label>
                            </div>
                        </div>
                        <div class="col-lg-2 col-md-6">
                            <div class="form-check form-check-inline mb-3">
                                @Html.RadioButtonFor(model => model.MSME, "Large", new { id = "Large", @class = "form-check-input msmeother" })
                                <label class="form-check-label" for="NA">Large</label>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-lg-3">
                    <label>Type of Ownership<i>*</i></label>
                </div>
                <div class="col-lg-9">
                    <div class="row">
                        <div class="col-lg-4">
                            <div class="form-group">
                                @Html.DropDownListFor(m => m.TypeofOwnership, new SelectList(Model.OwnershipTypeList), "Select", new { @class = "form-control", id = "ownershiptype", required = "required" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-3">
                    <label>Number of Employees</label>
                </div>
                <div class="col-lg-9">
                    <div class="row">
                        <div class="col-lg-4">
                            <div class="form-group">
                                @Html.TextBoxFor(model => model.NumberofEmployees, new { @class = "form-control", width = "150px !important", id = "ContentPlaceHolder1_no_emp", placeholder = "Number Of Employee" })
                                @Html.ValidationMessageFor(model => model.NumberofEmployees, "", new { @class = "help-block" }, "p")
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <!--/Section-->
    <section class="py-5 bg-grey">
        <div class="container">
            <h2 class="mb-3">Defence & Aerospace(D&A) Customer Base</h2>
            <div class="row mb-3">
                <div class="col-lg-3">
                    <label>Please specify the sectors served</label>
                </div>
                <div class="col-lg-9">
                    <div class="row">
                        @if (Model.SectorServedList != null)
                        {
                            for (int i = 0; i < Model.SectorServedList.Count; i++)
                            {
                                <div class="col-lg-2 col-md-6">
                                    <div class="form-check mb-3">
                                        @if (Model.SectorServedList[i].Text.ToUpper() != "OTHER")
                                        {
                                            @Html.HiddenFor(m => m.SectorServedList[i].Text)
                                            @Html.HiddenFor(m => m.SectorServedList[i].Value)
                                            @Html.CheckBoxFor(m => Model.SectorServedList[i].Checked, new { @class = "form-check-input", id = "SectorServedList_" + @i, data_text = @Model.SectorServedList[i].Text })
                                            <label class="form-check-label" for="SectorServedList_" @i>@Model.SectorServedList[i].Text</label>
											
                                        }
                                        else
                                        {
                                            @Html.HiddenFor(m => m.SectorServedList[i].Text)
                                            @Html.CheckBoxFor(m => Model.SectorServedList[i].Checked, new { @class = "form-check-input de_sector_serve_type", id = "SectorServedList_Other", data_text = @Model.SectorServedList[i].Text })
                                            <label class="form-check-label" for="SectorServedList_" @i>@Model.SectorServedList[i].Text</label>
                                            <div id="de_sector_serve_other_container" style="display:none">
                                                @Html.TextBoxFor(model => model.SectorServedList[i].Value, new { @class = "form-control", onkeyup = "var start = this.selectionStart; var end = this.selectionEnd; this.value = this.value.replace(/,/g, ''); this.setSelectionRange(start, end);" })
                                            </div>
                                        }
                                    </div>
                                </div>
                            }
                        }
                    </div>
                </div>
            </div>
            <!--defence and aero row-start-->
            <div id="defence_aero_row_container">
                <div class="row mb-3">
                    <div class="col-lg-3">
                        <label>Specify the type of supplier</label>
                    </div>
                    <div class="col-lg-9">
                        <div class="row">
                            @if (Model.SupplierTypeList != null)
                            {
                                for (int i = 0; i < Model.SupplierTypeList.Count; i++)
                                {
                                    <div class="col-lg-2 col-md-6">
                                        <div class="form-check mb-3">
                                            @if (Model.SupplierTypeList[i].Text.ToUpper() != "OTHER")
                                            {
                                                @Html.HiddenFor(m => m.SupplierTypeList[i].Text)
                                                @Html.HiddenFor(m => m.SupplierTypeList[i].Value)
                                                @Html.CheckBoxFor(m => Model.SupplierTypeList[i].Checked, new { @class = "form-check-input", id = "SupplierTypeList_" + @i, data_text = @Model.SupplierTypeList[i].Text })
                                                <label class="form-check-label" for="SupplierTypeList_" @i>@Model.SupplierTypeList[i].Text</label>
                                            }
                                            else
                                            {
                                                @Html.HiddenFor(m => m.SupplierTypeList[i].Text)
                                                @Html.CheckBoxFor(m => Model.SupplierTypeList[i].Checked, new { @class = "form-check-input", id = "SupplierTypeList_Other", data_text = @Model.SupplierTypeList[i].Text })
                                                <label class="form-check-label defence_segemt_served" for="SupplierTypeList_" @i>@Model.SupplierTypeList[i].Text</label>
                                                <div id="defence_type_of_supplier_other_container" style="display:none">
                                                    @Html.TextBoxFor(model => model.SupplierTypeList[i].Value, new { @class = "form-control", onkeyup = "var start = this.selectionStart; var end = this.selectionEnd; this.value = this.value.replace(/,/g, ''); this.setSelectionRange(start, end);" })
                                                </div>
                                            }
                                        </div>
                                    </div>
                                }
                            }
                        </div>
                    </div>
                </div>
                <div class="row mb-3">
                    <div class="col-lg-3">
                        <label>Specify the segments served</label>
                    </div>
                    <div class="col-lg-9">
                        <div class="row">
                            @if (Model.SegmentServedTypeList != null)
                            {
                                for (int i = 0; i < Model.SegmentServedTypeList.Count; i++)
                                {
                                    <div class="col-lg-2 col-md-6">
                                        <div class="form-check mb-3">
                                            @if (Model.SegmentServedTypeList[i].Text.ToUpper() != "OTHER")
                                            {
                                                @Html.HiddenFor(m => m.SegmentServedTypeList[i].Text)
                                                @Html.HiddenFor(m => m.SegmentServedTypeList[i].Value)
                                                @Html.CheckBoxFor(m => Model.SegmentServedTypeList[i].Checked, new { @class = "form-check-input", id = "SegmentServedTypeList_" + @i, data_text = @Model.SegmentServedTypeList[i].Text })
                                                <label class="form-check-label" for="SegmentServedTypeList_" @i>@Model.SegmentServedTypeList[i].Text</label>
                                            }
                                            else
                                            {
                                                @Html.HiddenFor(m => m.SegmentServedTypeList[i].Text)
                                                @Html.CheckBoxFor(m => Model.SegmentServedTypeList[i].Checked, new { @class = "form-check-input defence_segemt_served", id = "SegmentServedTypeList_Other", data_text = @Model.SegmentServedTypeList[i].Text })
                                                <label class="form-check-label" for="SegmentServedTypeList_" @i>@Model.SegmentServedTypeList[i].Text</label>
                                                <div id="defence_segemt_served_other_container" style="display:none">
                                                    @Html.TextBoxFor(model => model.SegmentServedTypeList[i].Value, new { @class = "form-control", onkeyup = "var start = this.selectionStart; var end = this.selectionEnd; this.value = this.value.replace(/,/g, ''); this.setSelectionRange(start, end);" })
                                                </div>
                                            }
                                        </div>
                                    </div>
                                }
                            }
                        </div>
                    </div>
                </div>
                <div class="row mb-3">
                    <div class="col-lg-3">
                        <label>Specify the D&A platforms served</label>
                    </div>
                    <div class="col-lg-9">
                        <div class="row">
                            @if (Model.DA_PlatformsServedList != null)
                            {
                                for (int i = 0; i < Model.DA_PlatformsServedList.Count; i++)
                                {
                                    <div class="col-lg-3 col-md-6">
                                        <div class="form-check mb-3">
                                            @if (Model.DA_PlatformsServedList[i].Text.ToUpper() != "OTHER")
                                            {
                                                @Html.HiddenFor(m => m.DA_PlatformsServedList[i].Text)
                                                @Html.HiddenFor(m => m.DA_PlatformsServedList[i].Value)
                                                @Html.CheckBoxFor(m => Model.DA_PlatformsServedList[i].Checked, new { @class = "form-check-input", id = "DA_PlatformsServedList_" + @i, data_text = @Model.DA_PlatformsServedList[i].Text })
                                                <label class="form-check-label" for="DA_PlatformsServedList_" @i>@Model.DA_PlatformsServedList[i].Text</label>
                                            }
                                            else
                                            {
                                                @Html.HiddenFor(m => m.DA_PlatformsServedList[i].Text)
                                                @Html.CheckBoxFor(m => Model.DA_PlatformsServedList[i].Checked, new { @class = "form-check-input defence_platforms_other", id = "DA_PlatformsServedList_Other", data_text = @Model.DA_PlatformsServedList[i].Text })
                                                <label class="form-check-label" for="DA_PlatformsServedList_" @i>@Model.DA_PlatformsServedList[i].Text</label>
                                                <div id="defence_platforms_to_other_container" style="display:none">
                                                    @Html.TextBoxFor(model => model.DA_PlatformsServedList[i].Value, new { @class = "form-control", onkeyup = "var start = this.selectionStart; var end = this.selectionEnd; this.value = this.value.replace(/,/g, ''); this.setSelectionRange(start, end);" })
                                                </div>
                                            }
                                        </div>
                                    </div>
                                }
                            }
                        </div>
                    </div>
                </div>
                <div class="row mb-3">
                    <div class="col-lg-3">
                        <label>Are you a supplier to</label>
                    </div>
                    <div class="col-lg-9">
                        <div class="row">
                            @if (Model.SupplierToList != null)
                            {
                                for (int i = 0; i < Model.SupplierToList.Count; i++)
                                {
                                    <div class="col-lg-3 col-md-4">
                                        <div class="form-check mb-3">
                                            @if (Model.SupplierToList[i].Text.ToUpper() != "OTHER")
                                            {
                                                @Html.HiddenFor(m => m.SupplierToList[i].Text)
                                                @Html.HiddenFor(m => m.SupplierToList[i].Value)
                                                @Html.CheckBoxFor(m => Model.SupplierToList[i].Checked, new { @class = "form-check-input", id = "SupplierToList_" + @i, data_text = @Model.SupplierToList[i].Text })
                                                <label class="form-check-label" for="SupplierToList_" @i>@Model.SupplierToList[i].Text</label>
                                            }
                                            else
                                            {
                                                @Html.HiddenFor(m => m.SupplierToList[i].Text)
                                                @Html.CheckBoxFor(m => Model.SupplierToList[i].Checked, new { @class = "form-check-input defence_supplier_to", id = "SupplierToList_Other", data_text = @Model.SupplierToList[i].Text })
                                                <label class="form-check-label" for="SupplierToList_" @i>@Model.SupplierToList[i].Text</label>
                                                <div id="defence_supplier_to_other_container" style="display:none">
                                                    @Html.TextBoxFor(model => model.SupplierToList[i].Value, new { @class = "form-control", onkeyup = "var start = this.selectionStart; var end = this.selectionEnd; this.value = this.value.replace(/,/g, ''); this.setSelectionRange(start, end);" })
                                                </div>
                                            }
                                        </div>
                                    </div>
                                }
                            }
                        </div>
                    </div>
                </div>
            </div>
            <!--defence and aero row-end-->
            <!--civil row-start-->
            <div id="civil_row_container">
            </div>
            <!--civil row-end-->
            <div class="row mb-3">
                <div class="col-lg-3">
                    <label>List your top 5 Clientele</label>
                </div>
                <div class="col-lg-9">
                    <div class="row">
                        <div class="col-lg-6">
                            <div class="form-group">
                                @Html.TextBoxFor(model => model.Clientele1, new { @class = "form-control", id = "ContentPlaceHolder1_top_client_1", placeholder = "", onkeyup = "var start = this.selectionStart; var end = this.selectionEnd; this.value = this.value.replace(/,/g, ''); this.setSelectionRange(start, end);" })
                                @Html.ValidationMessageFor(model => model.Clientele1, "", new { @class = "help-block" }, "p")

                            </div>
                        </div>
                        <div class="col-lg-6">
                            <div class="form-group">
                                @Html.TextBoxFor(model => model.Clientele2, new { @class = "form-control", id = "ContentPlaceHolder1_top_client_2", placeholder = "", onkeyup = "var start = this.selectionStart; var end = this.selectionEnd; this.value = this.value.replace(/,/g, ''); this.setSelectionRange(start, end);" })
                                @Html.ValidationMessageFor(model => model.Clientele2, "", new { @class = "help-block" }, "p")

                            </div>
                        </div>
                        <div class="col-lg-6">
                            <div class="form-group">
                                @Html.TextBoxFor(model => model.Clientele3, new { @class = "form-control", id = "ContentPlaceHolder1_top_client_3", placeholder = "", onkeyup = "var start = this.selectionStart; var end = this.selectionEnd; this.value = this.value.replace(/,/g, ''); this.setSelectionRange(start, end);" })
                                @Html.ValidationMessageFor(model => model.Clientele3, "", new { @class = "help-block" }, "p")

                            </div>
                        </div>
                        <div class="col-lg-6">
                            <div class="form-group">
                                @Html.TextBoxFor(model => model.Clientele4, new { @class = "form-control", id = "ContentPlaceHolder1_top_client_4", placeholder = "", onkeyup = "var start = this.selectionStart; var end = this.selectionEnd; this.value = this.value.replace(/,/g, ''); this.setSelectionRange(start, end);" })
                                @Html.ValidationMessageFor(model => model.Clientele4, "", new { @class = "help-block" }, "p")

                            </div>
                        </div>
                        <div class="col-lg-6">
                            <div class="form-group">
                                @Html.TextBoxFor(model => model.Clientele5, new { @class = "form-control", id = "ContentPlaceHolder1_top_client_5", placeholder = "", onkeyup = "var start = this.selectionStart; var end = this.selectionEnd; this.value = this.value.replace(/,/g, ''); this.setSelectionRange(start, end);" })
                                @Html.ValidationMessageFor(model => model.Clientele5, "", new { @class = "help-block" }, "p")

                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-3">
                    <label>If you are an exporter, please specify top 3 customers & country</label>
                </div>
                <div class="col-lg-9">
                    <div class="row">
                        <div class="col-lg-12">
                            <div class="form-group">
                                @Html.TextBoxFor(model => model.CountryandCustomer1, new { @class = "form-control", id = "ContentPlaceHolder1_customer_and_country1", placeholder = "", onkeyup = "var start = this.selectionStart; var end = this.selectionEnd; this.value = this.value.replace(/,/g, ''); this.setSelectionRange(start, end);" })
                                @Html.ValidationMessageFor(model => model.CountryandCustomer1, "", new { @class = "help-block" }, "p")

                            </div>
                        </div>
                        <div class="col-lg-12">
                            <div class="form-group">
                                @Html.TextBoxFor(model => model.CountryandCustomer2, new { @class = "form-control", id = "ContentPlaceHolder1_customer_and_country2", placeholder = "", onkeyup = "var start = this.selectionStart; var end = this.selectionEnd; this.value = this.value.replace(/,/g, ''); this.setSelectionRange(start, end);" })
                                @Html.ValidationMessageFor(model => model.CountryandCustomer2, "", new { @class = "help-block" }, "p")

                            </div>
                        </div>
                        <div class="col-lg-12">
                            <div class="form-group">
                                @Html.TextBoxFor(model => model.CountryandCustomer3, new { @class = "form-control", id = "ContentPlaceHolder1_customer_and_country3", placeholder = "", onkeyup = "var start = this.selectionStart; var end = this.selectionEnd; this.value = this.value.replace(/,/g, ''); this.setSelectionRange(start, end);" })
                                @Html.ValidationMessageFor(model => model.CountryandCustomer3, "", new { @class = "help-block" }, "p")

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <!--/Section-->
    <!--Section-->
    <section class="bg-white py-5">
        <div class="container">
            <h2 class="mb-3">Commercial Information</h2>
            <div class="row">
                <div class="col-lg-12">
                    <div class="table-responsive">
                        <table class="table table-bordered">
                            <thead>
                            <th>Sales Data</th>
                            <th>Current Financial Year (in INR)</th>
                            <th>Previous FY (in INR)</th>
                            <th>2<sup>nd</sup> Last FY (in INR)</th>
                            </thead>
                            <tbody>
                                <tr>
                                    <td>
                                        <p>Sales value from D& A</p>
                                    </td>
                                    <td>
                                        <div class="form-group">
                                            @Html.TextBoxFor(model => model.SalesValueDandA_FY3, new { @class = "form-control", placeholder = "To be entered", onkeyup = "var start = this.selectionStart; var end = this.selectionEnd; this.value = this.value.replace(/,/g, ''); this.setSelectionRange(start, end);" })
                                            @Html.ValidationMessageFor(model => model.SalesValueDandA_FY3, "", new { @class = "help-block" }, "p")

                                        </div>
                                    </td>
                                    <td>
                                        <div class="form-group">
                                            @Html.TextBoxFor(model => model.SalesValueDandA_FY2, new { @class = "form-control", placeholder = "To be entered", onkeyup = "var start = this.selectionStart; var end = this.selectionEnd; this.value = this.value.replace(/,/g, ''); this.setSelectionRange(start, end);" })
                                            @Html.ValidationMessageFor(model => model.SalesValueDandA_FY2, "", new { @class = "help-block" }, "p")

                                        </div>
                                    </td>
                                    <td>
                                        <div class="form-group">
                                            @Html.TextBoxFor(model => model.SalesValueDandA_FY1, new { @class = "form-control", placeholder = "To be entered", onkeyup = "var start = this.selectionStart; var end = this.selectionEnd; this.value = this.value.replace(/,/g, ''); this.setSelectionRange(start, end);" })
                                            @Html.ValidationMessageFor(model => model.SalesValueDandA_FY1, "", new { @class = "help-block" }, "p")

                                        </div>
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        <p>Sales value from non-D&A</p>
                                    </td>
                                    <td>
                                        <div class="form-group">
                                            @Html.TextBoxFor(model => model.SalesValueNonDandA_FY3, new { @class = "form-control", id = "ContentPlaceHolder1_non_da_sales_incurrent_year", placeholder = "To be entered", onkeyup = "var start = this.selectionStart; var end = this.selectionEnd; this.value = this.value.replace(/,/g, ''); this.setSelectionRange(start, end);" })
                                            @Html.ValidationMessageFor(model => model.SalesValueNonDandA_FY3, "", new { @class = "help-block" }, "p")

                                        </div>
                                    </td>
                                    <td>
                                        <div class="form-group">
                                            @Html.TextBoxFor(model => model.SalesValueNonDandA_FY2, new { @class = "form-control", id = "ContentPlaceHolder1_non_da_sales_fy1", placeholder = "To be entered", onkeyup = "var start = this.selectionStart; var end = this.selectionEnd; this.value = this.value.replace(/,/g, ''); this.setSelectionRange(start, end);" })
                                            @Html.ValidationMessageFor(model => model.SalesValueNonDandA_FY2, "", new { @class = "help-block" }, "p")

                                        </div>
                                    </td>
                                    <td>
                                        <div class="form-group">
                                            @Html.TextBoxFor(model => model.SalesValueNonDandA_FY1, new { @class = "form-control", id = "ContentPlaceHolder1_non_da_sales_fy2", placeholder = "To be entered", onkeyup = "var start = this.selectionStart; var end = this.selectionEnd; this.value = this.value.replace(/,/g, ''); this.setSelectionRange(start, end);" })
                                            @Html.ValidationMessageFor(model => model.SalesValueNonDandA_FY1, "", new { @class = "help-block" }, "p")

                                        </div>
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        <p>Total Annual sales</p>
                                    </td>
                                    <td>
                                        <div class="form-group">
                                            @Html.TextBoxFor(model => model.AnnualSales_FY3, new { @class = "form-control", id = "ContentPlaceHolder1_da_sales_incurrent_year", placeholder = "To be entered", onkeyup = "var start = this.selectionStart; var end = this.selectionEnd; this.value = this.value.replace(/,/g, ''); this.setSelectionRange(start, end);" })
                                            @Html.ValidationMessageFor(model => model.AnnualSales_FY3, "", new { @class = "help-block" }, "p")
                                        </div>
                                    </td>
                                    <td>
                                        <div class="form-group">
                                            @Html.TextBoxFor(model => model.AnnualSales_FY2, new { @class = "form-control", id = "ContentPlaceHolder1_da_sales_fy1", placeholder = "To be entered", onkeyup = "var start = this.selectionStart; var end = this.selectionEnd; this.value = this.value.replace(/,/g, ''); this.setSelectionRange(start, end);" })
                                            @Html.ValidationMessageFor(model => model.AnnualSales_FY2, "", new { @class = "help-block" }, "p")
                                        </div>
                                    </td>
                                    <td>
                                        <div class="form-group">
                                            @Html.TextBoxFor(model => model.AnnualSales_FY1, new { @class = "form-control", id = "ContentPlaceHolder1_da_sales_fy2", placeholder = "To be entered", onkeyup = "var start = this.selectionStart; var end = this.selectionEnd; this.value = this.value.replace(/,/g, ''); this.setSelectionRange(start, end);" })
                                            @Html.ValidationMessageFor(model => model.AnnualSales_FY1, "", new { @class = "help-block" }, "p")
                                        </div>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <!--/Section-->
    <!--Section-->
    <section class="bg-grey py-5">
        <div class="container">
            <h2 class="mb-3">Quality Certification/Special Approvals</h2>
            <div class="row mb-4">
                <div class="col-lg-3">
                    <label>List your Quality certification</label>
                </div>
                <div class="col-lg-9">
                    <div class="row quality_certification">
                        <div class="col-lg-12">
                            <div class="form-group">
                                @Html.TextBoxFor(model => model.QualityCertification1, new { @class = "form-control", id = "ContentPlaceHolder1_quality_certification_1", placeholder = "", onkeyup = "var start = this.selectionStart; var end = this.selectionEnd; this.value = this.value.replace(/,/g, ''); this.setSelectionRange(start, end);" })
                                @Html.ValidationMessageFor(model => model.QualityCertification1, "", new { @class = "help-block" }, "p")

                            </div>
                        </div>
                        <div class="col-lg-12">
                            <div class="form-group">
                                @Html.TextBoxFor(model => model.QualityCertification2, new { @class = "form-control", id = "ContentPlaceHolder1_quality_certification_2", placeholder = "", onkeyup = "var start = this.selectionStart; var end = this.selectionEnd; this.value = this.value.replace(/,/g, ''); this.setSelectionRange(start, end);" })
                                @Html.ValidationMessageFor(model => model.QualityCertification2, "", new { @class = "help-block" }, "p")

                            </div>
                        </div>
                        <div class="col-lg-12">
                            <div class="form-group">
                                @Html.TextBoxFor(model => model.QualityCertification3, new { @class = "form-control", id = "ContentPlaceHolder1_quality_certification_3", placeholder = "", onkeyup = "var start = this.selectionStart; var end = this.selectionEnd; this.value = this.value.replace(/,/g, ''); this.setSelectionRange(start, end);" })
                                @Html.ValidationMessageFor(model => model.QualityCertification3, "", new { @class = "help-block" }, "p")

                            </div>
                        </div>
                        <div class="col-lg-12">
                            <div class="form-group">
                                @Html.TextBoxFor(model => model.QualityCertification4, new { @class = "form-control", id = "ContentPlaceHolder1_quality_certification_4", placeholder = "", onkeyup = "var start = this.selectionStart; var end = this.selectionEnd; this.value = this.value.replace(/,/g, ''); this.setSelectionRange(start, end);" })
                                @Html.ValidationMessageFor(model => model.QualityCertification4, "", new { @class = "help-block" }, "p")

                            </div>
                        </div>
                        <div class="col-lg-12">
                            <div class="form-group">
                                @Html.TextBoxFor(model => model.QualityCertification5, new { @class = "form-control", id = "ContentPlaceHolder1_quality_certification_5", placeholder = "", onkeyup = "var start = this.selectionStart; var end = this.selectionEnd; this.value = this.value.replace(/,/g, ''); this.setSelectionRange(start, end);" })
                                @Html.ValidationMessageFor(model => model.QualityCertification5, "", new { @class = "help-block" }, "p")

                            </div>
                        </div>
                    </div>

                </div>
            </div>
            <div class="row mb-4">
                <div class="col-lg-3">
                    <label>Specify if any other type of certification/special approvals</label>
                </div>
                <div class="col-lg-9">
                    <div class="row other_certification">
                        <div class="col-lg-12">
                            <div class="form-group">
                                @Html.TextBoxFor(model => model.AnyOtherCertification1, new { @class = "form-control", id = "ContentPlaceHolder1_other_certification_1", placeholder = "", onkeyup = "var start = this.selectionStart; var end = this.selectionEnd; this.value = this.value.replace(/,/g, ''); this.setSelectionRange(start, end);" })
                                @Html.ValidationMessageFor(model => model.AnyOtherCertification1, "", new { @class = "help-block" }, "p")

                            </div>
                        </div>
                        <div class="col-lg-12">
                            <div class="form-group">
                                @Html.TextBoxFor(model => model.AnyOtherCertification2, new { @class = "form-control", id = "ContentPlaceHolder1_other_certification_2", placeholder = "", onkeyup = "var start = this.selectionStart; var end = this.selectionEnd; this.value = this.value.replace(/,/g, ''); this.setSelectionRange(start, end);" })
                                @Html.ValidationMessageFor(model => model.AnyOtherCertification2, "", new { @class = "help-block" }, "p")

                            </div>
                        </div>
                        <div class="col-lg-12">
                            <div class="form-group">
                                @Html.TextBoxFor(model => model.AnyOtherCertification3, new { @class = "form-control", id = "ContentPlaceHolder1_other_certification_3", placeholder = "", onkeyup = "var start = this.selectionStart; var end = this.selectionEnd; this.value = this.value.replace(/,/g, ''); this.setSelectionRange(start, end);" })
                                @Html.ValidationMessageFor(model => model.AnyOtherCertification3, "", new { @class = "help-block" }, "p")

                            </div>
                        </div>
                        <div class="col-lg-12">
                            <div class="form-group">
                                @Html.TextBoxFor(model => model.AnyOtherCertification4, new { @class = "form-control", id = "ContentPlaceHolder1_other_certification_4", placeholder = "", onkeyup = "var start = this.selectionStart; var end = this.selectionEnd; this.value = this.value.replace(/,/g, ''); this.setSelectionRange(start, end);" })
                                @Html.ValidationMessageFor(model => model.AnyOtherCertification4, "", new { @class = "help-block" }, "p")

                            </div>
                        </div>
                        <div class="col-lg-12">
                            <div class="form-group">
                                @Html.TextBoxFor(model => model.AnyOtherCertification5, new { @class = "form-control", id = "ContentPlaceHolder1_other_certification_5", placeholder = "", onkeyup = "var start = this.selectionStart; var end = this.selectionEnd; this.value = this.value.replace(/,/g, ''); this.setSelectionRange(start, end);" })
                                @Html.ValidationMessageFor(model => model.AnyOtherCertification5, "", new { @class = "help-block" }, "p")

                            </div>
                        </div>
                    </div>

                </div>
            </div>
        </div>
    </section>

    <!--Section-->
    <section class="bg-white py-5">
        <div class="container">
            <h2 class="mb-3">Supplier Capabilities</h2>
            <div class="row mb-3">
                <div class="col-lg-12">
                    <p class="mb-3 txt-md">Type of business</p>
                </div>
                <div class="col-lg-12">
                    <div class="row">
                        <div class="col-lg-3">
                            <div class="form-check mb-3">
                                @Html.CheckBoxFor(model => model.IsManufacturer, new { id = "ContentPlaceHolder1_business_typefacturer", @class = "form-check-input business_type", data_ref = "manufacturer_container" })
                                <label class="form-check-label" for="ContentPlaceHolder1_business_typefacturer">Manufacturer</label>
                                <div id="manufacturer_container" style="display:none">
                                    @if (Model.allManufacturTypeList != null)
                                    {
                                        @Html.ListBoxFor(x => x.selectedManufacturType, Model.allManufacturTypeList, new { @class = "form-control multiselectallow" })
                                    }
                                    @Html.TextBoxFor(model => model.ManufacturerSpecification, new { @class = "form-control", id = "ContentPlaceHolder1_manufacturer_spec_detail", placeholder = "Specify in detail", onkeyup = "var start = this.selectionStart; var end = this.selectionEnd; this.value = this.value.replace(/,/g, ''); this.setSelectionRange(start, end);" })
                                    @Html.ValidationMessageFor(model => model.ManufacturerSpecification, "", new { @class = "help-block" }, "p")
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-3">
                            <div class="form-check mb-3">
                                @Html.CheckBoxFor(model => model.IsTrader_Distributer_Dealer_Reseller, new { id = "Trader-Distributor-Dealer-Reseller", @class = "form-check-input business_type", data_ref = "trader_detail_container" })
                                <label class="form-check-label" for="Trader-Distributor-Dealer-Reseller">Trader/Distributor/Dealer/Reseller</label>
                                <div id="trader_detail_container" style="display:none">

                                    @if (Model.allTrader_D_DTypeList != null)
                                    {
                                        @Html.ListBoxFor(x => x.selectedTrader_D_DType, Model.allTrader_D_DTypeList, new { @class = "form-control multiselectallow" })
                                    }
                                    @Html.TextBoxFor(model => model.Trade_Distriubtion_Deal_Specifcation, new { @class = "form-control", id = "ContentPlaceHolder1_trader_spec_detail", placeholder = "Specify in detail", onkeyup = "var start = this.selectionStart; var end = this.selectionEnd; this.value = this.value.replace(/,/g, ''); this.setSelectionRange(start, end);" })
                                    @Html.ValidationMessageFor(model => model.Trade_Distriubtion_Deal_Specifcation, "", new { @class = "help-block" }, "p")

                                </div>
                            </div>
                        </div>
                        <div class="col-lg-3">
                            <div class="form-check mb-3">
                                @Html.CheckBoxFor(model => model.IsSpclProcess_TestingLabs, new { id = "ContentPlaceHolder1_business_type", @class = "form-check-input business_type", data_ref = "special_process_detail_container" })

                                <label class="form-check-label" for="Special-Process-Testing-Labs">Special Process/Testing Labs</label>
                                <div id="special_process_detail_container" style="display:none">
                                    @if (Model.allSpclPro_TLTypeList != null)
                                    {
                                        @Html.ListBoxFor(x => x.allSpclPro_TLTypeList, Model.allSpclPro_TLTypeList, new { @class = "form-control multiselectallow" })
                                    }
                                    @Html.TextBoxFor(model => model.SpclProcess_TestLabsSpecification, new { @class = "form-control", id = "ContentPlaceHolder1_special_process_spec_detail", placeholder = "Specify in detail", onkeyup = "var start = this.selectionStart; var end = this.selectionEnd; this.value = this.value.replace(/,/g, ''); this.setSelectionRange(start, end);" })
                                    @Html.ValidationMessageFor(model => model.SpclProcess_TestLabsSpecification, "", new { @class = "help-block" }, "p")

                                </div>
                            </div>
                        </div>
                        <div class="col-lg-3">
                            <div class="form-check mb-3">
                                @Html.CheckBoxFor(model => model.IsEngineeringServices, new { id = "ContentPlaceHolder1_Engineering_Services", @class = "form-check-input business_type", data_ref = "engineering_services_detail_container" })

                                <label class="form-check-label" for="Engineering-Services">Engineering Services</label>
                                <div id="engineering_services_detail_container" style="display:none">
                                    @if (Model.allEnggServicesTypeList != null)
                                    {
                                        @Html.ListBoxFor(x => x.allEnggServicesTypeList, Model.allEnggServicesTypeList, new { @class = "form-control multiselectallow" })
                                    }
                                    @Html.TextBoxFor(model => model.EngineeringServicesSpecification, new { @class = "form-control", id = "ContentPlaceHolder1_engineering_services_spec_detail", placeholder = "Specify in detail", onkeyup = "var start = this.selectionStart; var end = this.selectionEnd; this.value = this.value.replace(/,/g, ''); this.setSelectionRange(start, end);" })
                                    @Html.ValidationMessageFor(model => model.EngineeringServicesSpecification, "", new { @class = "help-block" }, "p")
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row mb-3">
                <div class="col-lg-3">
                    <label>Upload your company profile/brochure/presentation</label>
                </div>
                <div class="col-lg-9">
                    <div class="row">
                        <div class="col-lg-6">
                            <div class="custom-file">
                                @Html.TextBoxFor(model => model.UploadedCompanyProfileDoc, new { type = "file", id = "ContentPlaceHolder1_profile_upload", @class = "custom-file-input",onchange = "ValidateFile(this);" })
                                <label class="custom-file-label" for="ContentPlaceHolder1_profile_upload">Choose file</label>
                                @Html.ValidationMessageFor(model => model.UploadedCompanyProfileDoc, "", new { @class = "help-block" }, "p")
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-3">
                    <label>Specify key facilities<i>*</i></label>
                </div>
                <div class="col-lg-9">
                    <div class="row">
                        <div class="col-lg-12">
                            <div class="form-group">

                                @Html.TextAreaFor(model => model.SpecifykeyFacilities, new { @class = "form-control", id = "ContentPlaceHolder1_key_facilities", rows = "3", required = "required", onkeyup = "var start = this.selectionStart; var end = this.selectionEnd; this.value = this.value.replace(/,/g, ''); this.setSelectionRange(start, end);" })

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <!--/Section-->
    <!--Section-->
    <section class="bg-grey py-5">
        <div class="container">
            <h4 class="mb-3"><b>DECLARATION</b></h4>
            <p class="mb-3">I, hereby, declare that, the entries made by me in the Application Form are complete and true to the best of my knowledge and based on records.</p>
            <p><u><b>Please Note:</b></u></p>
            <p class="mb-3">
                Applying through website or submitting and obtaining an Enrolment number through website does not in any way entitle the applicant for registration in the vendor list.
                Company reserves the right to accept / reject  any enrolments without offering any explanations to the applicants.  No enquiry in any form will be entertained for follow up of registration of application.
            </p>
            <div class="row mb-4">
                <div class="col-lg-6">
                    <div class="form-check">

                        <input name="defaultcheck" type="checkbox" id="ContentPlaceHolder1_agreechk" class="form-check-input" value="agree" data-error="Please Agree" required="" />
                        <label class="form-check-label" for="agree">I Agree</label>
                    </div>
                </div>
                <div class="col-lg-3 ml-auto">
                    <div class="form-group">
                        @Html.TextBoxFor(model => model.Place, new { @class = "form-control", id = "ContentPlaceHolder1_place", placeholder = "Place",required = "required", onkeyup = "var start = this.selectionStart; var end = this.selectionEnd; this.value = this.value.replace(/,/g, ''); this.setSelectionRange(start, end);" })
                        @Html.ValidationMessageFor(model => model.Place, "", new { @class = "help-block" }, "p")

                    </div>
                </div>
                <div class="col-lg-3 ml-auto">
                    <div class="form-group">
                        @Html.HiddenFor(m => m.FormDate, new { @Value = System.DateTime.Now.Date })
                        <input class="form-control" disabled="disabled" id="ContentPlaceHolder1_date" name="SubmitOnDate" placeholder="DD/MM/YYYY" type="text" value="@DateTime.Now.ToString("dd-MMM-yyyy")">
                        @Html.ValidationMessageFor(model => model.SubmitOnDate, "", new { @class = "help-block" }, "p")
                    </div>
                </div>
            </div>
            <div class="form-group ml-4">
                <p class="txt-orange" id="docErrorMessage">@ViewBag.Message</p>
            </div>
            <div class="row mt-3">
                <div class="col-lg-12 text-center">
                    <div id="recaptcha1"></div>                    
                </div>
                    @Html.HiddenFor(model=>model.reResponse,new { id="reResponse"})
                    @Html.ValidationMessageFor(model => model.reResponse, "", new { @class = "help-block" }, "p")
            </div>
            <div class="row mt-3">
                <div class="col-lg-12 text-center">
                    <button type="submit" name="SubmitApplication" value="submit" class="btn btn-gradient" id="btnsubmits">Submit</button>
                </div>
            </div>
        </div>
    </section>
}
