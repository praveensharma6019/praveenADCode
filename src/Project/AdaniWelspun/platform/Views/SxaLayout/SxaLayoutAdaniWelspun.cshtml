﻿@using System.Web.Mvc.Html
@using Sitecore.Mvc
@using Sitecore.XA.Foundation.MarkupDecorator.Extensions
@using Sitecore.XA.Foundation.SitecoreExtensions.Extensions
@using Sitecore.XA.Foundation.Grid.Extensions
@using Sitecore.XA.Foundation.Theming.Bundler
@using Sitecore.XA.Foundation.Theming.Models
@using Sitecore.XA.Foundation.Theming.Services
@using Microsoft.Extensions.DependencyInjection
@using Sitecore.DependencyInjection

@model Sitecore.Mvc.Presentation.RenderingModel

@{
    AssetLinks assetLinks = AssetLinksGenerator.GenerateLinks(new ThemesProvider());
    HTMLIncludes includes = ServiceLocator.ServiceProvider.GetService<IHTMLIncludesService>().GetHTMLIncludes();
}

<!DOCTYPE html>

<html class="no-js" lang="@Model.Item.Language.Name">
<!--<![endif]-->
<head>
    <title>@Html.Sitecore().Field("Title", new { DisableWebEdit = true })</title>
    <meta charset="utf-8">
    <meta name="Referrer-Policy" value="no-referrer | same-origin" />
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta http-equiv="Content-Security-Policy" content="default-src https: 'unsafe-eval' 'unsafe-inline'; object-src 'none'; img-src * data:; media-src * data:;">

    @foreach (string style in assetLinks.Styles)
    {
        @Html.Raw(style)
    }

    @foreach (var include in includes.Head)
    {
        @Html.Raw(include.HTML)
    }

    @Html.Sxa().VisitorIdentification()
    @Html.Sxa().Placeholder("head")
</head>
<body @Html.Sxa().Body().Decorate()>

    <div class="main-wrapper">
        @Html.Sitecore().Placeholder("body-top")
        @foreach (var include in includes.BodyTop)
        {
            @Html.Raw(include.HTML)
        }
        @Html.Sxa().GridBody()
        @Html.Sitecore().Placeholder("body-bottom")
        @foreach (var include in includes.BodyBottom)
        {
            @Html.Raw(include.HTML)
        }
        @foreach (string include in assetLinks.Scripts)
        {
            @Html.Raw(include)
        }
    </div>
    <!-- /#wrapper -->
</body>
</html>