@using Sitecore.Foundation.Dictionary.Extensions
@using Sitecore.Foundation.SitecoreExtensions.Extensions
@using Sitecore.Mvc.Configuration
@using Sitecore.Realty.Website
@model Sitecore.Realty.Website.Model.LeadGenerationModel
@{

}

<div class="pageContent">
    <div class="container">
        @using (Html.BeginForm("Logout", "Realty", FormMethod.Post))
        {
            <div class="col-12 p-0 pb-3">
                <div class="float-right"><button type="submit" class="btn btn-primary">@Html.Sitecore().Dictionary("Realty/UserLogin/Logout", "Logout")</button></div>
                <div class="clearfix"></div>
            </div>
        }
        @using (Html.BeginRouteForm(MvcSettings.SitecoreRouteName, FormMethod.Post, new { id = "LeadGeneration1", enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            @Html.AddUniqueFormId()
            @Html.ValidationSummary(true)

            <div class="panel">
                @*@if (!string.IsNullOrEmpty(Model.ReturnViewMessage))
        {
            <p class="col-md-7">
                @Model.ReturnViewMessage
            </p>
        }*@
                <h3>Lead Creation form</h3>
                <div class="col-lg-12 col-md-6" id="errormsgs" style="color:red;">
                    <span id="txtmessage"></span>
                </div>
                <p class="pb-md-3 float-sm-right">fields marked <span class="required">*</span> are mandatory</p>
                <div class="clearfix"></div>
                <div class="row">
                    <div class="col-md-6 col-lg-4">
                        <div class="form-group">
                            <label for="" class="inputLabel col-form-label">
                                Assignment City
                                <span class="required">*</span>
                            </label>
                            <div class="inputField">
                                @Html.DropDownListFor(x => x.SelectedAssignmentCity, Model.AssignmentCity, optionLabel: "--Select--", htmlAttributes: new { @class = "form-control reset-control", id = "drpstate", required = "required" })
                                @Html.ValidationMessageFor(x => x.SelectedAssignmentCity, "", new { @class = "help-block txt-orange" }, "p")
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6 col-lg-4">
                        <div class="form-group">
                            <label for="" class="inputLabel col-form-label">
                                Lead Record Type
                                <span class="required">*</span>
                            </label>
                            <div class="inputField">
                                @Html.DropDownListFor(x => x.SelectedLeadRecordType, Model.LeadRecordType, htmlAttributes: new { @class = "form-control reset-control", id = "drpstate", required = "required" })
                                @Html.ValidationMessageFor(x => x.SelectedLeadRecordType, "", new { @class = "help-block txt-orange" }, "p")
                            </div>
                        </div>
                    </div>
                </div>
                <hr>
                <h4 style="padding-bottom:5px;">Personal Details</h4>
                <div class="row">
                    <div class="col-md-4 col-lg-4">
                        <div class="form-group">
                            <label for="" class="inputLabel col-form-label">
                                First Name
                                <span class="required">*</span>
                            </label>
                            <div class="inputField">
                                @Html.TextBoxFor(x => x.FirstName, new { @class = "form-control reset-control", required = "required" })
                                @Html.ValidationMessageFor(x => x.FirstName, "", new { @class = "help-block txt-orange" }, "p")
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4 col-lg-4">
                        <div class="form-group">
                            <label for="" class="inputLabel col-form-label">
                                Last Name
                                <span class="required">*</span>
                            </label>
                            <div class="inputField">
                                @Html.TextBoxFor(x => x.LastName, new { @class = "form-control reset-control", required = "required" })
                                @Html.ValidationMessageFor(x => x.LastName, "", new { @class = "help-block txt-orange" }, "p")
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4 col-lg-4">
                        <div class="form-group">
                            <label for="" class="inputLabel col-form-label">
                                Gender
                                <span class="required">*</span>
                            </label>
                            <div class="inputField">
                                @Html.DropDownListFor(x => x.SelectedGender, Model.LeadGender, optionLabel: "--Select--", htmlAttributes: new { @class = "form-control reset-control", id = "drpstate", required = "required" })
                                @Html.ValidationMessageFor(x => x.SelectedGender, "", new { @class = "help-block txt-orange" }, "p")
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-4 col-lg-4">
                        <div class="form-group">
                            <label for="" class="inputLabel col-form-label">
                                Mobile
                                <span class="required">*</span>
                            </label>
                            <div class="inputField">
                                @Html.TextBoxFor(x => x.Mobile, new { @type = "number", @class = "form-control reset-control", required = "required" })
                                @Html.ValidationMessageFor(x => x.Mobile, "", new { @class = "help-block txt-orange" }, "p")
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4 col-lg-4">
                        <div class="form-group">
                            <label for="" class="inputLabel col-form-label">
                                Email
                                <span class="required">*</span>
                            </label>
                            <div class="inputField">
                                @Html.TextBoxFor(x => x.Email, new { @class = "form-control reset-control", required = "required" })
                                @Html.ValidationMessageFor(x => x.Email, "", new { @class = "help-block txt-orange" }, "p")
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6 col-lg-4">
                        <div class="form-group">
                            <label for="" class="inputLabel col-form-label">
                                Profession
                                <span class="required">*</span>
                            </label>
                            <div class="inputField">
                                @Html.TextBoxFor(x => x.Profession, new { @class = "form-control reset-control", required = "required" })
                                @Html.ValidationMessageFor(x => x.Profession, "", new { @class = "help-block txt-orange" }, "p")
                            </div>
                        </div>
                    </div>
                </div>
                <hr>
                <h4 style="padding-bottom:5px;">Address Info</h4>
                <div class="row">
                    <div class="col-md-4 col-lg-4">
                        <div class="form-group">
                            <label for="" class="inputLabel col-form-label">
                                Country
                                <span class="required">*</span>
                            </label>
                            <div class="inputField">
                                @Html.DropDownListFor(x => x.CountryCode, Model.CountryList, optionLabel: "--Select--", htmlAttributes: new { @class = "form-control reset-control", id = "drpstate", required = "required" })
                                @Html.ValidationMessageFor(x => x.CountryCode, "", new { @class = "help-block txt-orange" }, "p")
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4 col-lg-4">
                        <div class="form-group">
                            <label for="" class="inputLabel col-form-label">
                                State
                                <span class="required">*</span>
                            </label>
                            <div class="inputField">
                                @Html.TextBoxFor(x => x.StateCode, new { @class = "form-control reset-control", required = "required" })
                                @Html.ValidationMessageFor(x => x.StateCode, "", new { @class = "help-block txt-orange" }, "p")
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4 col-lg-4">
                        <div class="form-group">
                            <label for="" class="inputLabel col-form-label">
                                City
                                <span class="required">*</span>
                            </label>
                            <div class="inputField">
                                @Html.TextBoxFor(x => x.City, new { @class = "form-control reset-control", required = "required" })
                                @Html.ValidationMessageFor(x => x.City, "", new { @class = "help-block txt-orange" }, "p")
                            </div>
                        </div>
                    </div>
                </div>
                <hr>
                <h4 style="padding-bottom:5px;">Project Details</h4>
                <div class="row">
                    <div class="col-md-6 col-lg-4">
                        <div class="form-group">
                            <label for="" class="inputLabel col-form-label">
                                Project Name
                                <span class="required">*</span>
                            </label>
                            <div class="inputField">
                                @Html.DropDownListFor(x => x.SelectedProjectName, Model.ProjectList, optionLabel: "--Select--", htmlAttributes: new { @class = "form-control reset-control", id = "drpstate", required = "required" })
                                @Html.ValidationMessageFor(x => x.ProjectList, "", new { @class = "help-block txt-orange" }, "p")
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6 col-lg-4">
                        <div class="form-group">
                            <label for="" class="inputLabel col-form-label">
                                Budget
                                <span class="required">*</span>
                            </label>
                            <div class="inputField">
                                @Html.TextBoxFor(x => x.Budget, new { @type = "number", @class = "form-control reset-control", required = "required" })
                                @Html.ValidationMessageFor(x => x.Budget, "", new { @class = "help-block txt-orange" }, "p")
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6 col-lg-4">
                        <div class="form-group">
                            <label for="" class="inputLabel col-form-label">
                                Reason for Purchase
                                <span class="required">*</span>
                            </label>
                            <div class="inputField">
                                @Html.DropDownListFor(x => x.SelectedReasonforPurchase, Model.ReasonforPurchase, optionLabel: "--Select--", htmlAttributes: new { @class = "form-control reset-control", id = "drpstate", required = "required" })
                                @Html.ValidationMessageFor(x => x.SelectedReasonforPurchase, "", new { @class = "help-block txt-orange" }, "p")
                            </div>
                        </div>
                    </div>

                </div>

                <div class="row">
                    <div class="col-md-6 col-lg-4">
                        <div class="form-group">
                            <label for="" class="inputLabel col-form-label">
                                Lead Source
                                <span class="required">*</span>
                            </label>
                            <div class="inputField">
                                @Html.DropDownListFor(x => x.SelectedLeadSource, Model.LeadSource, optionLabel: "--Select--", htmlAttributes: new { @class = "form-control reset-control", id = "drpstate", required = "required" })
                                @Html.ValidationMessageFor(x => x.SelectedLeadSource, "", new { @class = "help-block txt-orange" }, "p")
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6 col-lg-4">
                        <div class="form-group">
                            <label for="" class="inputLabel col-form-label">
                                Lead Sub Source
                                <span class="required"></span>
                            </label>
                            <div class="inputField">
                                @Html.TextBoxFor(x => x.LeadSubSource, new { @class = "form-control reset-control" })
                                @Html.ValidationMessageFor(x => x.LeadSubSource, "", new { @class = "help-block txt-orange" }, "p")
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6 col-lg-4">
                        <div class="form-group">
                            <label for="" class="inputLabel col-form-label">
                                Property Stage
                                <span class="required">*</span>
                            </label>
                            <div class="inputField">
                                @Html.DropDownListFor(x => x.SelectedPropertyStage, Model.PropertyStage, optionLabel: "--Select--", htmlAttributes: new { @class = "form-control reset-control", id = "drpstate", required = "required" })
                                @Html.ValidationMessageFor(x => x.SelectedPropertyStage, "", new { @class = "help-block txt-orange" }, "p")
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6 col-lg-4">
                        <div class="form-group">
                            <label for="" class="inputLabel col-form-label">
                                Lead Status
                                <span class="required">*</span>
                            </label>
                            <div class="inputField">
                                @Html.DropDownListFor(x => x.SelectedLeadStatus, Model.LeadStatus, optionLabel: "--Select--", htmlAttributes: new { @class = "form-control reset-control", id = "drpstate", required = "required" })
                                @Html.ValidationMessageFor(x => x.SelectedLeadStatus, "", new { @class = "help-block txt-orange" }, "p")
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6 col-lg-4">
                        <div class="form-group">
                            <label for="" class="inputLabel col-form-label">
                                Lead Sub Status
                                <span class="required">*</span>
                            </label>
                            <div class="inputField">
                                @Html.DropDownListFor(x => x.SelectedLeadSubStatus, Model.LeadSubStatus, optionLabel: "--Select--", htmlAttributes: new { @class = "form-control reset-control", id = "drpstate", required = "required" })
                                @Html.ValidationMessageFor(x => x.SelectedLeadSubStatus, "", new { @class = "help-block txt-orange" }, "p")
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6 col-lg-4">
                        <div class="form-group">
                            <label for="" class="inputLabel col-form-label">
                                Lead Lost Reasons
                                <span class="required"></span>
                            </label>
                            <div class="inputField">
                                @Html.TextBoxFor(x => x.LeadLostReasons, new { @class = "form-control reset-control" })
                                @Html.ValidationMessageFor(x => x.LeadLostReasons, "", new { @class = "help-block txt-orange" }, "p")
                            </div>
                        </div>
                    </div>
                </div>


                <div class="row">
                    <div class="col-md-6 col-lg-4">
                        <div class="form-group">
                            <label for="" class="inputLabel col-form-label">
                                Configuration
                                <span class="required">*</span>
                            </label>
                            <div class="inputField">
                                @Html.TextBoxFor(x => x.Configuration, new { @class = "form-control reset-control", required = "required" })
                                @Html.ValidationMessageFor(x => x.Configuration, "", new { @class = "help-block txt-orange" }, "p")
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6 col-lg-4">
                        <div class="form-group">
                            <label for="" class="inputLabel col-form-label">
                                Pre-Sales Agent
                                <span class="required">*</span>
                            </label>
                            <div class="inputField">
                                @Html.TextBoxFor(x => x.PreSalesAgent, new { @class = "form-control reset-control", required = "required" })
                                @Html.ValidationMessageFor(x => x.PreSalesAgent, "", new { @class = "help-block txt-orange" }, "p")
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6 col-lg-4">
                        <div class="form-group">
                            <label for="" class="inputLabel col-form-label">
                                Inbound Call
                                <span class="required"></span>
                            </label>
                            <div class="inputField">
                                @Html.TextBoxFor(x => x.InboundCall, new { @class = "form-control reset-control" })
                                @Html.ValidationMessageFor(x => x.InboundCall, "", new { @class = "help-block txt-orange" }, "p")
                            </div>
                        </div>
                    </div>
                </div>


                <div class="row">
                    <div class="col-md-6 col-lg-4">

                        <div class="form-group">
                            <label><span><br></span>Schedule a follow up<span class="txt-red">*</span></label>
                            <div class="input-group date mb-3">
                                @Html.TextBoxFor(x => x.ScheduledFollowUp, new { @class = "form-control datetimepicker", required = "required" })
                                <div class="input-group-prepend">
                                    <span class="input-group-text" id="basic-addon1"><i class="fa fa-calendar-alt"></i></span>
                                </div>
                            </div>
                            @Html.ValidationMessageFor(x => x.ScheduledFollowUp, "", new { @class = "help-block" }, "p")
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12 col-lg-12">
                        <div class="form-group">
                            <label for="" class="inputLabel col-form-label">
                                Remarks
                                <span class="required">*</span>
                            </label>
                            <div class="inputField">
                                @Html.TextAreaFor(x => x.Remarks, new { @class = "form-control reset-control", required = "required" })
                                @Html.ValidationMessageFor(x => x.Remarks, "", new { @class = "help-block txt-orange" }, "p")
                            </div>
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="">
                        <button id="btnSubmit" type="submit" class="btn btn-primary">Submit</button>
                    </div>
                </div>
            </div>

        }
    </div>
</div>






