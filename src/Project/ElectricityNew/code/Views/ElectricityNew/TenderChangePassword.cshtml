@using Sitecore.Foundation.Dictionary.Extensions
@using Sitecore.Foundation.SitecoreExtensions.Extensions
@using Sitecore.Mvc.Configuration
@model Sitecore.ElectricityNew.Website.Model.Tender

<div class="tenders-detail">
    <div class="row">
        <div class="col l6 s12 offset-l3">
            @if (!string.IsNullOrEmpty(ViewBag.Message))
            {

                <input id="message" type="hidden" value="@ViewBag.Message" />

                <div id="tenderDetailstabone" class="modal modal-alert modal-success">
                    <header class="modal-header">
                        <h4><i class="i-tick"></i></h4>
                        <span class="icon-holder waves-effect waves-light modal-close close"><i class="i-cross hide-notification"></i></span>
                    </header>

                    <div class="modal-content">
                        @if (!string.IsNullOrEmpty(ViewBag.Message))
                        {
                            <p>@ViewBag.Message</p>
                        }
                    </div>
                </div>
            }

            <section class="section-container">

                <h1>@Html.Sitecore().Dictionary("Electricity/Tender/Change Password Label", "Change Password")</h1>

                <div class="card-with-form login-wrap">
                    <div class="card-body">
                        @using (Html.BeginRouteForm(MvcSettings.SitecoreRouteName, FormMethod.Post, new { id = "frmchangepwd", @class = "form-signin" }))
                        {
                            @Html.AddUniqueFormId()
                            <form class="form-field" role="form" autocomplete="off">
                                <div class="input-field custom input-has-icon">
                                    @Html.PasswordFor(x => x.OldPassword, new { @class = "form-control reset-control", @autocomplete = "off", id = "OldPassword", required = "required" })
                                    <label class="active" for="inputPasswordOld">Old Password</label>
                                    <div class="input-icon">
                                        <span class="icon-holder waves-effect waves-light show-pass">
                                            <i class="vi-show-password"></i>
                                            <i class="vi-hide-password"></i>
                                        </span>
                                    </div>
                                    @Html.ValidationMessageFor(x => x.OldPassword, "", new { @class = "help-block" }, "p")
                                    <span class="field-validation-error" id="OldPassworderror" style="display:none;"></span>
                                </div>

                                <div class="input-field custom input-has-icon">
                                    @Html.PasswordFor(x => x.Password, new { @class = "form-control reset-control", @autocomplete = "off", id = "NewPassword", required = "required" })
                                    <label class="active" for="inputPasswordNew">New Password</label>
                                    <div class="input-icon">
                                        <span class="icon-holder waves-effect waves-light show-pass">
                                            <i class="vi-show-password"></i>
                                            <i class="vi-hide-password"></i>
                                        </span>
                                    </div>
                                    @Html.ValidationMessageFor(x => x.Password, "", new { @class = "help-block" }, "p")
                                    <span class="field-validation-error" id="Passworderror" style="display:none;"></span>
                                </div>

                                <div class="input-field custom input-has-icon">
                                    @Html.PasswordFor(x => x.ConfirmPassword, new { @class = "form-control reset-control", @autocomplete = "off", id = "ConfirmPassword", required = "required" })
                                    <label class="active" for="inputPasswordNew">Confirm Password</label>
                                    <div class="input-icon">
                                        <span class="icon-holder waves-effect waves-light show-pass">
                                            <i class="vi-show-password"></i>
                                            <i class="vi-hide-password"></i>
                                        </span>
                                    </div>
                                    @Html.ValidationMessageFor(x => x.ConfirmPassword, "", new { @class = "help-block" }, "p")
                                    <span class="field-validation-error" id="ConfirmPassworderror" style="display:none;"></span>
                                </div>
                                <div class="btn-group">
                                    <a href="/TenderDetails" class="btn-flat">Reset</a>
                                    <input type="submit" class="btn btn-primary" name="changePassword" value="Submit" id="btnsubmitchangepwd" />
                                </div>
                            </form>
                        }
                    </div>
                </div>
            </section>
        </div>
    </div>
</div>

<div id="message_modal" class="modal fade show" role="dialog" style="display: none; padding-right: 17px;" data-id="">


</div>
</div>
<script src="/scripts/electricitynew/TenderRevamp.js"></script>
<script src="/scripts/ElectricityNew/CommanSitecoreSettings.js"></script>