@using Sitecore.Foundation.Dictionary.Extensions
@using Sitecore.Foundation.SitecoreExtensions.Extensions
@using Sitecore.Mvc.Configuration
@model Sitecore.Electricity.Website.Model.Login

<div class="pageContent">
    <div class="container">
        <!-- Section -->
        <div class="pb-3">
            <div class="row">
                <div class="col-lg-5 mr-auto ml-auto">
                    <div class="card card-outline-secondary">
                        <div class="card-header">
                            <h3 class="mb-0">@Html.Sitecore().Dictionary("Electricity/Tender/SignIn", "Sign In")</h3>
                        </div>
                        <div class="card-body">
                            @using (Html.BeginRouteForm(MvcSettings.SitecoreRouteName, FormMethod.Post, new { @class = "form-signin" }))
                            {
                                @Html.AddUniqueFormId()
                                @Html.AntiForgeryToken()
                                @Html.ValidationSummary(true)
                                <div class="form-group">
                                    <label for="inputPasswordOld">@Html.Sitecore().Dictionary("/Electricity/Tender/UserName", "Username or Email")</label>
                                    @Html.TextBoxFor(x => x.LoginName, new { @class = "form-control", id = "LoginName", @autocomplete = "off", required = "required" })
                                    @Html.ValidationMessageFor(x => x.LoginName, "", new { @class = "help-block" }, "p")
                                </div>
                                <div class="form-group">
                                    <label for="inputPasswordNew">@Html.Sitecore().Dictionary("/Electricity/Tender/Passoword", "Password")</label>
                                    @Html.PasswordFor(x => x.Password, new { @class = "form-control", id = "Password", @autocomplete = "off", required = "required" })
                                    @Html.ValidationMessageFor(x => x.Password, "", new { @class = "help-block" }, "p")
                                </div>
                                <div class="bg-white @Html.ValidationErrorFor(x => x.Captcha, "has-error")">
                                    <div class="row captcha_box pt-3">
                                        <label for="" class="">@Html.Sitecore().Dictionary("/Common/Captcha", "Captcha") <span class="required">*</span></label>
                                    </div>
                                    <div class="g-recaptcha" data-sitekey="6LdYFWgUAAAAALdZf_sC8BRN2uLPzcsxb2p192rf"></div>
                                    @Html.ValidationMessageFor(x => x.Captcha, "", new { @id = "captchaPError", @class = "help-block" }, "p")
                                </div>
                                <div class="form-group">
                                    <button type="submit" class="btn btn-primary">@Html.Sitecore().Dictionary("Electricity/Tender/Login", "Login")</button>
                                    <button type="button" class="btn btn-secondary">@Html.Sitecore().Dictionary("Electricity/Tender/Cancel", "Cancel")</button>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- /Section -->
    </div>
</div>


<script src="@Html.Sitecore().Dictionary("/Common/CaptchaURL", "https://www.google.com/recaptcha/api.js")"></script>

