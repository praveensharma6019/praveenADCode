@using Sitecore.Foundation.Dictionary.Extensions
@using Sitecore.Foundation.SitecoreExtensions.Extensions
@using Sitecore.Mvc.Configuration
@using Sitecore.Electricity.Website.Model;
@model Sitecore.Electricity.Website.Model.ITSRFormCreateModel
@{
    var item = Sitecore.Context.Database.GetItem(Templates.ITSR.ITSRBidderFormSubmission);
    var itemListing = Sitecore.Context.Database.GetItem(Templates.ITSR.ITSRBidderFormListing);
    string bidderlink = "https://preprod.adanielectricity.com" + item.Url();
}
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
<script src="https://ajax.aspnetcdn.com/ajax/jquery.validate/1.9/jquery.validate.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/3.2.10/jquery.validate.unobtrusive.min.js"></script>

<div class="pageContent">
    <div class="container">
        @using (Html.BeginForm("Logout", "ITSRForm", FormMethod.Post))
        {
            <div class="col-12 p-0 pb-3">
                <div class="float-right"><button type="submit" class="btn btn-primary">@Html.Sitecore().Dictionary("Electricity/ITSR/Logout", "Logout")</button></div>
                <div class="clearfix"></div>
            </div>
        }
        <!-- Section -->
        <div class="pb-3">
            <div>
                <div class="mr-auto ml-auto">
                    <div class="card card-outline-secondary">
                        <div class="card-header">
                            <h3 class="mb-0">@Html.Sitecore().Dictionary("Electricity/ITSR/Create form Label", "Create Form")</h3>
                        </div>
                        <div class="card-body">
                            @if (!Model.IsFormCreated)
                            {
                                using (Html.BeginRouteForm(MvcSettings.SitecoreRouteName, FormMethod.Post, new { id = "frmCreate", @class = "form-signin", @enctype = "multipart/form-data" }))
                                {
                                    @Html.HiddenFor(m => m.FormId)
                                    @Html.AddUniqueFormId()
                                    @Html.AntiForgeryToken()
                                    @Html.ValidationSummary(true)
                                    <div class="row">
                                        <div class="col-sm-6">
                                            <div class="row form-group pt-md-2">
                                                <label class="col-sm-5 col-md-5 col-form-label">
                                                    @Html.Label("Title of proposal", htmlAttributes: new { @class = "control-label" })
                                                </label>
                                                <div class="col-sm-7 col-md-7">
                                                    @Html.TextAreaFor(model => model.Title, new { @class = "form-control", required = "required" })
                                                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-sm-6">
                                            <div class="row form-group pt-md-2">
                                                <label class="col-sm-5 col-md-5 col-form-label">
                                                    @Html.Label("Proposal No", htmlAttributes: new { @class = "control-label" })
                                                </label>
                                                <div class="col-sm-7 col-md-7">
                                                    @Html.TextBoxFor(model => model.TenderNo, new { @class = "form-control", required = "required", @readonly = "readonly" })
                                                    @Html.ValidationMessageFor(model => model.TenderNo, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-sm-6">
                                            <div class="row form-group pt-md-2">
                                                <label class="col-sm-5 col-md-5 col-form-label">
                                                    @Html.Label("Start Date", htmlAttributes: new { @class = "control-label d-block" })
                                                    <span class="small">(DD/MM/YYYY)</span>
                                                </label>
                                                <div class="col-sm-7 col-md-7">
                                                    @Html.TextBoxFor(x => x.StartDate, new { @class = "form-control reset-control", id = "datetimepickerBidderFormStartDate", required = "required" })
                                                    @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-sm-6">
                                            <div class="row form-group pt-md-2">
                                                <label class="col-sm-5 col-md-5 col-form-label">
                                                    @Html.Label("End Date", htmlAttributes: new { @class = "control-label d-block" })
                                                    <span class="small">(DD/MM/YYYY)</span>
                                                </label>
                                                <div class="col-sm-7 col-md-7">
                                                    @Html.TextBoxFor(x => x.EndDate, new { @class = "form-control reset-control", id = "datetimepickerBidderFormEndDate", required = "required" })
                                                    @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col-sm-6">
                                            <div class="row form-group pt-md-2">
                                                <label class="col-sm-5 col-md-5 col-form-label">
                                                    @Html.Label("Proposal Owner Name", htmlAttributes: new { @class = "control-label" })
                                                </label>
                                                <div class="col-sm-7 col-md-7">
                                                    @Html.TextBoxFor(model => model.ProposalOwnerName, new { @class = "form-control", required = "required" })
                                                    @Html.ValidationMessageFor(model => model.ProposalOwnerName, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-sm-6">
                                            <div class="row form-group pt-md-2">
                                                <label class="col-sm-5 col-md-5 col-form-label">
                                                    @Html.Label("Proposal Owner Email", htmlAttributes: new { @class = "control-label" })
                                                </label>
                                                <div class="col-sm-7 col-md-7">
                                                    @Html.TextBoxFor(model => model.ProposalOwnerEmailId, new { @class = "form-control", required = "required" })
                                                    @Html.ValidationMessageFor(model => model.ProposalOwnerEmailId, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-sm-6">
                                            <div class="row form-group pt-md-2">
                                                <label class="col-sm-5 col-md-5 col-form-label">
                                                    @Html.Label("Buyer Name", htmlAttributes: new { @class = "control-label" })
                                                </label>
                                                <div class="col-sm-7 col-md-7">
                                                    @Html.TextBoxFor(model => model.BuyerOwnerName, new { @class = "form-control", required = "required" })
                                                    @Html.ValidationMessageFor(model => model.BuyerOwnerName, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-sm-6">
                                            <div class="row form-group pt-md-2">
                                                <label class="col-sm-5 col-md-5 col-form-label">
                                                    @Html.Label("Buyer Email", htmlAttributes: new { @class = "control-label" })
                                                </label>
                                                <div class="col-sm-7 col-md-7">
                                                    @Html.TextBoxFor(model => model.BuyerOwnerEmailId, new { @class = "form-control", required = "required" })
                                                    @Html.ValidationMessageFor(model => model.BuyerOwnerEmailId, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="panel bid_form">
                                        <p class="text-note mb-3">Note: Fields marked with (<span class="required"> * </span>) are Mandatary question.</p>
                                        <div class="row">
                                            <div class="col-md-12">
                                                <h5 class="mb-3"><span class="h5-number">1.</span>@Html.Sitecore().Dictionary("/ITSR/Questions/Question1Text", "Bidder shall read Bid Qualifying Requirement (QR) document carefully and do upload the relevant supporting documents.")</h5>
                                                <div class="row pl-5">
                                                    <div class="col-lg-4 col-md-6">
                                                        <div class="form-group">
                                                            <label>@Html.Sitecore().Dictionary("/ITSR/Questions/Question1Option1", "Past experience list") <span class="required">*</span></label>
                                                            @Html.TextBoxFor(model => model.PastExperienceList, "", new { @type = "file", @multiple = "multiple", @onchange = "Validate(this);",  @accept = ".jpg,.jpeg,.png,.pdf",@disabled="disabled" })
                                                        </div>
                                                    </div>
                                                    <div class="col-lg-4 col-md-6">
                                                        <div class="form-group">
                                                            <label>@Html.Sitecore().Dictionary("/ITSR/Questions/Question1Option2", "Performance Certificate") </label>
                                                            @Html.TextBoxFor(model => model.PerformanceCertificate, "", new { @type = "file", @onchange = "Validate(this);",  @accept = ".jpg,.jpeg,.png,.pdf",@disabled="disabled" })
                                                        </div>
                                                    </div>
                                                    <div class="col-lg-4 col-md-6">
                                                        <div class="form-group">
                                                            <label>Past Orders</label>
                                                            @Html.TextBoxFor(model => model.PastOrders, "", new { @type = "file", @multiple = "multiple",  @onchange = "Validate(this);", @accept = ".jpg,.jpeg,.png,.pdf",@disabled="disabled" })
                                                        </div>
                                                    </div>
                                                    <div class="col-lg-12">
                                                        <div class="form-group">
                                                            <p>Deviation if any, against clauses specified in Qualifying requirement (QR) </p>
                                                            <div class="form-check form-check-inline">
                                                                @Html.RadioButtonFor(model => model.Deviation, "Yes", new { id = "DeviationYes", @class = "form-check-input", @checked = "checked", @disabled="disabled" })
                                                                <label class="form-check-label" for="DeviationYes">Yes</label>
                                                            </div>
                                                            <div class="form-check form-check-inline">
                                                                @Html.RadioButtonFor(model => model.Deviation, "No", new { id = "DeviationNo", @class = "form-check-input",@disabled="disabled" })
                                                                <label class="form-check-label" for="DeviationNo">No</label>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="row">

                                                    <div class="col-lg-12"><hr></div>
                                                    <div class="col-lg-12">
                                                        <div class="form-group">
                                                            <h5 class="mb-3"><span class="h5-number">2.</span>Acceptance of Bill of Quantity (BoQ), Scope of Work and Specifications (Bidder shall read all bid documents carefully</h5>
                                                            <div class="pl-5">
                                                                <div class="form-check form-check-inline">
                                                                    @Html.RadioButtonFor(model => model.AcceptanceOfBillOfQuantity, "Accepted ", new { id = "AcceptanceOfBillAccepted", @class = "form-check-input", @checked = "checked",@disabled="disabled" })
                                                                    <label class="form-check-label" for="DeviationYes">Accepted</label>
                                                                </div>
                                                                <div class="form-check form-check-inline">
                                                                    @Html.RadioButtonFor(model => model.AcceptanceOfBillOfQuantity, "Deviation ", new { id = "AcceptanceOfBillDeviation", @class = "form-check-input",@disabled="disabled" })
                                                                    <label class="form-check-label" for="DeviationNo">Deviation</label>
                                                                </div>
                                                            </div>

                                                        </div>
                                                    </div>
                                                    <div class="col-lg-12"><hr></div>
                                                    <div class="col-lg-12">
                                                        <div class="form-group">
                                                            <h5 class="mb-3"><span class="h5-number">3.</span>Kindly fill the GTP (Guarantee Technical Particulars) in prescribed format, please do refer bid documents to get the GTP format <span class="required">*</span></h5>
                                                            <div class=" pl-5">
                                                                @Html.TextBoxFor(model => model.GuaranteeTechnicalParticulars, "", new { @type = "file", @onchange = "Validate(this);",@disabled="disabled", @accept = ".jpg,.jpeg,.png,.pdf" })
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="col-lg-12"><hr></div>
                                                    <div class="col-lg-12">
                                                        <div class="form-group">
                                                            <h5 class="mb-3"><span class="h5-number">4.</span>Attach complete GA (General Arrangement) / SLD (Single Line Diagram) <span class="required">*</span></h5>
                                                            <div class=" pl-5">
                                                                @Html.TextBoxFor(model => model.GeneralArrangement, "", new { @type = "file", @onchange = "Validate(this);",@disabled="disabled", @accept = ".jpg,.jpeg,.png,.pdf" })
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="col-lg-12"><hr></div>
                                                    <div class="col-lg-12">
                                                        <div class="form-group">
                                                            <h5 class="mb-3"><span class="h5-number">5.</span>Attach Type Test Certificate</h5>
                                                            <div class=" pl-5">
                                                                @Html.TextBoxFor(model => model.TestCertificate, "", new { @type = "file", @onchange = "Validate(this);",@disabled="disabled", @accept = ".jpg,.jpeg,.png,.pdf" })
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="col-lg-12"><hr></div>
                                                    <div class="col-lg-12">
                                                        <div class="form-group">
                                                            <h5 class="mb-3"><span class="h5-number">6.</span>Delivery schedule after PO/WO placement (Please do mention in terms of weeks) <span class="required">*</span></h5>
                                                            <div class=" pl-5">
                                                                @Html.TextAreaFor(x => x.Deliveryschedule, new { @class = "form-control reset-control", @autocomplete = "off", @readonly = "readonly" })
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="col-lg-12"><hr></div>
                                                    <div class="col-lg-12">
                                                        <div class="form-group">
                                                            <h5 class="mb-3"><span class="h5-number">7.</span>It is advised to carry out the site visit by the bidder for scope clarity, understanding the site constraints, adequacy of BOQ for executing the complete scope etc. <span class="required">*</span></h5>
                                                            <div class="pl-5">
                                                                <div class="form-check form-check-inline">
                                                                    @Html.RadioButtonFor(model => model.SiteVisitDone, "Yes", new { id = "SiteVisitDoneYes", @class = "form-check-input", @checked = "checked",@disabled="disabled" })
                                                                    <label class="form-check-label" for="SiteVisitDoneYes">Site Visit done</label>
                                                                </div>
                                                                <div class="form-check form-check-inline">
                                                                    @Html.RadioButtonFor(model => model.SiteVisitDone, "No", new { id = "SiteVisitDoneNo", @class = "form-check-input",@disabled="disabled" })
                                                                    <label class="form-check-label" for="SiteVisitDoneNo">Site Visit not required</label>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="col-lg-12"><hr></div>
                                                    <div class="col-lg-12">
                                                        <div class="form-group">
                                                            <h5 class="mb-3"><span class="h5-number">8.</span>Demonstration of Product at buyer’s location <span class="required">*</span></h5>
                                                            <div class="pl-5">
                                                                <div class="form-check form-check-inline">
                                                                    @Html.RadioButtonFor(model => model.DemonstrationOfProduct, "Yes", new { id = "DemonstrationOfProductYes", @class = "form-check-input", @checked = "checked",@disabled="disabled" })
                                                                    <label class="form-check-label" for="DemonstrationOfProductYes">Yes</label>
                                                                </div>
                                                                <div class="form-check form-check-inline">
                                                                    @Html.RadioButtonFor(model => model.DemonstrationOfProduct, "No", new { id = "DemonstrationOfProductNo", @class = "form-check-input",@disabled="disabled" })
                                                                    <label class="form-check-label" for="DemonstrationOfProductNo">No</label>
                                                                </div>
                                                                <div class="form-check form-check-inline">
                                                                    @Html.RadioButtonFor(model => model.DemonstrationOfProduct, "Virtual", new { id = "DemonstrationOfProductVirtual", @class = "form-check-input",@disabled="disabled" })
                                                                    <label class="form-check-label" for="DemonstrationOfProductVirtual">Virtual</label>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="col-lg-12"><hr></div>
                                                    <div class="col-lg-12">
                                                        <div class="form-group">
                                                            <h5 class="mb-3"><span class="h5-number">9.</span>Other documents specified in Technical Specification if any.</h5>
                                                            <div class=" pl-5">
                                                                @Html.TextBoxFor(model => model.OtherdocumentsSpecified, "", new { @type = "file", @multiple = "multiple",@disabled="disabled", @onchange = "Validate(this);", @accept = ".jpg,.jpeg,.png,.pdf" })
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="col-lg-12"><hr></div>
                                                    <div class="col-lg-12">
                                                        <div class="form-group">
                                                            <h5 class="mb-3"><span class="h5-number">10.</span>Consolidated Deviation Sheet in prescribed format given in Tender.</h5>
                                                            <div class=" pl-5">
                                                                @Html.TextBoxFor(model => model.ConsolidatedDeviationSheet, "", new { @type = "file", @onchange = "Validate(this);",@disabled="disabled", @accept = ".jpg,.jpeg,.png,.pdf" })
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="form-group">
                                            <div class="col-md-offset-2 col-md-10">
                                                <input type="submit" value="Create" class="btn btn-primary" />
                                            </div>
                                        </div>
                                    </div>
                                }
                            }
                            else
                            {
                                <div class="row">
                                    <div class="col-sm-12">
                                        <p>Your form is created successfully. Check the unique URL/Link</p>
                                        <p>Link: <a href="@bidderlink?id=@Model.FormId">@bidderlink?id=@Model.FormId</a></p>
                                    </div>
                                </div>
                            }
                        </div>
                        <div class="card-footer txt-right">
                            <a href="@itemListing.Url()" class="btn btn-link">@Html.Sitecore().Dictionary("Electricity/ITSR/Back To form Text", "Back To form List")</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </div>
</div>

<div id="loader-wrapper" style="display:none">
    <div id="loader"></div>
    <div class="loader-content" style="text-align:center;"><p><b>Your request is being processed. Please do not press the “Back” or “Refresh” button.</b></p></div>
    <div class="loader-section section-left"></div>
    <div class="loader-section section-right"></div>
</div>

