<!-- Modal -->
@using Sitecore.Mvc.Configuration;
@using Sitecore.Foundation.SitecoreExtensions.Extensions
@model Sitecore.AdaniCapital.Website.Models.FreshdeskCreateTicketModel
<!-- Modal -->
@{
    string IsShow = string.Empty;
    string IsDisplay = string.Empty;
    if (ViewBag.Error != null)
    {
        IsShow = "mode-block";
        IsDisplay = "style=\"display:block\"";

    }
}
<div class="modal fade @IsShow" id="AfterLoginSupportFormModal" tabindex="-1" role="dialog" aria-labelledby="AfterLoginSupportFormModal" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-body bg-white">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">x</span>
                </button>
                @using (Html.BeginRouteForm(MvcSettings.SitecoreRouteName, FormMethod.Post, new { id = "AfterLoginSupportForm", name = "AfterLoginSupportForm", @class = "form-section", enctype = "multipart/form-data" }))
                {
                    @Html.AddUniqueFormId()
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true)
                    @Html.HiddenFor(m => m.PageInfo, new { @Value = HttpContext.Current.Request.Url.AbsoluteUri })
                    @Html.HiddenFor(m => m.FormName, new { @Value = "AfterLoginSupportForm", id = "AfterLoginSupportForm" })
                    <h3 class="mb-4">Raise a query</h3>
                    <div class="row text_container">
                        <div class="col-lg-12 col-md-12">
                            <p id="applyErrorMsg" class="field-validation-error help-block required">@ViewBag.result</p>
                        </div>
                        <div class="col-lg-6 col-md-6">
                            <div class="form-group">
                                @Html.TextBoxFor(model => model.Name, new { @class = "form-control", required = "required", placeholder = "Enter Name*", id = "ReqCallbackName", @readonly="readonly" })
                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "help-block required" }, "p")
                            </div>
                        </div>
                        <div class="col-lg-6 col-md-6">
                            <div class="form-group">
                                @Html.TextBoxFor(model => model.MobileNo, new { @class = "form-control", required = "required", placeholder = "Enter Mobile No*", id = "ReqCallbackMobile", maxlength = "10", type = "number", @readonly = "readonly" })
                                @Html.ValidationMessageFor(model => model.MobileNo, "", new { @class = "help-block required" }, "p")
                            </div>
                        </div>
                        <div class="col-lg-6">
                            <div class="form-group">
                                @Html.TextBoxFor(model => model.LoanAccountNo, new { @class = "form-control", required = "required", placeholder = "Enter LAN*", id = "ReqCallbackLAN" })
                                @Html.ValidationMessageFor(model => model.LoanAccountNo, "", new { @class = "help-block required" }, "p")
                            </div>
                        </div>
                        <div class="col-lg-6">
                            <div class="form-group">
                                @*@Html.TextBoxFor(model => model.BranchDetail, new { @class = "form-control", required = "required", placeholder = "Enter LAN*" })*@
                                <input class="form-control" id="ReqCallbackPincode" name="BranchDetail" placeholder="Enter Pincode*" required="required" type="text" value="">
                                @Html.ValidationMessageFor(model => model.BranchDetail, "", new { @class = "help-block required" }, "p")
                            </div>
                        </div>
                        <div class="col-lg-12">
                            <div class="form-group">
                                @Html.TextBoxFor(model => model.EmailID, new { @class = "form-control", required = "required", placeholder = "Enter Email*", id = "ReqCallbackEmailId" })
                                @Html.ValidationMessageFor(model => model.EmailID, "", new { @class = "help-block required" }, "p")
                            </div>
                        </div>
                        <div class="col-lg-12">
                            <div class="form-group">
                                @Html.TextAreaFor(model => model.Message, new { @class = "form-control", id = "ReqCallbackMessage", required = "required", placeholder = "Message*", maxlength = 150, rows = "3" })
                                @Html.ValidationMessageFor(model => model.Message, "", new { @class = "help-block required" }, "p")
                            </div>
                        </div>
                        <div class="col-lg-6">
                            <div id="recaptcha2"></div>
                            @Html.HiddenFor(model => model.reResponse)
                            @Html.ValidationMessageFor(model => model.reResponse, "", new { @class = "help-block required" }, "p")
                        </div>
                        <div class="col-12 text-right">
                            <button type="submit" name="Submit" id="AfterLoginSupportFormSubmit" value="Submit" class="btn btn-primary">Submit</button>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>