@using Sitecore.Data.Items;
@using Sitecore.Mvc.Configuration;
@using Sitecore.Foundation.Dictionary.Extensions
@using Sitecore.Foundation.SitecoreExtensions.Extensions
@model Sitecore.AdaniCapital.Website.Models.AdaniCapitalContactUsModal
@{
    var datasource = Sitecore.Mvc.Presentation.RenderingContext.Current.Rendering.DataSource;
    var SubjectList = Sitecore.Context.Database.GetItem("{31499C7B-8945-4703-8BD5-14D9831DEA35}");
}
<div class="col-lg-6 py-5 px-5 bg-gray address-form-section">
    <h2 class="section-subheading pl-4 mb-4">Write to us</h2>
    @using (Html.BeginRouteForm(MvcSettings.SitecoreRouteName, FormMethod.Post, new { id = "contactUs_form", name = "contactUs_form", @class = "pl-4 form-section", enctype = "multipart/form-data" }))
    {
        @Html.AddUniqueFormId()
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)
        @Html.HiddenFor(m => m.PageInfo, new { @Value = HttpContext.Current.Request.Url.AbsoluteUri })
        @Html.HiddenFor(m => m.FormName, new { @Value = HttpContext.Current.Request.Url.AbsolutePath })
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.TextBoxFor(model => model.Name, new { @class = "form-control", required = "required", placeholder = "Name*" })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "help-block" }, "p")
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.TextBoxFor(model => model.EmailID, new { @class = "form-control", type = "email", required = "required", placeholder = "Email*" })
                    @Html.ValidationMessageFor(model => model.EmailID, "", new { @class = "help-block" }, "p")
                </div>
            </div>

            <div class="col-md-6 mb-3">
                <div class="form-group">
                    @Html.DropDownListFor(x => x.Subject,new SelectList(Model.SubjectList, "Value", "Text"),"Select Subject*", htmlAttributes: new { @class = "form-control", required = "required" })
                    @Html.ValidationMessageFor(x => x.Subject, "", new { @class = "help-block" }, "p")                    
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.TextBoxFor(model => model.MobileNo, new { @class = "form-control", required = "required", type = "number", placeholder = "Contact Number*", maxlength = 10 })
                    @Html.ValidationMessageFor(model => model.MobileNo, "", new { @class = "help-block" }, "p")
                </div>
            </div>
            <div class="col-md-12">
                <div class="form-group">
                    @Html.TextAreaFor(model => model.Message, new { @class = "form-control", required = "required", placeholder = "Message*", maxlength = 150, rows = "3" })
                </div>
            </div>
            <div class="col-md-6">

                <div id="recaptcha1"></div>
                @Html.HiddenFor(model => model.reResponse, new { id = "reResponse" })
                @Html.ValidationMessageFor(model => model.reResponse, "", new { @class = "help-block" }, "p")
            </div>
            <div class="col-md-12">
                <p class="txt-orange" id="docErrorMessage">@ViewBag.Message</p>
            </div>
            <div class="col-md-6 mb-3 text-right">
                <p><button type="submit" name="Submit" id="btnContactUsSubmit" value="Submit" class="btn btn-primary">Submit</button></p>
            </div>
        </div>
    }
</div>

