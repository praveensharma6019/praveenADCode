@using Sitecore.Foundation.SitecoreExtensions.Extensions
@using Sitecore.Mvc
@using Sitecore.Mvc.Configuration
@using Sitecore.SportsLine.Website
@model Sitecore.SportsLine.Website.Models.SportsLineRegistrationFormModel
@{
    string disp = "";
    disp = "display: none;";
}

<section class="bg-gray py-5">
    <div class="container">
        <h4 class="heading pl-4 mb-4">Write to us</h4>
        <div class="contact-form">
            @using (Html.BeginRouteForm(MvcSettings.SitecoreRouteName, FormMethod.Post, new { id = "registration_form", name = "registration_form", @class = "registration_form", enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(m => m.PageInfo, new { @Value = HttpContext.Current.Request.Url.AbsoluteUri })
                @Html.HiddenFor(m => m.FormName, new { @Value = HttpContext.Current.Request.Url.AbsolutePath })

            <div class="row">
                <div class="col-md-6 mb-3">
                    <div class="form-group">
                        @Html.TextBoxFor(model => model.Name, new { @class = "form-control", required = "required", placeholder = "Name", id = "cname" })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "help-block" }, "p")

                    </div>
                </div>
                <div class="col-md-6 mb-3">
                    <div class="form-group">
                        @Html.TextBoxFor(model => model.LastName, new { @class = "form-control", required = "required", placeholder = "LastName", id = "clastname" })
                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "help-block" }, "p")

                    </div>
                </div>
                <div class="col-md-6 mb-3">
                    <div class="form-group">
                        @Html.TextBoxFor(model => model.EmailID, new { @class = "form-control", type = "email", required = "required", placeholder = "Email", id = "cmailid" })
                        @Html.ValidationMessageFor(model => model.EmailID, "", new { @class = "help-block" }, "p")
                    </div>
                </div>

                <div class="col-md-6 mb-3">
                    <div class="form-group">
                        @Html.TextBoxFor(model => model.MobileNo, new { @class = "form-control", id = "ccontactno", type = "number", required = "required", placeholder = "Contact Number", maxlength = 10 })

                        @Html.ValidationMessageFor(model => model.MobileNo, "", new { @class = "help-block" }, "p")

                    </div>
                </div>
                <div class="col-md-6 mb-3">
                    <div class="form-group">
                        <select class="form-control" id="Gender" name="Gender">
                            <option value="">Select Gender</option>

                            <option value="male">Male</option>
                            <option value="Female">Female</option>


                        </select>


                    </div>
                </div>
                <div class="col-lg-4 col-md-6 mb-2">
                    <div class="form-group">
                        <label>Date of Birth</label>

                        <input class="form-control" id="ContentPlaceHolder1_date" name="DateofBirth" placeholder="DD/MM/YYYY" type="date">
                        @Html.ValidationMessageFor(model => model.DateofBirth, "", new { @class = "help-block" }, "p")

                    </div>
                </div>
                <div class="col-md-6 m">
                    <div class="form-group">
                        @Html.TextAreaFor(model => model.Address, new { @class = "form-control", id = "cAddress", rows = "3", required = "required", placeholder = "Address" })

                    </div>
                </div>
                <div class="col-md-6">
                    <div class="row">
                        <div class="col-md-5 mb-2">
                            <div class="form-check form-check-inline" style="@disp" id="selectsport">
                                <label>Select Sport:</label>
                            </div>
                        </div>
                        <div class="col-md-7 mb-2">
                            @if (Model.SportsTypeList != null)
                            {
                                for (int i = 0; i < Model.SportsTypeList.Count; i++)
                                {
                                    if (i == 0)

                                    {
                                        <div class="form-check form-check-inline" style="@disp" id="cricket">
                                            @Html.HiddenFor(m => m.SportsTypeList[i].Text)
                                            @Html.HiddenFor(m => m.SportsTypeList[i].Value)

                                            @Html.CheckBoxFor(m => Model.SportsTypeList[i].Checked, new { @class = "form-check-input", id = "SegmentServedTypeList_" + @i, data_text = @Model.SportsTypeList[i].Text })
                                            <label class="form-check-label" for="SegmentServedTypeList_" @i>@Model.SportsTypeList[i].Text</label>

                                        </div>
                                    }
                                    else if (i == 1)
                                    {
                                        <div class="form-check form-check-inline" style="@disp" id="football">
                                            @Html.HiddenFor(m => m.SportsTypeList[i].Text)
                                            @Html.HiddenFor(m => m.SportsTypeList[i].Value)

                                            @Html.CheckBoxFor(m => Model.SportsTypeList[i].Checked, new { @class = "form-check-input", id = "SegmentServedTypeList_" + @i, data_text = @Model.SportsTypeList[i].Text })
                                            <label class="form-check-label" for="SegmentServedTypeList_" @i>@Model.SportsTypeList[i].Text</label>

                                        </div>
                                    }
                                    else if (i == 2)
                                    {
                                        <div class="form-check form-check-inline" style="@disp" id="tugofwar">
                                            @Html.HiddenFor(m => m.SportsTypeList[i].Text)
                                            @Html.HiddenFor(m => m.SportsTypeList[i].Value)

                                            @Html.CheckBoxFor(m => Model.SportsTypeList[i].Checked, new { @class = "form-check-input", id = "SegmentServedTypeList_" + @i, data_text = @Model.SportsTypeList[i].Text })
                                            <label class="form-check-label" for="SegmentServedTypeList_" @i>@Model.SportsTypeList[i].Text</label>

                                        </div>
                                    }



                                }
                            }
                        </div>

                    </div>
                </div>

                    <div class="form-group ml-4">
                        <p class="txt-orange" id="docErrorMessage">@ViewBag.Message</p>
                    </div>
                    <div class="form-check mb-2">
                        <input class="form-check-input" type="checkbox" value="" id="defaultCheck2">
                        <label class="form-check-label" for="defaultCheck2">
                            I confirm, I am the resident of Adani Shantigram Township and above 30 year in age.
                        </label>
                    </div>
                    <div class="col-md-4 mb-3">

                        <div id="recaptcha1">

                        </div>

                    </div>
                    @Html.HiddenFor(model => model.reResponse, new { id = "reResponse" })
                    @Html.ValidationMessageFor(model => model.reResponse, "", new { @class = "help-block" }, "p")
                    <div class="col-md-12 mb-3 text-right">
                        <p><button type="submit" id="btnsubmits" name="SubmitApplications" value="submit" class="btn btn-primary">Submit</button></p>
                    </div>
                </div>

                }
            </div>


    </div>
</section>